public class OtherworldlyJourney extends CardImpl {°Ïpublic OtherworldlyJourney(UUID ownerId) {°Ïsuper(ownerId, 37, "Otherworldly Journey", Rarity.UNCOMMON, new CardType[]{CardType.INSTANT}, "{1}{W}");°Ïthis.expansionSetCode = "CHK";°Ïthis.subtype.add("Arcane");°Ïthis.getSpellAbility().addEffect(new OtherworldlyJourneyEffect());°Ïthis.getSpellAbility().addTarget(new TargetCreaturePermanent());°Ï}°Ïpublic OtherworldlyJourney(final OtherworldlyJourney card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic OtherworldlyJourney copy() {°Ïreturn new OtherworldlyJourney(this);°Ï}°Ï}°Ïclass OtherworldlyJourneyEffect extends OneShotEffect {°Ïprivate static final String effectText = "Exile target creature. At the beginning of the next end step, return that card to the battlefield under its owner's control with a +1/+1 counter on it";°ÏOtherworldlyJourneyEffect() {°Ïsuper(Outcome.Benefit);°ÏstaticText = effectText;°Ï}°ÏOtherworldlyJourneyEffect(OtherworldlyJourneyEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPermanent permanent = game.getPermanent(source.getFirstTarget());°Ïif (permanent != null) {°Ïif (permanent.moveToExile(source.getSourceId(), "Otherworldly Journey", source.getSourceId(), game)) {°ÏExileZone exile = game.getExile().getExileZone(source.getSourceId());°Ïif (exile != null && !exile.isEmpty()) {°ÏCard card = game.getCard(permanent.getId());°Ïif (card != null) {°ÏDelayedTriggeredAbility delayedAbility°Ï= new AtTheBeginOfNextEndStepDelayedTriggeredAbility(new OtherworldlyJourneyReturnFromExileEffect(new MageObjectReference(card, game)));°ÏdelayedAbility.setSourceId(source.getSourceId());°ÏdelayedAbility.setControllerId(source.getControllerId());°ÏdelayedAbility.setSourceObject(source.getSourceObject(game), game);°Ïgame.addDelayedTriggeredAbility(delayedAbility);°Ï}°Ï}°Ïreturn true;°Ï}°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic OtherworldlyJourneyEffect copy() {°Ïreturn new OtherworldlyJourneyEffect(this);°Ï}°Ï}°Ïclass OtherworldlyJourneyReturnFromExileEffect extends OneShotEffect {°ÏMageObjectReference objectToReturn;°Ïpublic OtherworldlyJourneyReturnFromExileEffect(MageObjectReference objectToReturn) {°Ïsuper(Outcome.PutCardInPlay);°Ïthis.objectToReturn = objectToReturn;°ÏstaticText = "return that card to the battlefield under its owner's control with a +1/+1 counter on it";°Ï}°Ïpublic OtherworldlyJourneyReturnFromExileEffect(final OtherworldlyJourneyReturnFromExileEffect effect) {°Ïsuper(effect);°Ïthis.objectToReturn = effect.objectToReturn;°Ï}°Ï@Override°Ïpublic OtherworldlyJourneyReturnFromExileEffect copy() {°Ïreturn new OtherworldlyJourneyReturnFromExileEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏCard card = game.getCard(objectToReturn.getSourceId());°Ïif (card != null && objectToReturn.refersTo(card, game)) {°ÏPlayer owner = game.getPlayer(card.getOwnerId());°Ïif (owner != null) {°Ïgame.addEffect(new OtherworldlyJourneyEntersBattlefieldEffect(objectToReturn), source);°Ïowner.moveCards(card, Zone.BATTLEFIELD, source, game, false, false, true, null);°Ï}°Ï}°Ïreturn true;°Ï}°Ï}°Ïclass OtherworldlyJourneyEntersBattlefieldEffect extends ReplacementEffectImpl {°ÏMageObjectReference objectToReturn;°Ïpublic OtherworldlyJourneyEntersBattlefieldEffect(MageObjectReference objectToReturn) {°Ïsuper(Duration.Custom, Outcome.BoostCreature);°Ïthis.objectToReturn = objectToReturn;°ÏstaticText = "that card returns to the battlefield with a +1/+1 counter on it";°Ï}°Ïpublic OtherworldlyJourneyEntersBattlefieldEffect(OtherworldlyJourneyEntersBattlefieldEffect effect) {°Ïsuper(effect);°Ïthis.objectToReturn = effect.objectToReturn;°Ï}°Ï@Override°Ïpublic boolean checksEventType(GameEvent event, Game game) {°Ïreturn EventType.ENTERS_THE_BATTLEFIELD.equals(event.getType());°Ï}°Ï@Override°Ïpublic boolean applies(GameEvent event, Ability source, Game game) {°Ïif (event.getType() == EventType.ENTERS_THE_BATTLEFIELD) {°Ïreturn event.getTargetId().equals(objectToReturn.getSourceId());°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic boolean replaceEvent(GameEvent event, Ability source, Game game) {°ÏPermanent permanent = ((EntersTheBattlefieldEvent) event).getTarget();°Ïif (permanent != null) {°Ïpermanent.addCounters(CounterType.P1P1.createInstance(), game);°Ïdiscard(); °Ï
