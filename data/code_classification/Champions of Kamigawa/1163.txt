public class Mindblaze extends CardImpl {°Ïpublic Mindblaze (UUID ownerId) {°Ïsuper(ownerId, 180, "Mindblaze", Rarity.RARE, new CardType[]{CardType.SORCERY}, "{5}{R}");°Ïthis.expansionSetCode = "CHK";°Ïthis.getSpellAbility().addEffect(new MindblazeEffect());°Ïthis.getSpellAbility().addTarget(new TargetPlayer());°Ï}°Ïpublic Mindblaze (final Mindblaze card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic Mindblaze copy() {°Ïreturn new Mindblaze(this);°Ï}°Ï}°Ïclass MindblazeEffect extends OneShotEffect {°ÏMindblazeEffect() {°Ïsuper(Outcome.Damage);°ÏstaticText = "Name a nonland card and choose a number greater than 0. Target player reveals his or her library. If that library contains exactly the chosen number of the named card, {this} deals 8 damage to that player. Then that player shuffles his or her library";°Ï}°ÏMindblazeEffect(final MindblazeEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPlayer player = game.getPlayer(targetPointer.getFirst(game, source));°ÏPlayer playerControls = game.getPlayer(source.getControllerId());°Ïif (player != null && playerControls != null) {°ÏChoice cardChoice = new ChoiceImpl();°ÏcardChoice.setChoices(CardRepository.instance.getNonLandNames());°ÏcardChoice.clearChoice();°ÏChoice numberChoice = new ChoiceImpl();°ÏnumberChoice.setMessage("Choose a number greater than 0");°ÏHashSet<String> numbers = new HashSet<String>();°Ïfor (int i = 1; i <= 4; i++) {°Ïnumbers.add(Integer.toString(i));°Ï}°ÏnumberChoice.setChoices(numbers);°Ïwhile (!playerControls.choose(Outcome.Neutral, cardChoice, game)) {°Ïif (!playerControls.canRespond()) {°Ïreturn false;°Ï}°Ï}°Ïwhile (!playerControls.choose(Outcome.Neutral, numberChoice, game)) {°Ïif (!playerControls.canRespond()) {°Ïreturn false;°Ï}°Ï}°Ïgame.informPlayers("Mindblaze, named card: [" + cardChoice.getChoice() + "]");°Ïgame.informPlayers("Mindblaze, chosen number: [" + numberChoice.getChoice() + "]");°ÏCards cards = new CardsImpl();°Ïcards.addAll(player.getLibrary().getCards(game));°ÏplayerControls.revealCards("Library", cards, game);°ÏFilterCard filter = new FilterCard();°Ïfilter.add(new NamePredicate(cardChoice.getChoice()));°Ïint count = Integer.parseInt(numberChoice.getChoice());°Ïif (player.getLibrary().count(filter, game) == count) {°Ïplayer.damage(8, source.getSourceId(), game.copy(), false, true);°Ï}°Ïplayer.shuffleLibrary(game);°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic MindblazeEffect copy() {°Ïreturn new MindblazeEffect(this);°Ï}°Ï}°Ï
