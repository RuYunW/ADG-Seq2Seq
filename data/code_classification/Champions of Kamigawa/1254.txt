public class TideOfWar extends CardImpl {°Ïpublic TideOfWar(UUID ownerId) {°Ïsuper(ownerId, 194, "Tide of War", Rarity.RARE, new CardType[]{CardType.ENCHANTMENT}, "{4}{R}{R}");°Ïthis.expansionSetCode = "CHK";°Ïthis.addAbility(new BlocksTriggeredAbility(new TideOfWarEffect(), false));°Ï}°Ïpublic TideOfWar(final TideOfWar card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic TideOfWar copy() {°Ïreturn new TideOfWar(this);°Ï}°Ï}°Ïclass BlocksTriggeredAbility extends TriggeredAbilityImpl {°Ïpublic BlocksTriggeredAbility(Effect effect, boolean optional) {°Ïsuper(Zone.BATTLEFIELD, effect, optional);°Ï}°Ïpublic BlocksTriggeredAbility(final BlocksTriggeredAbility ability) {°Ïsuper(ability);°Ï}°Ï@Override°Ïpublic boolean checkEventType(GameEvent event, Game game) {°Ïreturn event.getType() == EventType.DECLARED_BLOCKERS;°Ï}°Ï@Override°Ïpublic boolean checkTrigger(GameEvent event, Game game) {°Ïfor (CombatGroup combatGroup: game.getCombat().getGroups()) {°Ïif (!combatGroup.getBlockers().isEmpty()) {°Ïreturn true;°Ï}°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic String getRule() {°Ïreturn "Whenever one or more creatures block, " + super.getRule();°Ï}°Ï@Override°Ïpublic BlocksTriggeredAbility copy() {°Ïreturn new BlocksTriggeredAbility(this);°Ï}°Ï}°Ïclass TideOfWarEffect extends OneShotEffect {°Ïpublic TideOfWarEffect() {°Ïsuper(Outcome.Benefit);°Ïthis.staticText = "flip a coin. If you win the flip, each blocking creature is sacrificed by its controller. If you lose the flip, each blocked creature is sacrificed by its controller";°Ï}°Ïpublic TideOfWarEffect(final TideOfWarEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic TideOfWarEffect copy() {°Ïreturn new TideOfWarEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPlayer controller = game.getPlayer(source.getControllerId());°Ïif (controller != null) {°ÏSet<UUID> toSacrifice = new HashSet<UUID>();°Ïif (controller.flipCoin(game)) {°Ïfor (CombatGroup combatGroup: game.getCombat().getGroups()) {°Ïfor (UUID blockerId: combatGroup.getBlockers()) {°ÏtoSacrifice.add(blockerId);°Ï}°Ï}°Ï} else {°Ïfor (CombatGroup combatGroup: game.getCombat().getGroups()) {°Ïif (!combatGroup.getBlockers().isEmpty()) {°Ïfor (UUID attackerId: combatGroup.getAttackers()) {°ÏtoSacrifice.add(attackerId);°Ï}°Ï}°Ï}°Ï}°Ïfor(UUID creatureId: toSacrifice) {°ÏPermanent creature = game.getPermanent(creatureId);°Ïif (creature != null) {°Ïcreature.sacrifice(source.getSourceId(), game);°ÏPlayer player = game.getPlayer(creature.getControllerId());°Ïif (player != null) {°Ïgame.informPlayers(new StringBuilder(player.getLogName()).append(" sacrifices ").append(creature.getName()).toString());°Ï}°Ï}°Ï}°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï}°Ï
