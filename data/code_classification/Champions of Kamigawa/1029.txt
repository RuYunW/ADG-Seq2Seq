public class AkkiLavarunner extends CardImpl {°Ïpublic AkkiLavarunner(UUID ownerId) {°Ïsuper(ownerId, 153, "Akki Lavarunner", Rarity.RARE, new CardType[]{CardType.CREATURE}, "{3}{R}");°Ïthis.expansionSetCode = "CHK";°Ïthis.subtype.add("Goblin");°Ïthis.subtype.add("Warrior");°Ïthis.power = new MageInt(1);°Ïthis.toughness = new MageInt(1);°Ïthis.flipCard = true;°Ïthis.flipCardName = "Tok-Tok, Volcano Born";°Ïthis.addAbility(HasteAbility.getInstance());°Ïthis.addAbility(new AkkiLavarunnerAbility());°Ï}°Ïpublic AkkiLavarunner(final AkkiLavarunner card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic AkkiLavarunner copy() {°Ïreturn new AkkiLavarunner(this);°Ï}°Ï}°Ïclass AkkiLavarunnerAbility extends TriggeredAbilityImpl {°Ïpublic AkkiLavarunnerAbility() {°Ïsuper(Zone.BATTLEFIELD, new FlipSourceEffect(new TokTokVolcanoBorn()));°Ï}°Ïpublic AkkiLavarunnerAbility(final AkkiLavarunnerAbility ability) {°Ïsuper(ability);°Ï}°Ï@Override°Ïpublic AkkiLavarunnerAbility copy() {°Ïreturn new AkkiLavarunnerAbility(this);°Ï}°Ï@Override°Ïpublic boolean checkEventType(GameEvent event, Game game) {°Ïreturn event.getType() == EventType.DAMAGED_PLAYER;°Ï}°Ï@Override°Ïpublic boolean checkTrigger(GameEvent event, Game game) {°ÏDamagedPlayerEvent damageEvent = (DamagedPlayerEvent) event;°Ïreturn damageEvent.isCombatDamage() && this.sourceId.equals(event.getSourceId());°Ï}°Ï@Override°Ïpublic String getRule() {°Ïreturn "Whenever {this} deals damage to an opponent, flip it.";°Ï}°Ï}°Ïclass TokTokVolcanoBorn extends Token {°Ïprivate static final FilterCard filter = new FilterCard("red");°Ïstatic {°Ïfilter.add(new ColorPredicate(ObjectColor.RED));°Ï}°ÏTokTokVolcanoBorn() {°Ïsuper("Tok-Tok, Volcano Born", "");°Ïsupertype.add("Legendary");°ÏcardType.add(CardType.CREATURE);°Ïcolor.setRed(true);°Ïsubtype.add("Goblin");°Ïsubtype.add("Shaman");°Ïpower = new MageInt(2);°Ïtoughness = new MageInt(2);°Ïthis.addAbility(new ProtectionAbility(filter));°Ïthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new TokTokVolcanoBornEffect()));°Ï}°Ï}°Ïclass TokTokVolcanoBornEffect extends ReplacementEffectImpl {°ÏTokTokVolcanoBornEffect() {°Ïsuper(Duration.WhileOnBattlefield, Outcome.Benefit);°ÏstaticText = "If a red source would deal damage to a player, it deals that much damage plus 1 to that player instead";°Ï}°ÏTokTokVolcanoBornEffect(final TokTokVolcanoBornEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic boolean checksEventType(GameEvent event, Game game) {°Ïreturn event.getType() == GameEvent.EventType.DAMAGE_PLAYER;°Ï}°Ï@Override°Ïpublic boolean applies(GameEvent event, Ability source, Game game) {°ÏMageObject sourceObject;°ÏPermanent sourcePermanent = game.getPermanentOrLKIBattlefield(event.getSourceId());°Ïif(sourcePermanent == null) {°ÏsourceObject = game.getObject(event.getSourceId());°Ï}°Ïelse {°ÏsourceObject = sourcePermanent;°Ï}°Ïif (sourceObject != null && sourceObject.getColor(game).isRed()) {°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic boolean replaceEvent(GameEvent event, Ability source, Game game) {°Ïevent.setAmount(event.getAmount() + 1);°Ïreturn false;°Ï}°Ï@Override°Ïpublic TokTokVolcanoBornEffect copy() {°Ïreturn new TokTokVolcanoBornEffect(this);°Ï}°Ï}°Ï
