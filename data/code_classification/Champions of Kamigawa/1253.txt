public class ThroughTheBreach extends CardImpl {°Ïpublic ThroughTheBreach(UUID ownerId) {°Ïsuper(ownerId, 193, "Through the Breach", Rarity.RARE, new CardType[]{CardType.INSTANT}, "{4}{R}");°Ïthis.expansionSetCode = "CHK";°Ïthis.subtype.add("Arcane");°Ïthis.getSpellAbility().addEffect(new ThroughTheBreachEffect());°Ïthis.addAbility(new SpliceOntoArcaneAbility(new ManaCostsImpl("{2}{R}{R}")));°Ï}°Ïpublic ThroughTheBreach(final ThroughTheBreach card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic ThroughTheBreach copy() {°Ïreturn new ThroughTheBreach(this);°Ï}°Ï}°Ïclass ThroughTheBreachEffect extends OneShotEffect {°Ïprivate static final String choiceText = "Put a creature card from your hand onto the battlefield?";°Ïpublic ThroughTheBreachEffect() {°Ïsuper(Outcome.Benefit);°Ïthis.staticText = "You may put a creature card from your hand onto the battlefield. That creature gains haste. Sacrifice that creature at the beginning of the next end step";°Ï}°Ïpublic ThroughTheBreachEffect(final ThroughTheBreachEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic ThroughTheBreachEffect copy() {°Ïreturn new ThroughTheBreachEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPlayer controller = game.getPlayer(source.getControllerId());°Ïif (controller != null) {°Ïif (controller.chooseUse(Outcome.PutCreatureInPlay, choiceText, source, game)) {°ÏTargetCardInHand target = new TargetCardInHand(new FilterCreatureCard());°Ïif (controller.choose(Outcome.PutCreatureInPlay, target, source.getSourceId(), game)) {°ÏCard card = game.getCard(target.getFirstTarget());°Ïif (card != null) {°Ïif (controller.moveCards(card, Zone.BATTLEFIELD, source, game)) {°ÏPermanent permanent = game.getPermanent(card.getId());°Ïif (permanent != null) {°ÏContinuousEffect effect = new GainAbilityTargetEffect(HasteAbility.getInstance(), Duration.Custom);°Ïeffect.setTargetPointer(new FixedTarget(permanent, game));°Ïgame.addEffect(effect, source);°ÏSacrificeTargetEffect sacrificeEffect = new SacrificeTargetEffect("sacrifice " + card.getName(), source.getControllerId());°ÏsacrificeEffect.setTargetPointer(new FixedTarget(permanent, game));°ÏDelayedTriggeredAbility delayedAbility = new AtTheBeginOfNextEndStepDelayedTriggeredAbility(sacrificeEffect);°Ïgame.addDelayedTriggeredAbility(delayedAbility, source);°Ïreturn true;°Ï}°Ï}°Ï}°Ïreturn false;°Ï}°Ï}°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï}°Ï
