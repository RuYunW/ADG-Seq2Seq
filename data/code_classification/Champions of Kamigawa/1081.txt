public class GiftsUngiven extends CardImpl {°Ïpublic GiftsUngiven(UUID ownerId) {°Ïsuper(ownerId, 62, "Gifts Ungiven", Rarity.RARE, new CardType[]{CardType.INSTANT}, "{3}{U}");°Ïthis.expansionSetCode = "CHK";°Ïthis.getSpellAbility().addEffect(new GiftsUngivenEffect());°Ïthis.getSpellAbility().addTarget(new TargetOpponent());°Ï}°Ïpublic GiftsUngiven(final GiftsUngiven card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic GiftsUngiven copy() {°Ïreturn new GiftsUngiven(this);°Ï}°Ï}°Ïclass GiftsUngivenEffect extends OneShotEffect {°Ïpublic GiftsUngivenEffect() {°Ïsuper(Outcome.DrawCard);°Ïthis.staticText = "Search your library for up to four cards with different names and reveal them. Target opponent chooses two of those cards. Put the chosen cards into your graveyard and the rest into your hand. Then shuffle your library";°Ï}°Ïpublic GiftsUngivenEffect(final GiftsUngivenEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic GiftsUngivenEffect copy() {°Ïreturn new GiftsUngivenEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPlayer player = game.getPlayer(source.getControllerId());°ÏCard sourceCard = game.getCard(source.getSourceId());°Ïif (player == null || sourceCard == null) {°Ïreturn false;°Ï}°ÏPlayer opponent = game.getPlayer(getTargetPointer().getFirst(game, source));°Ïif (opponent == null) {°Ïreturn false;°Ï}°ÏGiftsUngivenTarget target = new GiftsUngivenTarget();°Ïif (player.searchLibrary(target, game)) {°Ïif (target.getTargets().size() > 0) {°ÏCards cards = new CardsImpl();°Ïfor (UUID cardId : target.getTargets()) {°ÏCard card = player.getLibrary().remove(cardId, game);°Ïif (card != null) {°Ïcards.add(card);°Ï}°Ï}°Ïplayer.revealCards(sourceCard.getIdName(), cards, game);°ÏCardsImpl cardsToKeep = new CardsImpl();°Ïif (cards.size() > 2) {°ÏcardsToKeep.addAll(cards);°ÏTargetCard targetDiscard = new TargetCard(2, Zone.LIBRARY, new FilterCard("cards to put in graveyard"));°Ïif (opponent.choose(Outcome.Discard, cards, targetDiscard, game)) {°ÏcardsToKeep.removeAll(targetDiscard.getTargets());°Ïcards.removeAll(cardsToKeep);°Ï}°Ï}°Ïplayer.moveCards(cards, Zone.LIBRARY, Zone.GRAVEYARD, source, game);°Ïplayer.moveCards(cardsToKeep, Zone.LIBRARY, Zone.HAND, source, game);°Ï}°Ïplayer.shuffleLibrary(game);°Ïreturn true;°Ï}°Ïplayer.shuffleLibrary(game);°Ïreturn false;°Ï}°Ï}°Ïclass GiftsUngivenTarget extends TargetCardInLibrary {°Ïpublic GiftsUngivenTarget() {°Ïsuper(0, 4, new FilterCard("cards with different names"));°Ï}°Ïpublic GiftsUngivenTarget(final GiftsUngivenTarget target) {°Ïsuper(target);°Ï}°Ï@Override°Ïpublic GiftsUngivenTarget copy() {°Ïreturn new GiftsUngivenTarget(this);°Ï}°Ï@Override°Ïpublic boolean canTarget(UUID id, Cards cards, Game game) {°ÏCard card = cards.get(id, game);°Ïif (card != null) {°Ïfor (UUID targetId : this.getTargets()) {°ÏCard iCard = game.getCard(targetId);°Ïif (iCard != null && iCard.getName().equals(card.getName())) {°Ïreturn false;°Ï}°Ï}°Ïreturn filter.match(card, game);°Ï}°Ïreturn false;°Ï}°Ï}°Ï
