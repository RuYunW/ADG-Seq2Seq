public class DevouringRage extends CardImpl {°Ïprivate static final FilterControlledCreaturePermanent filter = new FilterControlledCreaturePermanent("any number of Spirits");°Ïstatic {°Ïfilter.add(new SubtypePredicate("Spirit"));°Ï}°Ïpublic DevouringRage(UUID ownerId) {°Ïsuper(ownerId, 164, "Devouring Rage", Rarity.COMMON, new CardType[]{CardType.INSTANT}, "{4}{R}");°Ïthis.expansionSetCode = "CHK";°Ïthis.subtype.add("Arcane");°Ïthis.getSpellAbility().addCost(new SacrificeTargetCost(new TargetControlledCreaturePermanent(0, Integer.MAX_VALUE, filter, true)));°Ïthis.getSpellAbility().addEffect(new DevouringRageEffect());°Ïthis.getSpellAbility().addTarget(new TargetCreaturePermanent());°Ï}°Ïpublic DevouringRage(final DevouringRage card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic DevouringRage copy() {°Ïreturn new DevouringRage(this);°Ï}°Ï}°Ïclass DevouringRageEffect extends OneShotEffect {°Ïpublic DevouringRageEffect() {°Ïsuper(Outcome.LoseLife);°Ïthis.staticText = "Target creature gets +3/+0 until end of turn. For each Spirit sacrificed this way, that creature gets an additional +3/+0 until end of turn";°Ï}°Ïpublic DevouringRageEffect(final DevouringRageEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic DevouringRageEffect copy() {°Ïreturn new DevouringRageEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°Ïint numberSpirits = 0;°Ïfor (Cost cost :source.getCosts()) {°Ïif (cost instanceof SacrificeTargetCost) {°ÏnumberSpirits = ((SacrificeTargetCost) cost).getPermanents().size();°Ï}°Ï}°Ïint amount = 3 + (numberSpirits * 3);°ÏPermanent targetCreature = game.getPermanent(getTargetPointer().getFirst(game, source));°Ïif (targetCreature != null) {°ÏContinuousEffect effect = new BoostTargetEffect(amount, 0, Duration.EndOfTurn);°Ïeffect.setTargetPointer(new FixedTarget(targetCreature.getId()));°Ïgame.addEffect(effect, source);°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï}°Ï
