public class HisokasGuard extends CardImpl {°Ïpublic HisokasGuard(UUID ownerId) {°Ïsuper(ownerId, 68, "Hisoka's Guard", Rarity.COMMON, new CardType[]{CardType.CREATURE}, "{1}{U}");°Ïthis.expansionSetCode = "CHK";°Ïthis.subtype.add("Human");°Ïthis.subtype.add("Wizard");°Ïthis.power = new MageInt(1);°Ïthis.toughness = new MageInt(1);°Ïthis.addAbility(new SkipUntapOptionalAbility());°ÏFilterControlledCreaturePermanent filter = new FilterControlledCreaturePermanent();°Ïfilter.add(new AnotherPredicate());°ÏAbility ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new HisokasGuardGainAbilityTargetEffect(), new ManaCostsImpl("{1}{U}"));°Ïability.addCost(new TapSourceCost());°ÏTarget target = new TargetControlledCreaturePermanent(1, 1, filter, true);°Ïability.addTarget(target);°Ïthis.addAbility(ability);°Ï}°Ïpublic HisokasGuard(final HisokasGuard card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic HisokasGuard copy() {°Ïreturn new HisokasGuard(this);°Ï}°Ï}°Ïclass HisokasGuardGainAbilityTargetEffect extends ContinuousEffectImpl {°Ïprotected Ability ability;°Ïpublic HisokasGuardGainAbilityTargetEffect() {°Ïsuper(Duration.WhileOnBattlefield, Layer.AbilityAddingRemovingEffects_6, SubLayer.NA, Outcome.AddAbility);°ÏstaticText = "Target creature you control other than {this} has shroud for as long as {this} remains tapped";°Ïthis.ability = ShroudAbility.getInstance();°Ï}°Ïpublic HisokasGuardGainAbilityTargetEffect(final HisokasGuardGainAbilityTargetEffect effect) {°Ïsuper(effect);°Ïthis.ability = effect.ability.copy();°Ï}°Ï@Override°Ïpublic HisokasGuardGainAbilityTargetEffect copy() {°Ïreturn new HisokasGuardGainAbilityTargetEffect(this);°Ï}°Ï@Override°Ïpublic void init(Ability source, Game game) {°ÏPermanent guardedCreature = game.getPermanent(this.getTargetPointer().getFirst(game, source));°ÏPermanent hisokasGuard = game.getPermanent(source.getSourceId());°Ïif (guardedCreature != null && hisokasGuard != null) {°ÏhisokasGuard.addConnectedCard("HisokasGuard", guardedCreature.getId());°Ï}°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPermanent hisokasGuard = game.getPermanent(source.getSourceId());°Ïif (hisokasGuard != null && hisokasGuard.getConnectedCards("HisokasGuard").size() > 0) {°ÏPermanent guardedCreature = game.getPermanent(hisokasGuard.getConnectedCards("HisokasGuard").get(0));°Ïif (guardedCreature != null && hisokasGuard.isTapped()) {°ÏguardedCreature.addAbility(ability, game);°Ïreturn true;°Ï} else {°Ïif (!hisokasGuard.isTapped()) {°ÏhisokasGuard.clearConnectedCards("HisokasGuard");°Ï}°Ï}°Ï}°Ïreturn false;°Ï}°Ï}°Ï
