public class StudentOfElements extends CardImpl {°Ïpublic StudentOfElements(UUID ownerId) {°Ïsuper(ownerId, 93, "Student of Elements", Rarity.UNCOMMON, new CardType[]{CardType.CREATURE}, "{1}{U}");°Ïthis.expansionSetCode = "CHK";°Ïthis.subtype.add("Human");°Ïthis.subtype.add("Wizard");°Ïthis.power = new MageInt(1);°Ïthis.toughness = new MageInt(1);°Ïthis.flipCard = true;°Ïthis.flipCardName = "Tobita, Master of Winds";°Ïthis.addAbility(new StudentOfElementsHasFlyingAbility());°Ï}°Ïpublic StudentOfElements(final StudentOfElements card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic StudentOfElements copy() {°Ïreturn new StudentOfElements(this);°Ï}°Ï}°Ïclass StudentOfElementsHasFlyingAbility extends StateTriggeredAbility {°Ïpublic StudentOfElementsHasFlyingAbility() {°Ïsuper(Zone.BATTLEFIELD, new FlipSourceEffect(new TobitaMasterOfWinds()));°Ï}°Ïpublic StudentOfElementsHasFlyingAbility(final StudentOfElementsHasFlyingAbility ability) {°Ïsuper(ability);°Ï}°Ï@Override°Ïpublic StudentOfElementsHasFlyingAbility copy() {°Ïreturn new StudentOfElementsHasFlyingAbility(this);°Ï}°Ï@Override°Ïpublic boolean checkTrigger(GameEvent event, Game game) {°ÏPermanent permanent = game.getPermanent(getSourceId());°Ïif(permanent != null && permanent.getAbilities().contains(FlyingAbility.getInstance())){°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic String getRule() {°Ïreturn "When {this} has flying, flip it.";°Ï}°Ï}°Ïclass TobitaMasterOfWinds extends Token {°ÏTobitaMasterOfWinds() {°Ïsuper("Tobita, Master of Winds", "");°Ïsupertype.add("Legendary");°ÏcardType.add(CardType.CREATURE);°Ïcolor.setBlue(true);°Ïsubtype.add("Human");°Ïsubtype.add("Wizard");°Ïpower = new MageInt(3);°Ïtoughness = new MageInt(3);°Ïthis.addAbility(new SimpleStaticAbility(°ÏZone.BATTLEFIELD, new GainAbilityControlledEffect(FlyingAbility.getInstance(), Duration.WhileOnBattlefield, new FilterCreaturePermanent())));°Ï}°Ï}°Ï
