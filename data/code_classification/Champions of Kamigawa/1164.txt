public class MoonringMirror extends CardImpl {°Ïprotected static final String VALUE_PREFIX = "ExileZones";°Ïpublic MoonringMirror(UUID ownerId) {°Ïsuper(ownerId, 262, "Moonring Mirror", Rarity.RARE, new CardType[]{CardType.ARTIFACT}, "{5}");°Ïthis.expansionSetCode = "CHK";°Ïthis.addAbility(new DrawCardControllerTriggeredAbility(new MoonringMirrorExileEffect(), false));°Ïthis.addAbility(new BeginningOfUpkeepTriggeredAbility(new MoonringMirrorEffect(), TargetController.YOU, true));°Ï}°Ïpublic MoonringMirror(final MoonringMirror card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic MoonringMirror copy() {°Ïreturn new MoonringMirror(this);°Ï}°Ï}°Ïclass MoonringMirrorExileEffect extends OneShotEffect {°Ïpublic MoonringMirrorExileEffect() {°Ïsuper(Outcome.Discard);°ÏstaticText = "exile the top card of your library face down";°Ï}°Ïpublic MoonringMirrorExileEffect(final MoonringMirrorExileEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPlayer controller = game.getPlayer(source.getControllerId());°Ïif (controller != null) {°ÏCard card = controller.getLibrary().getFromTop(game);°ÏMageObject sourceObject = source.getSourceObject(game);°Ïif (card != null && sourceObject != null) {°ÏUUID exileZoneId = CardUtil.getExileZoneId(game, source.getSourceId(), source.getSourceObjectZoneChangeCounter());°Ïcard.setFaceDown(true, game);°Ïcontroller.moveCardsToExile(card, source, game, false, exileZoneId, sourceObject.getIdName());°Ïcard.setFaceDown(true, game);°ÏSet<UUID> exileZones = (Set<UUID>) game.getState().getValue(MoonringMirror.VALUE_PREFIX + source.getSourceId().toString());°Ïif (exileZones == null) {°ÏexileZones = new HashSet<>();°Ïgame.getState().setValue(MoonringMirror.VALUE_PREFIX + source.getSourceId().toString(), exileZones);°Ï}°ÏexileZones.add(exileZoneId);°Ïreturn true;°Ï}°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic MoonringMirrorExileEffect copy() {°Ïreturn new MoonringMirrorExileEffect(this);°Ï}°Ï}°Ïclass MoonringMirrorEffect extends OneShotEffect {°Ïpublic MoonringMirrorEffect() {°Ïsuper(Outcome.Benefit);°Ïthis.staticText = "you may exile all cards from your hand face down. If you do, put all other cards you own exiled with {this} into your hand";°Ï}°Ïpublic MoonringMirrorEffect(final MoonringMirrorEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic MoonringMirrorEffect copy() {°Ïreturn new MoonringMirrorEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPlayer controller = game.getPlayer(source.getControllerId());°ÏMageObject sourceObject = source.getSourceObject(game);°Ïif (controller != null && sourceObject != null) {°ÏUUID exileZoneId = CardUtil.getExileZoneId(game, source.getSourceId(), source.getSourceObjectZoneChangeCounter());°ÏCards cardsToHand = null;°Ïif (game.getExile().getExileZone(exileZoneId) != null && game.getExile().getExileZone(exileZoneId).size() > 0) {°ÏcardsToHand = new CardsImpl(game.getExile().getExileZone(exileZoneId));°Ï}°Ïfor (Card card : controller.getHand().getCards(game)) {°Ïcard.setFaceDown(true, game);°Ï}°Ïcontroller.moveCardsToExile(controller.getHand().getCards(game), source, game, false, exileZoneId, sourceObject.getIdName());°Ïif (cardsToHand != null) {°Ïcontroller.moveCards(cardsToHand.getCards(game), Zone.HAND, source, game, false, true, false, null);°Ï}°Ïif (game.getExile().getExileZone(exileZoneId) != null) {°Ïfor (Card card : game.getExile().getExileZone(exileZoneId).getCards(game)) {°Ïcard.setFaceDown(true, game);°Ï}°Ï}°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï}°Ï
