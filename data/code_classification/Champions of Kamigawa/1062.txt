public class DevouringGreed extends CardImpl {°Ïprivate static final FilterControlledCreaturePermanent filter = new FilterControlledCreaturePermanent("any number of Spirits");°Ïstatic {°Ïfilter.add(new SubtypePredicate("Spirit"));°Ï}°Ïpublic DevouringGreed(UUID ownerId) {°Ïsuper(ownerId, 110, "Devouring Greed", Rarity.COMMON, new CardType[]{CardType.SORCERY}, "{2}{B}{B}");°Ïthis.expansionSetCode = "CHK";°Ïthis.subtype.add("Arcane");°Ïthis.getSpellAbility().addCost(new SacrificeTargetCost(new TargetControlledCreaturePermanent(0, Integer.MAX_VALUE, filter, true)));°Ïthis.getSpellAbility().addEffect(new DevouringGreedEffect());°Ïthis.getSpellAbility().addTarget(new TargetPlayer());°Ï}°Ïpublic DevouringGreed(final DevouringGreed card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic DevouringGreed copy() {°Ïreturn new DevouringGreed(this);°Ï}°Ï}°Ïclass DevouringGreedEffect extends OneShotEffect {°Ïpublic DevouringGreedEffect() {°Ïsuper(Outcome.LoseLife);°Ïthis.staticText = "Target player loses 2 life plus 2 life for each Spirit sacrificed this way. You gain that much life";°Ï}°Ïpublic DevouringGreedEffect(final DevouringGreedEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic DevouringGreedEffect copy() {°Ïreturn new DevouringGreedEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°Ïint numberSpirits = 0;°Ïfor (Cost cost :source.getCosts()) {°Ïif (cost instanceof SacrificeTargetCost) {°ÏnumberSpirits += ((SacrificeTargetCost) cost).getPermanents().size();°Ï}°Ï}°Ïint amount = 2 + (numberSpirits * 2);°ÏPlayer targetPlayer = game.getPlayer(getTargetPointer().getFirst(game, source));°ÏPlayer sourcePlayer = game.getPlayer(source.getControllerId());°Ïif (targetPlayer != null && sourcePlayer != null) {°ÏtargetPlayer.loseLife(amount, game);°ÏsourcePlayer.gainLife(amount, game);°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï}°Ï
