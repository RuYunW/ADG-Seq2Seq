public class UbaMask extends CardImpl {°Ïpublic final static String UBA_MASK_VALUE_KEY = "ubaMaskExiledCards";°Ïpublic UbaMask(UUID ownerId) {°Ïsuper(ownerId, 272, "Uba Mask", Rarity.RARE, new CardType[]{CardType.ARTIFACT}, "{4}");°Ïthis.expansionSetCode = "CHK";°Ïthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new UbaMaskReplacementEffect()));°Ïthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new UbaMaskPlayEffect()));°Ï}°Ïpublic UbaMask(final UbaMask card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic UbaMask copy() {°Ïreturn new UbaMask(this);°Ï}°Ï}°Ïclass UbaMaskReplacementEffect extends ReplacementEffectImpl {°ÏUbaMaskReplacementEffect() {°Ïsuper(Duration.WhileOnBattlefield, Outcome.Neutral);°Ïthis.staticText = "If a player would draw a card, that player exiles that card face up instead";°Ï}°ÏUbaMaskReplacementEffect(final UbaMaskReplacementEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic UbaMaskReplacementEffect copy() {°Ïreturn new UbaMaskReplacementEffect(this);°Ï}°Ï@Override°Ïpublic boolean replaceEvent(GameEvent event, Ability source, Game game) {°Ïif (event.getType().equals(GameEvent.EventType.PLAY_TURN)) {°Ïgame.getState().setValue(UbaMask.UBA_MASK_VALUE_KEY, null);°Ïreturn false;°Ï}°ÏMageObject sourceObject = source.getSourceObject(game);°ÏPlayer player = game.getPlayer(event.getPlayerId());°Ïif (player != null && sourceObject != null) {°ÏCard card = player.getLibrary().getFromTop(game);°Ïif (card != null) {°Ïplayer.moveCardsToExile(card, source, game, true, source.getId(), sourceObject.getIdName());°ÏMap<UUID, HashSet<MageObjectReference>> exiledCards = (Map) game.getState().getValue(UbaMask.UBA_MASK_VALUE_KEY);°Ïif (exiledCards == null) {°ÏexiledCards = new HashMap<>();°Ïgame.getState().setValue(UbaMask.UBA_MASK_VALUE_KEY, exiledCards);°Ï}°ÏHashSet<MageObjectReference> exiledCardsByPlayer = exiledCards.get(event.getPlayerId());°Ïif (exiledCardsByPlayer == null) {°ÏexiledCardsByPlayer = new HashSet<>();°ÏexiledCards.put(event.getPlayerId(), exiledCardsByPlayer);°Ï}°ÏexiledCardsByPlayer.add(new MageObjectReference(card.getId(), game));°Ï}°Ï}°Ïreturn true;°Ï}°Ï@Override°Ïpublic boolean checksEventType(GameEvent event, Game game) {°Ïreturn event.getType() == GameEvent.EventType.DRAW_CARD || event.getType() == GameEvent.EventType.PLAY_TURN;°Ï}°Ï@Override°Ïpublic boolean applies(GameEvent event, Ability source, Game game) {°Ïreturn true;°Ï}°Ï}°Ïclass UbaMaskPlayEffect extends AsThoughEffectImpl {°Ïpublic UbaMaskPlayEffect() {°Ïsuper(AsThoughEffectType.PLAY_FROM_NOT_OWN_HAND_ZONE, Duration.EndOfGame, Outcome.Benefit);°ÏstaticText = "Each player may play cards he or she exiled with {this} this turn";°Ï}°Ïpublic UbaMaskPlayEffect(final UbaMaskPlayEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°Ïreturn true;°Ï}°Ï@Override°Ïpublic UbaMaskPlayEffect copy() {°Ïreturn new UbaMaskPlayEffect(this);°Ï}°Ï@Override°Ïpublic boolean applies(UUID objectId, Ability source, UUID affectedControllerId, Game game) {°ÏCard card = game.getCard(objectId);°Ïif (card != null && affectedControllerId.equals(card.getOwnerId()) && game.getState().getZone(card.getId()) == Zone.EXILED) {°ÏMap<UUID, HashSet<MageObjectReference>> exiledCards = (Map) game.getState().getValue(UbaMask.UBA_MASK_VALUE_KEY);°Ïif (exiledCards != null) {°ÏSet<MageObjectReference> exiledCardsByPlayer = exiledCards.get(affectedControllerId);°Ïif (exiledCardsByPlayer != null) {°Ïreturn exiledCardsByPlayer.contains(new MageObjectReference(card, game));°Ï}°Ï}°Ï}°Ïreturn false;°Ï}°Ï}°Ï
