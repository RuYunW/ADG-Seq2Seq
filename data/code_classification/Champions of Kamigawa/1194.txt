public class PainwrackerOni extends CardImpl {¡ìpublic PainwrackerOni (UUID ownerId) {¡ìsuper(ownerId, 136, "Painwracker Oni", Rarity.UNCOMMON, new CardType[]{CardType.CREATURE}, "{3}{B}{B}");¡ìthis.expansionSetCode = "CHK";¡ìthis.subtype.add("Demon");¡ìthis.subtype.add("Spirit");¡ìthis.power = new MageInt(5);¡ìthis.toughness = new MageInt(4);¡ìthis.addAbility(FearAbility.getInstance());¡ìthis.addAbility(new BeginningOfUpkeepTriggeredAbility(new PainwrackerOniEffect(new FilterControlledCreaturePermanent(), 1, ""), TargetController.YOU, false));¡ì}¡ìpublic PainwrackerOni (final PainwrackerOni card) {¡ìsuper(card);¡ì}¡ì@Override¡ìpublic PainwrackerOni copy() {¡ìreturn new PainwrackerOni(this);¡ì}¡ì}¡ìclass PainwrackerOniEffect extends SacrificeControllerEffect {¡ìpublic PainwrackerOniEffect(FilterPermanent filter, int count, String preText) {¡ìsuper(filter, count, preText);¡ìthis.staticText = "sacrifice a creature if you don't control an Ogre";¡ì}¡ìpublic PainwrackerOniEffect(final PainwrackerOniEffect effect) {¡ìsuper(effect);¡ì}¡ì@Override¡ìpublic PainwrackerOniEffect copy() {¡ìreturn new PainwrackerOniEffect(this);¡ì}¡ì@Override¡ìpublic boolean apply(Game game, Ability source) {¡ìif (game.getBattlefield().countAll(new FilterCreaturePermanent("Ogre", "Ogre"), source.getControllerId(), game) < 1) {¡ìreturn super.apply(game, source);¡ì}¡ìreturn true;¡ì}¡ì}¡ì
