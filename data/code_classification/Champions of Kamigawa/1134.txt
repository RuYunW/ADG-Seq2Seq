public class KikiJikiMirrorBreaker extends CardImpl {°Ïprivate static final FilterControlledCreaturePermanent filter = new FilterControlledCreaturePermanent("nonlegendary creature you control");°Ïstatic {°Ïfilter.add(Predicates.not(new SupertypePredicate("Legendary")));°Ï}°Ïpublic KikiJikiMirrorBreaker(UUID ownerId) {°Ïsuper(ownerId, 175, "Kiki-Jiki, Mirror Breaker", Rarity.RARE, new CardType[]{CardType.CREATURE}, "{2}{R}{R}{R}");°Ïthis.expansionSetCode = "CHK";°Ïthis.supertype.add("Legendary");°Ïthis.subtype.add("Goblin");°Ïthis.subtype.add("Shaman");°Ïthis.power = new MageInt(2);°Ïthis.toughness = new MageInt(2);°Ïthis.addAbility(HasteAbility.getInstance());°ÏAbility ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new KikiJikiMirrorBreakerEffect(), new TapSourceCost());°Ïability.addTarget(new TargetControlledCreaturePermanent(1, 1, filter, false));°Ïthis.addAbility(ability);°Ï}°Ïpublic KikiJikiMirrorBreaker(final KikiJikiMirrorBreaker card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic KikiJikiMirrorBreaker copy() {°Ïreturn new KikiJikiMirrorBreaker(this);°Ï}°Ï}°Ïclass KikiJikiMirrorBreakerEffect extends OneShotEffect {°Ïpublic KikiJikiMirrorBreakerEffect() {°Ïsuper(Outcome.PutCreatureInPlay);°Ïthis.staticText = "Put a token that's a copy of target nonlegendary creature you control onto the battlefield. That token has haste. Sacrifice it at the beginning of the next end step";°Ï}°Ïpublic KikiJikiMirrorBreakerEffect(final KikiJikiMirrorBreakerEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic KikiJikiMirrorBreakerEffect copy() {°Ïreturn new KikiJikiMirrorBreakerEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPermanent permanent = game.getPermanentOrLKIBattlefield(source.getFirstTarget());°Ïif (permanent != null) {°ÏPutTokenOntoBattlefieldCopyTargetEffect effect = new PutTokenOntoBattlefieldCopyTargetEffect(source.getControllerId(), null, true);°Ïeffect.setTargetPointer(new FixedTarget(permanent, game));°Ïeffect.apply(game, source);°Ïfor (Permanent addedToken : effect.getAddedPermanent()) {°ÏSacrificeTargetEffect sacrificeEffect = new SacrificeTargetEffect("Sacrifice the token at the beginning of the next end step", source.getControllerId());°ÏsacrificeEffect.setTargetPointer(new FixedTarget(addedToken.getId()));°ÏDelayedTriggeredAbility delayedAbility = new AtTheBeginOfNextEndStepDelayedTriggeredAbility(sacrificeEffect);°ÏdelayedAbility.setSourceId(source.getSourceId());°ÏdelayedAbility.setControllerId(source.getControllerId());°ÏdelayedAbility.setSourceObject(source.getSourceObject(game), game);°Ïgame.addDelayedTriggeredAbility(delayedAbility);°Ï}°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï}°Ï
