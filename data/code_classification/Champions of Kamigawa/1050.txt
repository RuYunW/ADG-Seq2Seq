public class CandlesGlow extends CardImpl {°Ïpublic CandlesGlow(UUID ownerId) {°Ïsuper(ownerId, 5, "Candles' Glow", Rarity.UNCOMMON, new CardType[]{CardType.INSTANT}, "{1}{W}");°Ïthis.expansionSetCode = "CHK";°Ïthis.subtype.add("Arcane");°Ïthis.getSpellAbility().addEffect(new CandlesGlowPreventDamageTargetEffect(Duration.EndOfTurn));°Ïthis.getSpellAbility().addTarget(new TargetCreatureOrPlayer());°Ïthis.addAbility(new SpliceOntoArcaneAbility("{1}{W}"));°Ï}°Ïpublic CandlesGlow(final CandlesGlow card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic CandlesGlow copy() {°Ïreturn new CandlesGlow(this);°Ï}°Ï}°Ïclass CandlesGlowPreventDamageTargetEffect extends PreventionEffectImpl {°Ïprivate int amount = 3;°Ïpublic CandlesGlowPreventDamageTargetEffect(Duration duration) {°Ïsuper(duration);°ÏstaticText = "Prevent the next 3 damage that would be dealt to target creature or player this turn. You gain life equal to the damage prevented this way";°Ï}°Ïpublic CandlesGlowPreventDamageTargetEffect(final CandlesGlowPreventDamageTargetEffect effect) {°Ïsuper(effect);°Ïthis.amount = effect.amount;°Ï}°Ï@Override°Ïpublic CandlesGlowPreventDamageTargetEffect copy() {°Ïreturn new CandlesGlowPreventDamageTargetEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°Ïreturn true;°Ï}°Ï@Override°Ïpublic boolean replaceEvent(GameEvent event, Ability source, Game game) {°ÏGameEvent preventEvent = new GameEvent(GameEvent.EventType.PREVENT_DAMAGE, source.getFirstTarget(), source.getSourceId(), source.getControllerId(), event.getAmount(), false);°Ïif (!game.replaceEvent(preventEvent)) {°Ïint prevented;°Ïif (event.getAmount() >= this.amount) {°Ïint damage = amount;°Ïevent.setAmount(event.getAmount() - amount);°Ïthis.used = true;°Ïgame.fireEvent(GameEvent.getEvent(GameEvent.EventType.PREVENTED_DAMAGE, source.getFirstTarget(), source.getSourceId(), source.getControllerId(), damage));°Ïprevented = damage;°Ï} else {°Ïint damage = event.getAmount();°Ïevent.setAmount(0);°Ïamount -= damage;°Ïgame.fireEvent(GameEvent.getEvent(GameEvent.EventType.PREVENTED_DAMAGE, source.getFirstTarget(), source.getSourceId(), source.getControllerId(), damage));°Ïprevented = damage;°Ï}°Ïif (prevented > 0) {°ÏPlayer controller = game.getPlayer(source.getControllerId());°Ïif (controller != null) {°Ïcontroller.gainLife(prevented, game);°Ïgame.informPlayers(new StringBuilder("Candles' Glow: Prevented ").append(prevented).append(" damage ").toString());°Ïgame.informPlayers(new StringBuilder("Candles' Glow: ").append(controller.getLogName()).append(" gained ").append(prevented).append("life").toString());°Ï}°Ï}°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic boolean applies(GameEvent event, Ability source, Game game) {°Ïif (!this.used && super.applies(event, source, game)) {°Ïif (source.getTargets().getFirstTarget().equals(event.getTargetId())) {°Ïreturn true;°Ï}°Ï}°Ïreturn false;°Ï}°Ï}°Ï
