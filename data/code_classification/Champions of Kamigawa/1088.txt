public class HallOfTheBanditLord extends CardImpl {°Ïpublic HallOfTheBanditLord(UUID ownerId) {°Ïsuper(ownerId, 277, "Hall of the Bandit Lord", Rarity.RARE, new CardType[]{CardType.LAND}, "");°Ïthis.expansionSetCode = "CHK";°Ïthis.supertype.add("Legendary");°Ïthis.addAbility(new EntersBattlefieldTappedAbility());°ÏMana mana = Mana.ColorlessMana(1);°Ïmana.setFlag(true);°ÏManaEffect effect = new BasicManaEffect(mana);°Ïeffect.setText("Add {C} to your mana pool. If that mana is spent on a creature spell, it gains haste");°ÏAbility ability = new SimpleManaAbility(Zone.BATTLEFIELD, effect, new TapSourceCost());°Ïability.addCost(new PayLifeCost(3));°Ïthis.addAbility(ability, new HallOfTheBanditLordWatcher(ability));°Ï}°Ïpublic HallOfTheBanditLord(final HallOfTheBanditLord card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic HallOfTheBanditLord copy() {°Ïreturn new HallOfTheBanditLord(this);°Ï}°Ï}°Ïclass HallOfTheBanditLordWatcher extends Watcher {°Ïprivate final Ability source;°Ïprivate final List<UUID> creatures = new ArrayList<>();°ÏHallOfTheBanditLordWatcher(Ability source) {°Ïsuper("HallOfTheBanditLordWatcher", WatcherScope.CARD);°Ïthis.source = source;°Ï}°ÏHallOfTheBanditLordWatcher(final HallOfTheBanditLordWatcher watcher) {°Ïsuper(watcher);°Ïthis.creatures.addAll(watcher.creatures);°Ïthis.source = watcher.source;°Ï}°Ï@Override°Ïpublic HallOfTheBanditLordWatcher copy() {°Ïreturn new HallOfTheBanditLordWatcher(this);°Ï}°Ï@Override°Ïpublic void watch(GameEvent event, Game game) {°Ïif (event.getType() == EventType.MANA_PAYED) {°ÏMageObject target = game.getObject(event.getTargetId());°Ïif (event.getSourceId() != null°Ï&& event.getSourceId().equals(this.getSourceId())°Ï&& target != null && target.getCardType().contains(CardType.CREATURE)°Ï&& event.getFlag()) {°Ïif (target instanceof Spell) {°Ïthis.creatures.add(((Spell) target).getCard().getId());°Ï}°Ï}°Ï}°Ïif (event.getType() == EventType.COUNTERED) {°Ïif (creatures.contains(event.getTargetId())) {°Ïcreatures.remove(event.getSourceId());°Ï}°Ï}°Ïif (event.getType() == EventType.ZONE_CHANGE) {°Ïif (creatures.contains(event.getSourceId())) {°ÏZoneChangeEvent zEvent = (ZoneChangeEvent) event;°Ïif (zEvent.getToZone() == Zone.STACK) {°Ïcreatures.remove(event.getSourceId());°Ï}°Ï}°Ï}°Ïif (event.getType() == EventType.ENTERS_THE_BATTLEFIELD) {°Ïif (creatures.contains(event.getSourceId())) {°ÏContinuousEffect effect = new GainAbilityTargetEffect(HasteAbility.getInstance(), Duration.Custom);°Ïeffect.setTargetPointer(new FixedTarget(event.getSourceId()));°Ïgame.addEffect(effect, source);°Ïcreatures.remove(event.getSourceId());°Ï}°Ï}°Ï}°Ï@Override°Ïpublic void reset() {°Ïsuper.reset();°Ïcreatures.clear();°Ï}°Ï}°Ï
