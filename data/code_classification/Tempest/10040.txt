public class DreamCache extends CardImpl {°Ïpublic DreamCache(UUID ownerId) {°Ïsuper(ownerId, 59, "Dream Cache", Rarity.COMMON, new CardType[]{CardType.SORCERY}, "{2}{U}");°Ïthis.expansionSetCode = "TMP";°Ïthis.getSpellAbility().addEffect(new DreamCacheEffect());°Ï}°Ïpublic DreamCache(final DreamCache card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic DreamCache copy() {°Ïreturn new DreamCache(this);°Ï}°Ï}°Ïclass DreamCacheEffect extends OneShotEffect {°Ïpublic DreamCacheEffect() {°Ïsuper(Outcome.DrawCard);°Ïthis.staticText = "Draw three cards, then put two cards from your hand both on top of your library or both on the bottom of your library.";°Ï}°Ïpublic DreamCacheEffect(final DreamCacheEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic DreamCacheEffect copy() {°Ïreturn new DreamCacheEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPlayer controller = game.getPlayer(source.getControllerId());°Ïif (controller != null) {°Ïcontroller.drawCards(3, game);°Ïboolean putOnTop = controller.chooseUse(Outcome.Neutral, "Put cards on top?", source, game);°ÏTargetCardInHand target = new TargetCardInHand(2, 2, new FilterCard());°Ïcontroller.chooseTarget(Outcome.Detriment, target, source, game);°ÏCards cardsToLibrary = new CardsImpl(target.getTargets());°Ïif (!cardsToLibrary.isEmpty()) {°Ïif (putOnTop) {°Ïcontroller.putCardsOnTopOfLibrary(cardsToLibrary, game, source, false);°Ï} else {°Ïcontroller.putCardsOnBottomOfLibrary(cardsToLibrary, game, source, false);°Ï}°Ï}°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï}°Ï
