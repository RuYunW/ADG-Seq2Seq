public class OracleEnVec extends CardImpl {°Ïpublic OracleEnVec(UUID ownerId) {°Ïsuper(ownerId, 243, "Oracle en-Vec", Rarity.RARE, new CardType[]{CardType.CREATURE}, "{1}{W}");°Ïthis.expansionSetCode = "TMP";°Ïthis.subtype.add("Human");°Ïthis.subtype.add("Wizard");°Ïthis.power = new MageInt(1);°Ïthis.toughness = new MageInt(1);°ÏAbility ability = new ActivateIfConditionActivatedAbility(Zone.BATTLEFIELD, new OracleEnVecEffect(), new TapSourceCost(), MyTurnCondition.getInstance());°Ïability.addTarget(new TargetOpponent());°Ïthis.addAbility(ability, new AttackedThisTurnWatcher());°Ï}°Ïpublic OracleEnVec(final OracleEnVec card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic OracleEnVec copy() {°Ïreturn new OracleEnVec(this);°Ï}°Ï}°Ïclass OracleEnVecEffect extends OneShotEffect {°ÏOracleEnVecEffect() {°Ïsuper(Outcome.Benefit);°Ïthis.staticText = "Target opponent chooses any number of creatures he or she controls. During that player's next turn, the chosen creatures attack if able, and other creatures can't attack. At the beginning of that turn's end step, destroy each of the chosen creatures that didn't attack";°Ï}°ÏOracleEnVecEffect(final OracleEnVecEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic OracleEnVecEffect copy() {°Ïreturn new OracleEnVecEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPlayer opponent = game.getPlayer(this.getTargetPointer().getFirst(game, source));°Ïif (opponent != null) {°ÏTarget target = new TargetControlledCreaturePermanent(0, Integer.MAX_VALUE, new FilterControlledCreaturePermanent(), true);°Ïif (target.choose(Outcome.Neutral, opponent.getId(), source.getSourceId(), game)) {°Ïfor (Permanent permanent : game.getBattlefield().getActivePermanents(new FilterControlledCreaturePermanent(), opponent.getId(), source.getSourceId(), game)) {°Ïif (target.getTargets().contains(permanent.getId())) {°ÏRequirementEffect effect = new OracleEnVecMustAttackRequirementEffect();°Ïeffect.setTargetPointer(new FixedTarget(permanent.getId()));°Ïgame.addEffect(effect, source);°Ï}°Ïelse {°ÏRestrictionEffect effect = new OracleEnVecCantAttackRestrictionEffect();°Ïeffect.setTargetPointer(new FixedTarget(permanent.getId()));°Ïgame.addEffect(effect, source);°Ï}°Ï}°ÏDelayedTriggeredAbility delayedAbility = new OracleEnVecDelayedTriggeredAbility(game.getTurnNum(), target.getTargets());°ÏdelayedAbility.setSourceId(source.getSourceId());°ÏdelayedAbility.setControllerId(source.getControllerId());°ÏdelayedAbility.setSourceObject(source.getSourceObject(game), game);°Ïgame.addDelayedTriggeredAbility(delayedAbility);°Ïreturn true;°Ï}°Ï}°Ïreturn false;°Ï}°Ï}°Ïclass OracleEnVecMustAttackRequirementEffect extends RequirementEffect {°ÏOracleEnVecMustAttackRequirementEffect() {°Ïsuper(Duration.Custom);°Ï}°ÏOracleEnVecMustAttackRequirementEffect(final OracleEnVecMustAttackRequirementEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic OracleEnVecMustAttackRequirementEffect copy() {°Ïreturn new OracleEnVecMustAttackRequirementEffect(this);°Ï}°Ï@Override°Ïpublic boolean applies(Permanent permanent, Ability source, Game game) {°Ïreturn this.getTargetPointer().getFirst(game, source).equals(permanent.getId());°Ï}°Ï@Override°Ïpublic boolean mustAttack(Game game) {°Ïreturn true;°Ï}°Ï@Override°Ïpublic boolean mustBlock(Game game) {°Ïreturn false;°Ï}°Ï@Override°Ïpublic boolean isInactive(Ability source, Game game) {°Ïreturn startingTurn != game.getTurnNum()°Ï&& (game.getPhase().getType() == TurnPhase.END°Ï&& game.getActivePlayerId().equals(this.getTargetPointer().getFirst(game, source)));°Ï}°Ï@Override°Ïpublic String getText(Mode mode) {°Ïreturn "{this} attack if able.";°Ï}°Ï}°Ïclass OracleEnVecCantAttackRestrictionEffect extends RestrictionEffect {°ÏOracleEnVecCantAttackRestrictionEffect() {°Ïsuper(Duration.Custom);°Ï}°ÏOracleEnVecCantAttackRestrictionEffect(final OracleEnVecCantAttackRestrictionEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic OracleEnVecCantAttackRestrictionEffect copy() {°Ïreturn new OracleEnVecCantAttackRestrictionEffect(this);°Ï}°Ï@Override°Ïpublic boolean applies(Permanent permanent, Ability source, Game game) {°Ïreturn this.getTargetPointer().getFirst(game, source).equals(permanent.getId());°Ï}°Ï@Override°Ïpublic boolean canAttack(Game game) {°Ïreturn false;°Ï}°Ï@Override°Ïpublic boolean isInactive(Ability source, Game game) {°Ïreturn startingTurn != game.getTurnNum()°Ï&& (game.getPhase().getType() == TurnPhase.END°Ï&& game.getActivePlayerId().equals(this.getTargetPointer().getFirst(game, source)));°Ï}°Ï@Override°Ïpublic String getText(Mode mode) {°Ïreturn "{this} can't attack.";°Ï}°Ï}°Ïclass OracleEnVecDelayedTriggeredAbility extends DelayedTriggeredAbility {°Ïprivate final int startingTurn;°ÏOracleEnVecDelayedTriggeredAbility(int startingTurn, List<UUID> chosenCreatures) {°Ïsuper(new OracleEnVecDestroyEffect(chosenCreatures), Duration.EndOfGame, true);°Ïthis.startingTurn = startingTurn;°Ï}°ÏOracleEnVecDelayedTriggeredAbility(final OracleEnVecDelayedTriggeredAbility ability) {°Ïsuper(ability);°Ïthis.startingTurn = ability.startingTurn;°Ï}°Ï@Override°Ïpublic boolean checkEventType(GameEvent event, Game game) {°Ïreturn event.getType() == GameEvent.EventType.END_TURN_STEP_PRE;°Ï}°Ï@Override°Ïpublic boolean checkTrigger(GameEvent event, Game game) {°Ïreturn startingTurn != game.getTurnNum() && game.getActivePlayerId().equals(event.getPlayerId());°Ï}°Ï@Override°Ïpublic OracleEnVecDelayedTriggeredAbility copy() {°Ïreturn new OracleEnVecDelayedTriggeredAbility(this);°Ï}°Ï@Override°Ïpublic String getRule() {°Ïreturn "At the beginning of that turn's end step, destroy each of the chosen creatures that didn't attack.";°Ï}°Ï}°Ïclass OracleEnVecDestroyEffect extends OneShotEffect {°Ïprivate final List<UUID> chosenCreatures;°ÏOracleEnVecDestroyEffect(List<UUID> chosenCreatures) {°Ïsuper(Outcome.DestroyPermanent);°Ïthis.chosenCreatures = chosenCreatures;°Ïthis.staticText = "destroy each of the chosen creatures that didn't attack";°Ï}°ÏOracleEnVecDestroyEffect(final OracleEnVecDestroyEffect effect) {°Ïsuper(effect);°Ïthis.chosenCreatures = effect.chosenCreatures;°Ï}°Ï@Override°Ïpublic OracleEnVecDestroyEffect copy() {°Ïreturn new OracleEnVecDestroyEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏAttackedThisTurnWatcher watcher = (AttackedThisTurnWatcher) game.getState().getWatchers().get("AttackedThisTurn");°Ïif (watcher != null) {°Ïfor (UUID targetId : chosenCreatures) {°Ïif (!watcher.getAttackedThisTurnCreatures().contains(targetId)) {°ÏEffect effect = new DestroyTargetEffect();°Ïeffect.setTargetPointer(new FixedTarget(targetId));°Ïeffect.apply(game, source);°Ï}°Ï}°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï}°Ï
