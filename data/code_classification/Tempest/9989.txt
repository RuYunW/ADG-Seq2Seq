public class Aluren extends CardImpl {°Ïprivate static final FilterCreatureCard filter = new FilterCreatureCard("creature cards with converted mana cost 3 or less");°Ïstatic {°Ïfilter.add(new ConvertedManaCostPredicate(ComparisonType.LessThan, 4));°Ï}°Ïpublic Aluren(UUID ownerId) {°Ïsuper(ownerId, 107, "Aluren", Rarity.RARE, new CardType[]{CardType.ENCHANTMENT}, "{2}{G}{G}");°Ïthis.expansionSetCode = "TMP";°ÏAbility ability = new SimpleStaticAbility(Zone.BATTLEFIELD, new AlurenRuleEffect());°ÏEffect effect = new CastAsThoughItHadFlashAllEffect(Duration.WhileOnBattlefield, filter, true);°Ïeffect.setText("and as though they had flash");°Ïability.addEffect(effect);°Ïthis.addAbility(ability);°Ï}°Ïpublic Aluren(final Aluren card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic Aluren copy() {°Ïreturn new Aluren(this);°Ï}°Ï}°Ïclass AlurenRuleEffect extends ContinuousEffectImpl {°Ïprivate static final FilterCreatureCard filter = new FilterCreatureCard("creature cards with converted mana cost 3 or less");°Ïstatic {°Ïfilter.add(new ConvertedManaCostPredicate(ComparisonType.LessThan, 4));°Ï}°Ïstatic AlternativeCostSourceAbility alternativeCastingCostAbility = new AlternativeCostSourceAbility(null, SourceIsSpellCondition.getInstance(), null, filter, true);°Ïpublic AlurenRuleEffect() {°Ïsuper(Duration.WhileOnBattlefield, Outcome.Detriment);°ÏstaticText = "Any player may play creature cards with converted mana cost 3 or less without paying their mana cost";°Ï}°Ïpublic AlurenRuleEffect(final AlurenRuleEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic AlurenRuleEffect copy() {°Ïreturn new AlurenRuleEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Layer layer, SubLayer sublayer, Ability source, Game game) {°ÏPlayer controller = game.getPlayer(source.getControllerId());°Ïif (controller != null) {°Ïfor (UUID playerId: game.getState().getPlayersInRange(controller.getId(), game)){°ÏPlayer player = game.getPlayer(playerId);°Ïif (player != null) {°Ïplayer.getAlternativeSourceCosts().add(alternativeCastingCostAbility);°Ï}°Ï}°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°Ïreturn false;°Ï}°Ï@Override°Ïpublic boolean hasLayer(Layer layer) {°Ïreturn layer == Layer.RulesEffects;°Ï}°Ï}°Ï
