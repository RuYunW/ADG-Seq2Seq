public class SoltariGuerrillas extends CardImpl {°Ïpublic SoltariGuerrillas(UUID ownerId) {°Ïsuper(ownerId, 347, "Soltari Guerrillas", Rarity.RARE, new CardType[]{CardType.CREATURE}, "{2}{R}{W}");°Ïthis.expansionSetCode = "TMP";°Ïthis.subtype.add("Soltari");°Ïthis.subtype.add("Soldier");°Ïthis.power = new MageInt(3);°Ïthis.toughness = new MageInt(2);°Ïthis.addAbility(ShadowAbility.getInstance());°ÏAbility ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new SoltariGuerrillasReplacementEffect(), new GenericManaCost(0));°Ïability.addTarget(new TargetCreaturePermanent());°Ïthis.addAbility(ability);°Ï}°Ïpublic SoltariGuerrillas(final SoltariGuerrillas card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic SoltariGuerrillas copy() {°Ïreturn new SoltariGuerrillas(this);°Ï}°Ï}°Ïclass SoltariGuerrillasReplacementEffect extends PreventionEffectImpl {°ÏSoltariGuerrillasReplacementEffect() {°Ïsuper(Duration.EndOfTurn, Integer.MAX_VALUE, true, false);°ÏstaticText = "The next time {this} would deal combat damage to an opponent this turn, it deals that damage to target creature instead";°Ï}°ÏSoltariGuerrillasReplacementEffect(final SoltariGuerrillasReplacementEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic boolean checksEventType(GameEvent event, Game game) {°Ïreturn event.getType() == GameEvent.EventType.DAMAGE_PLAYER;°Ï}°Ï@Override°Ïpublic boolean applies(GameEvent event, Ability source, Game game) {°Ïif (event.getSourceId().equals(source.getSourceId())) {°ÏPlayer controller = game.getPlayer(source.getControllerId());°Ïreturn controller.hasOpponent(event.getTargetId(), game);°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic boolean replaceEvent(GameEvent event, Ability source, Game game) {°ÏPreventionEffectData preventionResult = preventDamageAction(event, source, game);°Ïif (preventionResult.getPreventedDamage() > 0) {°ÏPermanent redirectTo = game.getPermanent(getTargetPointer().getFirst(game, source));°Ïif (redirectTo != null) {°Ïgame.informPlayers("Dealing " + preventionResult.getPreventedDamage() + " to " + redirectTo.getLogName() + " instead.");°ÏDamageEvent damageEvent = (DamageEvent) event;°ÏredirectTo.damage(preventionResult.getPreventedDamage(), event.getSourceId(), game, damageEvent.isCombatDamage(), damageEvent.isPreventable(), event.getAppliedEffects());°Ï}°Ïdiscard(); °Ï
