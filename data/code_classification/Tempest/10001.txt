public class BloodFrenzy extends CardImpl {°Ïpublic BloodFrenzy(UUID ownerId) {°Ïsuper(ownerId, 164, "Blood Frenzy", Rarity.COMMON, new CardType[]{CardType.INSTANT}, "{1}{R}");°Ïthis.expansionSetCode = "TMP";°ÏAbility ability = new SimpleStaticAbility(Zone.ALL, new BloodFrenzyCastRestriction());°Ïability.setRuleAtTheTop(true);°Ïthis.addAbility(ability);°Ïthis.getSpellAbility().addEffect(new BoostTargetEffect(4, 0, Duration.EndOfTurn));°Ïthis.getSpellAbility().addEffect(new DestroyTargetAtBeginningOfNextEndStepEffect());°Ïthis.getSpellAbility().addTarget(new TargetAttackingOrBlockingCreature());°Ï}°Ïpublic BloodFrenzy(final BloodFrenzy card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic BloodFrenzy copy() {°Ïreturn new BloodFrenzy(this);°Ï}°Ï}°Ïclass BloodFrenzyCastRestriction extends ContinuousRuleModifyingEffectImpl {°ÏBloodFrenzyCastRestriction() {°Ïsuper(Duration.EndOfGame, Outcome.Detriment);°ÏstaticText = "Cast {this} only before the combat damage step";°Ï}°ÏBloodFrenzyCastRestriction(final BloodFrenzyCastRestriction effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic BloodFrenzyCastRestriction copy() {°Ïreturn new BloodFrenzyCastRestriction(this);°Ï}°Ï@Override°Ïpublic boolean checksEventType(GameEvent event, Game game) {°Ïreturn event.getType().equals(GameEvent.EventType.CAST_SPELL);°Ï}°Ï@Override°Ïpublic boolean applies(GameEvent event, Ability source, Game game) {°Ïif(event.getSourceId().equals(source.getSourceId())) {°Ïif(game.getPhase().getType().equals(TurnPhase.COMBAT)°Ï&& (game.getStep().getType().equals(PhaseStep.DECLARE_ATTACKERS)°Ï|| game.getStep().getType().equals(PhaseStep.DECLARE_BLOCKERS))) {°Ïreturn false;°Ï}°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°Ïreturn true;°Ï}°Ï}°Ï
