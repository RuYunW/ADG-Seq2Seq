public class SpiritMirror extends CardImpl {°Ïprivate static final FilterPermanent filter = new FilterPermanent("Reflection");°Ïstatic {°Ïfilter.add(new NamePredicate("Reflection"));°Ïfilter.add(new TokenPredicate());°Ï}°Ïpublic SpiritMirror(UUID ownerId) {°Ïsuper(ownerId, 260, "Spirit Mirror", Rarity.RARE, new CardType[]{CardType.ENCHANTMENT}, "{2}{W}{W}");°Ïthis.expansionSetCode = "TMP";°Ïthis.addAbility(new ConditionalTriggeredAbility(°Ïnew BeginningOfUpkeepTriggeredAbility(new CreateTokenEffect(new ReflectionToken()), TargetController.YOU, false),°Ïnew PermanentsOnTheBattlefieldCondition(filter, PermanentsOnTheBattlefieldCondition.CountType.EQUAL_TO, 0, false),°Ï"At the beginning of your upkeep, if there are no Reflection tokens on the battlefield, put a 2/2 white Reflection creature token onto the battlefield"));°ÏAbility ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new DestroyTargetEffect(), new GenericManaCost(0));°Ïability.addTarget(new TargetPermanent(filter));°Ïthis.addAbility(ability);°Ï}°Ïpublic SpiritMirror(final SpiritMirror card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic SpiritMirror copy() {°Ïreturn new SpiritMirror(this);°Ï}°Ï}°Ïclass ReflectionToken extends Token {°Ïpublic ReflectionToken() {°Ïsuper("Reflection", "2/2 white Reflection creature token");°Ïthis.setOriginalExpansionSetCode("TMP");°ÏcardType.add(CardType.CREATURE);°Ïcolor.setWhite(true);°Ïsubtype.add("Reflection");°Ïpower = new MageInt(2);°Ïtoughness = new MageInt(2);°Ï}°Ï}°Ï
