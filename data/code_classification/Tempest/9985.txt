public class AbandonHope extends CardImpl {¡ìpublic AbandonHope(UUID ownerId) {¡ìsuper(ownerId, 1, "Abandon Hope", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, "{X}{1}{B}");¡ìthis.expansionSetCode = "TMP";¡ìAbility ability = new SimpleStaticAbility(Zone.ALL, new AbandonHopeRuleEffect());¡ìability.setRuleAtTheTop(true);¡ìthis.addAbility(ability);¡ìManacostVariableValue manaX = new ManacostVariableValue();¡ìthis.getSpellAbility().addEffect(new DiscardCardYouChooseTargetEffect(manaX, TargetController.ANY));¡ìthis.getSpellAbility().addTarget(new TargetPlayer());¡ì}¡ìpublic AbandonHope(final AbandonHope card) {¡ìsuper(card);¡ì}¡ì@Override¡ìpublic void adjustCosts(Ability ability, Game game) {¡ìint xValue = ability.getManaCostsToPay().getX();¡ìif (xValue > 0) {¡ìability.addCost(new DiscardTargetCost(new TargetCardInHand(xValue, xValue, new FilterCard("cards"))));¡ì}¡ì}¡ì@Override¡ìpublic AbandonHope copy() {¡ìreturn new AbandonHope(this);¡ì}¡ì}¡ìclass AbandonHopeRuleEffect extends OneShotEffect {¡ìpublic AbandonHopeRuleEffect() {¡ìsuper(Outcome.Benefit);¡ìthis.staticText = "As an additional cost to cast {this}, discard X cards";¡ì}¡ìpublic AbandonHopeRuleEffect(final AbandonHopeRuleEffect effect) {¡ìsuper(effect);¡ì}¡ì@Override¡ìpublic AbandonHopeRuleEffect copy() {¡ìreturn new AbandonHopeRuleEffect(this);¡ì}¡ì@Override¡ìpublic boolean apply(Game game, Ability source) {¡ìreturn true;¡ì}¡ì}¡ì
