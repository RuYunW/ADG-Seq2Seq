public class AltarOfDementia extends CardImpl {¡ìprivate static final FilterControlledPermanent filter = new FilterControlledPermanent("creature");¡ìstatic {¡ìfilter.add(new CardTypePredicate(CardType.CREATURE));¡ì}¡ìpublic AltarOfDementia(UUID ownerId) {¡ìsuper(ownerId, 266, "Altar of Dementia", Rarity.RARE, new CardType[]{CardType.ARTIFACT}, "{2}");¡ìthis.expansionSetCode = "TMP";¡ìAbility ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new AltarOfDementiaEffect(), new SacrificeTargetCost(new TargetControlledPermanent(filter)));¡ìability.addTarget(new TargetPlayer());¡ìthis.addAbility(ability);¡ì}¡ìpublic AltarOfDementia(final AltarOfDementia card) {¡ìsuper(card);¡ì}¡ì@Override¡ìpublic AltarOfDementia copy() {¡ìreturn new AltarOfDementia(this);¡ì}¡ì}¡ìclass AltarOfDementiaEffect extends OneShotEffect {¡ìpublic AltarOfDementiaEffect() {¡ìsuper(Outcome.Damage);¡ìstaticText = "Target player puts a number of cards equal to the sacrificed creature's power from the top of his or her library into his or her graveyard";¡ì}¡ìpublic AltarOfDementiaEffect(final AltarOfDementiaEffect effect) {¡ìsuper(effect);¡ì}¡ì@Override¡ìpublic boolean apply(Game game, Ability source) {¡ìPlayer player = game.getPlayer(source.getFirstTarget());¡ìif (player != null) {¡ìint amount = 0;¡ìfor (Cost cost: source.getCosts()) {¡ìif (cost instanceof SacrificeTargetCost && ((SacrificeTargetCost)cost).getPermanents().size() > 0) {¡ìamount = ((SacrificeTargetCost)cost).getPermanents().get(0).getPower().getValue();¡ìbreak;¡ì}¡ì}¡ìif (amount > 0) {¡ìplayer.moveCards(player.getLibrary().getTopCards(game, amount), Zone.LIBRARY, Zone.GRAVEYARD, source, game);¡ì}¡ìreturn true;¡ì}¡ìreturn false;¡ì}¡ì@Override¡ìpublic AltarOfDementiaEffect copy() {¡ìreturn new AltarOfDementiaEffect(this);¡ì}¡ì}¡ì
