public class Dracoplasm extends CardImpl {°Ïpublic Dracoplasm(UUID ownerId) {°Ïsuper(ownerId, 341, "Dracoplasm", Rarity.RARE, new CardType[]{CardType.CREATURE}, "{U}{R}");°Ïthis.expansionSetCode = "TMP";°Ïthis.subtype.add("Shapeshifter");°Ïthis.power = new MageInt(0);°Ïthis.toughness = new MageInt(0);°Ïthis.addAbility(FlyingAbility.getInstance());°Ïthis.addAbility(new SimpleStaticAbility(Zone.ALL, new DracoplasmEffect()));°Ïthis.addAbility(new SimpleActivatedAbility(Zone.BATTLEFIELD, new BoostSourceEffect(1, 0, Duration.EndOfTurn), new ColoredManaCost(ColoredManaSymbol.R)));°Ï}°Ïpublic Dracoplasm(final Dracoplasm card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic Dracoplasm copy() {°Ïreturn new Dracoplasm(this);°Ï}°Ï}°Ïclass DracoplasmEffect extends ReplacementEffectImpl {°Ïprivate static final FilterControlledCreaturePermanent filter = new FilterControlledCreaturePermanent();°Ïstatic {°Ïfilter.add(new AnotherPredicate());°Ï}°Ïpublic DracoplasmEffect() {°Ïsuper(Duration.EndOfGame, Outcome.BoostCreature);°Ïthis.staticText = "As {this} enters the battlefield, sacrifice any number of creatures. {this}'s power becomes the total power of those creatures and its toughness becomes their total toughness";°Ï}°Ïpublic DracoplasmEffect(final DracoplasmEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic DracoplasmEffect copy() {°Ïreturn new DracoplasmEffect(this);°Ï}°Ï@Override°Ïpublic boolean checksEventType(GameEvent event, Game game) {°Ïreturn event.getType() == GameEvent.EventType.ENTERS_THE_BATTLEFIELD;°Ï}°Ï@Override°Ïpublic boolean applies(GameEvent event, Ability source, Game game) {°Ïreturn event.getTargetId().equals(source.getSourceId());°Ï}°Ï@Override°Ïpublic boolean replaceEvent(GameEvent event, Ability source, Game game) {°ÏPermanent creature = ((EntersTheBattlefieldEvent) event).getTarget();°ÏPlayer controller = game.getPlayer(source.getControllerId());°Ïif (creature != null && controller != null) {°ÏTarget target = new TargetControlledPermanent(0, Integer.MAX_VALUE, filter, true);°Ïif (!target.canChoose(source.getSourceId(), source.getControllerId(), game)) {°Ïreturn false;°Ï}°Ïcontroller.chooseTarget(Outcome.Detriment, target, source, game);°Ïif (target.getTargets().size() > 0) {°Ïint power = 0;°Ïint toughness = 0;°Ïfor (UUID targetId : target.getTargets()) {°ÏPermanent targetCreature = game.getPermanent(targetId);°Ïif (targetCreature != null && targetCreature.sacrifice(source.getSourceId(), game)) {°Ïpower += targetCreature.getPower().getValue();°Ïtoughness += targetCreature.getToughness().getValue();°Ï}°Ï}°ÏContinuousEffect effect = new SetPowerToughnessSourceEffect(power, toughness, Duration.Custom, SubLayer.SetPT_7b);°Ïgame.addEffect(effect, source);°Ï}°Ï}°Ïreturn false;°Ï}°Ï}°Ï
