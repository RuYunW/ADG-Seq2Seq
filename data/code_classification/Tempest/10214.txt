public class WallOfDiffusion extends CardImpl {¡ìpublic WallOfDiffusion(UUID ownerId) {¡ìsuper(ownerId, 211, "Wall of Diffusion", Rarity.COMMON, new CardType[]{CardType.CREATURE}, "{1}{R}");¡ìthis.expansionSetCode = "TMP";¡ìthis.subtype.add("Wall");¡ìthis.power = new MageInt(0);¡ìthis.toughness = new MageInt(5);¡ìthis.addAbility(DefenderAbility.getInstance());¡ìthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new CanBlockAsThoughtIthadShadowEffect(Duration.WhileOnBattlefield)));¡ì}¡ìpublic WallOfDiffusion(final WallOfDiffusion card) {¡ìsuper(card);¡ì}¡ì@Override¡ìpublic WallOfDiffusion copy() {¡ìreturn new WallOfDiffusion(this);¡ì}¡ì}¡ìclass CanBlockAsThoughtIthadShadowEffect extends AsThoughEffectImpl {¡ìpublic CanBlockAsThoughtIthadShadowEffect(Duration duration) {¡ìsuper(AsThoughEffectType.BLOCK_SHADOW, duration, Outcome.Benefit);¡ìstaticText = "{this} can block creatures with shadow as though {this} had shadow";¡ì}¡ìpublic CanBlockAsThoughtIthadShadowEffect(final CanBlockAsThoughtIthadShadowEffect effect) {¡ìsuper(effect);¡ì}¡ì@Override¡ìpublic boolean apply(Game game, Ability source) {¡ìreturn true;¡ì}¡ì@Override¡ìpublic CanBlockAsThoughtIthadShadowEffect copy() {¡ìreturn new CanBlockAsThoughtIthadShadowEffect(this);¡ì}¡ì@Override¡ìpublic boolean applies(UUID sourceId, Ability source, UUID affectedControllerId, Game game) {¡ìreturn sourceId.equals(source.getSourceId());¡ì}¡ì}¡ì
