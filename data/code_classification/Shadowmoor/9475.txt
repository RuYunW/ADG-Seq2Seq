public class EnchantedEvening extends CardImpl {°Ïpublic EnchantedEvening(UUID ownerId) {°Ïsuper(ownerId, 140, "Enchanted Evening", Rarity.RARE, new CardType[]{CardType.ENCHANTMENT}, "{3}{W/U}{W/U}");°Ïthis.expansionSetCode = "SHM";°ÏEffect effect = new EnchangedEveningEffect(CardType.ENCHANTMENT, Duration.WhileOnBattlefield, new FilterPermanent());°Ïeffect.setText("All permanents are enchantments in addition to their other types");°Ïthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, effect));°Ï}°Ïpublic EnchantedEvening(final EnchantedEvening card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic EnchantedEvening copy() {°Ïreturn new EnchantedEvening(this);°Ï}°Ïclass EnchangedEveningEffect extends ContinuousEffectImpl {°Ïprivate final CardType addedCardType;°Ïprivate final FilterPermanent filter;°Ïpublic EnchangedEveningEffect(CardType addedCardType, Duration duration, FilterPermanent filter) {°Ïsuper(duration, Layer.TypeChangingEffects_4, SubLayer.NA, Outcome.Benefit);°Ïthis.addedCardType = addedCardType;°Ïthis.filter = filter;°Ïthis.dependencyTypes.add(DependencyType.EnchantmentAddingRemoving);°Ï}°Ïpublic EnchangedEveningEffect(final EnchangedEveningEffect effect) {°Ïsuper(effect);°Ïthis.addedCardType = effect.addedCardType;°Ïthis.filter = effect.filter;°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°Ïfor (Permanent permanent : game.getBattlefield().getAllActivePermanents(filter, game)) {°Ïif (permanent != null && !permanent.getCardType().contains(addedCardType)) {°Ïpermanent.getCardType().add(addedCardType);°Ï}°Ï}°Ïreturn true;°Ï}°Ï@Override°Ïpublic EnchangedEveningEffect copy() {°Ïreturn new EnchangedEveningEffect(this);°Ï}°Ï}°Ï}°Ï
