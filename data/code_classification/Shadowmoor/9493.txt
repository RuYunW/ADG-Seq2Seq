public class GlamerSpinners extends CardImpl {°Ïpublic GlamerSpinners(UUID ownerId) {°Ïsuper(ownerId, 141, "Glamer Spinners", Rarity.UNCOMMON, new CardType[]{CardType.CREATURE}, "{4}{W/U}");°Ïthis.expansionSetCode = "SHM";°Ïthis.subtype.add("Faerie");°Ïthis.subtype.add("Wizard");°Ïthis.power = new MageInt(2);°Ïthis.toughness = new MageInt(4);°Ïthis.addAbility(FlashAbility.getInstance());°Ïthis.addAbility(FlyingAbility.getInstance());°ÏAbility ability = new EntersBattlefieldTriggeredAbility(new GlamerSpinnersEffect(), false);°Ïability.addTarget(new TargetPermanent());°Ïthis.addAbility(ability);°Ï}°Ïpublic GlamerSpinners(final GlamerSpinners card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic GlamerSpinners copy() {°Ïreturn new GlamerSpinners(this);°Ï}°Ï}°Ïclass GlamerSpinnersEffect extends OneShotEffect {°Ïpublic GlamerSpinnersEffect() {°Ïsuper(Outcome.AIDontUseIt);°ÏstaticText = "attach all Auras enchanting target permanent to another permanent with the same controller";°Ï}°Ïpublic GlamerSpinnersEffect(final GlamerSpinnersEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic GlamerSpinnersEffect copy() {°Ïreturn new GlamerSpinnersEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°Ï/*°Ï5/1/2008 	When Glamer Spinners enters the battlefield, you target only one permanent: the one that will be losing its Auras. You don't choose the permanent that will be receiving the Auras until the ability resolves.°Ï5/1/2008 	You may target a permanent that has no Auras enchanting it.°Ï5/1/2008 	When the ability resolves, you choose the permanent that will be receiving the Auras. It can't be the targeted permanent, it must have the same controller as the targeted permanent, and it must be able to be enchanted by all the Auras attached to the targeted permanent. If you can't choose a permanent that meets all those criteria, the Auras won't move.°Ï*/°ÏPermanent targetPermanent = game.getPermanent(getTargetPointer().getFirst(game, source));°ÏPlayer controller = game.getPlayer(source.getControllerId());°ÏPermanent sourcePermanent = (Permanent) source.getSourceObject(game);°Ïif (targetPermanent != null && controller != null && sourcePermanent != null) {°ÏBoolean passed = true;°ÏFilterPermanent filterChoice = new FilterPermanent("a different permanent with the same controller as the target to attach the enchantments to");°ÏfilterChoice.add(new ControllerIdPredicate(targetPermanent.getControllerId()));°ÏfilterChoice.add(Predicates.not(new PermanentIdPredicate(targetPermanent.getId())));°ÏTarget chosenPermanentToAttachAuras = new TargetPermanent(filterChoice);°ÏchosenPermanentToAttachAuras.setNotTarget(true);°ÏLinkedList<UUID> auras = new LinkedList<>();°Ïauras.addAll(targetPermanent.getAttachments());°Ïif (chosenPermanentToAttachAuras.canChoose(source.getSourceId(), source.getControllerId(), game)°Ï&& controller.choose(Outcome.Neutral, chosenPermanentToAttachAuras, source.getSourceId(), game)) {°ÏPermanent permanentToAttachAuras = game.getPermanent(chosenPermanentToAttachAuras.getFirstTarget());°Ïif (permanentToAttachAuras != null) {°Ïfor (UUID auraId : auras) {°ÏPermanent aura = game.getPermanent(auraId);°Ïif (aura != null°Ï&& passed) {°ÏTarget target = aura.getSpellAbility().getTargets().get(0);°Ïif (target instanceof TargetPermanent) {°Ïif (!target.getFilter().match(permanentToAttachAuras, game)) {°Ïpassed = false;°Ï}°Ï}°ÏMageObject auraObject = game.getObject(auraId);°Ïif (permanentToAttachAuras.cantBeEnchantedBy(auraObject, game)) {°Ïpassed = false;°Ï}°Ï}°Ï}°Ïif (passed) {°ÏLinkedList<UUID> aurasToAttach = new LinkedList<>();°ÏaurasToAttach.addAll(auras);°Ïfor (UUID auraId : aurasToAttach) {°ÏPermanent auraToAttachToPermanent = game.getPermanent(auraId);°ÏtargetPermanent.removeAttachment(auraToAttachToPermanent.getId(), game);°ÏpermanentToAttachAuras.addAttachment(auraToAttachToPermanent.getId(), game);°Ï}°Ïreturn true;°Ï}°Ïgame.informPlayers(sourcePermanent.getLogName() + ": No enchantments were moved from the target permanent.");°Ï}°Ï}°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï}°Ï
