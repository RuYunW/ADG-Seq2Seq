public class RiversGrasp extends CardImpl {°Ïpublic RiversGrasp(UUID ownerId) {°Ïsuper(ownerId, 174, "River's Grasp", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, "{3}{U/B}");°Ïthis.expansionSetCode = "SHM";°ÏTarget targetCreature = new TargetCreaturePermanent(0, 1);°ÏTarget targetPlayer = new TargetPlayer();°Ïthis.getSpellAbility().addEffect(new ConditionalOneShotEffect(°Ïnew ReturnToHandTargetEffect(),°Ïnew ManaWasSpentCondition(ColoredManaSymbol.U), "If {U} was spent to cast {this}, return up to one target creature to its owner's hand"));°Ïthis.getSpellAbility().addEffect(new ConditionalOneShotEffect(°Ïnew RiversGraspEffect(),°Ïnew ManaWasSpentCondition(ColoredManaSymbol.B), " If {B} was spent to cast {this}, target player reveals his or her hand, you choose a nonland card from it, then that player discards that card"));°Ïthis.getSpellAbility().addTarget(targetCreature);°Ïthis.getSpellAbility().addTarget(targetPlayer);°Ïthis.getSpellAbility().addEffect(new InfoEffect("<i>(Do both if {U}{B} was spent.)</i>"));°Ïthis.getSpellAbility().addWatcher(new ManaSpentToCastWatcher());°Ï}°Ïpublic RiversGrasp(final RiversGrasp card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic RiversGrasp copy() {°Ïreturn new RiversGrasp(this);°Ï}°Ï}°Ïclass RiversGraspEffect extends OneShotEffect {°Ïprivate static final FilterCard filter = new FilterCard("a nonland card");°Ïstatic {°Ïfilter.add(Predicates.not(new CardTypePredicate(CardType.LAND)));°Ï}°Ïpublic RiversGraspEffect() {°Ïsuper(Outcome.Discard);°Ïthis.staticText = "Target player reveals his or her hand, you choose a card from it, then that player discards that card.";°Ï}°Ïpublic RiversGraspEffect(final RiversGraspEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic RiversGraspEffect copy() {°Ïreturn new RiversGraspEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPlayer player = game.getPlayer(source.getTargets().get(1).getFirstTarget());°Ïif (player != null) {°Ïplayer.revealCards("River's Grasp", player.getHand(), game);°ÏPlayer controller = game.getPlayer(source.getControllerId());°Ïif (controller != null) {°ÏTargetCard target = new TargetCard(Zone.HAND, filter);°Ïif (controller.choose(Outcome.Benefit, player.getHand(), target, game)) {°ÏCard card = player.getHand().get(target.getFirstTarget(), game);°Ïif (card != null) {°Ïreturn player.discard(card, source, game);°Ï}°Ï}°Ï}°Ï}°Ïreturn false;°Ï}°Ï}°Ï
