public class Tatterkite extends CardImpl {°Ïpublic Tatterkite(UUID ownerId) {°Ïsuper(ownerId, 264, "Tatterkite", Rarity.UNCOMMON, new CardType[]{CardType.ARTIFACT, CardType.CREATURE}, "{3}");°Ïthis.expansionSetCode = "SHM";°Ïthis.subtype.add("Scarecrow");°Ïthis.power = new MageInt(2);°Ïthis.toughness = new MageInt(1);°Ïthis.addAbility(FlyingAbility.getInstance());°Ïthis.addAbility(new SimpleStaticAbility(Zone.ALL, new CantHaveCountersSourceEffect(Duration.WhileOnBattlefield)));°Ï}°Ïpublic Tatterkite(final Tatterkite card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic Tatterkite copy() {°Ïreturn new Tatterkite(this);°Ï}°Ï}°Ïclass CantHaveCountersSourceEffect extends ContinuousRuleModifyingEffectImpl {°Ïpublic CantHaveCountersSourceEffect(Duration duration) {°Ïsuper(duration, Outcome.Detriment);°ÏstaticText = "{this} can't have counters placed on it";°Ï}°Ïpublic CantHaveCountersSourceEffect(final CantHaveCountersSourceEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic CantHaveCountersSourceEffect copy() {°Ïreturn new CantHaveCountersSourceEffect(this);°Ï}°Ï@Override°Ïpublic boolean checksEventType(GameEvent event, Game game) {°Ïreturn event.getType() == EventType.ADD_COUNTERS;°Ï}°Ï@Override°Ïpublic boolean applies(GameEvent event, Ability source, Game game) {°ÏUUID sourceId = source.getSourceId();°Ïif (sourceId != null) {°Ïreturn sourceId.equals(event.getTargetId());°Ï}°Ïreturn false;°Ï}°Ï}°Ï
