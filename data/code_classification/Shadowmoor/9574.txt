public class PucasMischief extends CardImpl {°Ïprivate static final String rule = "you may exchange control of target nonland permanent you control and target nonland permanent an opponent controls with an equal or lesser converted mana cost";°Ïpublic PucasMischief(UUID ownerId) {°Ïsuper(ownerId, 47, "Puca's Mischief", Rarity.RARE, new CardType[]{CardType.ENCHANTMENT}, "{3}{U}");°Ïthis.expansionSetCode = "SHM";°ÏAbility ability = new BeginningOfUpkeepTriggeredAbility(new ExchangeControlTargetEffect(Duration.EndOfGame, rule, false, true), TargetController.YOU, true);°Ïability.addTarget(new TargetControlledPermanentWithCMCGreaterOrLessThanOpponentPermanent());°Ïability.addTarget(new PucasMischiefSecondTarget());°Ïthis.addAbility(ability);°Ï}°Ïpublic PucasMischief(final PucasMischief card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic PucasMischief copy() {°Ïreturn new PucasMischief(this);°Ï}°Ï}°Ïclass TargetControlledPermanentWithCMCGreaterOrLessThanOpponentPermanent extends TargetControlledPermanent {°Ïpublic TargetControlledPermanentWithCMCGreaterOrLessThanOpponentPermanent() {°Ïsuper();°Ïfilter.add(Predicates.not(new CardTypePredicate(CardType.LAND)));°ÏsetTargetName("nonland permanent you control");°Ï}°Ïpublic TargetControlledPermanentWithCMCGreaterOrLessThanOpponentPermanent(final TargetControlledPermanentWithCMCGreaterOrLessThanOpponentPermanent target) {°Ïsuper(target);°Ï}°Ï@Override°Ïpublic boolean canTarget(UUID controllerId, UUID id, Ability source, Game game) {°Ïreturn super.canTarget(controllerId, id, source, game);°Ï}°Ï@Override°Ïpublic Set<UUID> possibleTargets(UUID sourceId, UUID sourceControllerId, Game game) {°ÏSet<UUID> possibleTargets = new HashSet<>();°ÏMageObject targetSource = game.getObject(sourceId);°Ïfor (Permanent permanent : game.getBattlefield().getActivePermanents(filter, sourceControllerId, sourceId, game)) {°Ïif (!targets.containsKey(permanent.getId()) && permanent.canBeTargetedBy(targetSource, sourceControllerId, game)) {°ÏpossibleTargets.add(permanent.getId());°Ï}°Ï}°Ïreturn possibleTargets;°Ï}°Ï@Override°Ïpublic TargetControlledPermanentWithCMCGreaterOrLessThanOpponentPermanent copy() {°Ïreturn new TargetControlledPermanentWithCMCGreaterOrLessThanOpponentPermanent(this);°Ï}°Ï}°Ïclass PucasMischiefSecondTarget extends TargetPermanent {°Ïprivate Permanent firstTarget = null;°Ïpublic PucasMischiefSecondTarget() {°Ïsuper();°Ïfilter.add(new ControllerPredicate(TargetController.OPPONENT));°Ïfilter.add(Predicates.not(new CardTypePredicate(CardType.LAND)));°ÏsetTargetName("permanent an opponent controls with an equal or lesser converted mana cost");°Ï}°Ïpublic PucasMischiefSecondTarget(final PucasMischiefSecondTarget target) {°Ïsuper(target);°Ïthis.firstTarget = target.firstTarget;°Ï}°Ï@Override°Ïpublic boolean canTarget(UUID id, Ability source, Game game) {°Ïif (super.canTarget(id, source, game)) {°ÏPermanent target1 = game.getPermanent(source.getFirstTarget());°ÏPermanent opponentPermanent = game.getPermanent(id);°Ïif (target1 != null && opponentPermanent != null) {°Ïreturn target1.getManaCost().convertedManaCost() >= opponentPermanent.getManaCost().convertedManaCost();°Ï}°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic Set<UUID> possibleTargets(UUID sourceId, UUID sourceControllerId, Game game) {°ÏSet<UUID> possibleTargets = new HashSet<>();°Ïif (firstTarget != null) {°ÏMageObject targetSource = game.getObject(sourceId);°Ïfor (Permanent permanent : game.getBattlefield().getActivePermanents(filter, sourceControllerId, sourceId, game)) {°Ïif (!targets.containsKey(permanent.getId()) && permanent.canBeTargetedBy(targetSource, sourceControllerId, game)) {°Ïif (firstTarget.getManaCost().convertedManaCost() >= permanent.getManaCost().convertedManaCost()) {°ÏpossibleTargets.add(permanent.getId());°Ï}°Ï}°Ï}°Ï}°Ïreturn possibleTargets;°Ï}°Ï@Override°Ïpublic boolean chooseTarget(Outcome outcome, UUID playerId, Ability source, Game game) {°ÏfirstTarget = game.getPermanent(source.getFirstTarget());°Ïreturn super.chooseTarget(Outcome.GainControl, playerId, source, game);°Ï}°Ï@Override°Ïpublic PucasMischiefSecondTarget copy() {°Ïreturn new PucasMischiefSecondTarget(this);°Ï}°Ï}°Ï
