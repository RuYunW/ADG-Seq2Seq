public class ThoughtReflection extends CardImpl {°Ïpublic ThoughtReflection(UUID ownerId) {°Ïsuper(ownerId, 53, "Thought Reflection", Rarity.RARE, new CardType[]{CardType.ENCHANTMENT}, "{4}{U}{U}{U}");°Ïthis.expansionSetCode = "SHM";°Ïthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new ThoughtReflectionReplacementEffect()));°Ï}°Ïpublic ThoughtReflection(final ThoughtReflection card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic ThoughtReflection copy() {°Ïreturn new ThoughtReflection(this);°Ï}°Ï}°Ïclass ThoughtReflectionReplacementEffect extends ReplacementEffectImpl {°Ïpublic ThoughtReflectionReplacementEffect() {°Ïsuper(Duration.WhileOnBattlefield, Outcome.Neutral);°ÏstaticText = "If you would draw a card, draw two cards instead";°Ï}°Ïpublic ThoughtReflectionReplacementEffect(final ThoughtReflectionReplacementEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic ThoughtReflectionReplacementEffect copy() {°Ïreturn new ThoughtReflectionReplacementEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°Ïreturn true;°Ï}°Ï@Override°Ïpublic boolean checksEventType(GameEvent event, Game game) {°Ïreturn event.getType() == GameEvent.EventType.DRAW_CARD;°Ï}°Ï@Override°Ïpublic boolean applies(GameEvent event, Ability source, Game game) {°Ïreturn event.getPlayerId().equals(source.getControllerId());°Ï}°Ï@Override°Ïpublic boolean replaceEvent(GameEvent event, Ability source, Game game) {°ÏPlayer you = game.getPlayer(event.getPlayerId());°Ïif (you != null) {°Ïyou.drawCards(2, game, event.getAppliedEffects());°Ï}°Ïreturn true;°Ï}°Ï}°Ï
