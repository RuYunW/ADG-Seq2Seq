public class Firespout extends CardImpl {¡ìprivate static final FilterCreaturePermanent filter1 = new FilterCreaturePermanent("creature without flying");¡ìprivate static final FilterCreaturePermanent filter2 = new FilterCreaturePermanent("creature with flying");¡ìstatic {¡ìfilter1.add(Predicates.not(new AbilityPredicate(FlyingAbility.class)));¡ìfilter2.add(new AbilityPredicate(FlyingAbility.class));¡ì}¡ìpublic Firespout(UUID ownerId) {¡ìsuper(ownerId, 205, "Firespout", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, "{2}{R/G}");¡ìthis.expansionSetCode = "SHM";¡ìthis.getSpellAbility().addEffect(new ConditionalOneShotEffect(¡ìnew DamageAllEffect(3, filter1),¡ìnew ManaWasSpentCondition(ColoredManaSymbol.R), "{this} deals 3 damage to each creature without flying if {R} was spent to cast {this}"));¡ìthis.getSpellAbility().addEffect(new ConditionalOneShotEffect(¡ìnew DamageAllEffect(3, filter2),¡ìnew ManaWasSpentCondition(ColoredManaSymbol.G), " And 3 damage to each creature with flying if {G} was spent to cast it"));¡ìthis.getSpellAbility().addEffect(new InfoEffect("<i>(Do both if {R}{G} was spent.)</i>"));¡ìthis.getSpellAbility().addWatcher(new ManaSpentToCastWatcher());¡ì}¡ìpublic Firespout(final Firespout card) {¡ìsuper(card);¡ì}¡ì@Override¡ìpublic Firespout copy() {¡ìreturn new Firespout(this);¡ì}¡ì}¡ì
