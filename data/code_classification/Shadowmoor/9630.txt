public class ThornwatchScarecrow extends CardImpl {°Ïprivate static final FilterControlledCreaturePermanent filter = new FilterControlledCreaturePermanent("a green creature");°Ïprivate static final FilterControlledCreaturePermanent filter2 = new FilterControlledCreaturePermanent("a white creature");°Ïstatic {°Ïfilter.add(new ColorPredicate(ObjectColor.GREEN));°Ïfilter2.add(new ColorPredicate(ObjectColor.WHITE));°Ï}°Ïprivate static final String rule = "{this} has wither as long as you control a green creature";°Ïprivate static final String rule2 = "{this} has vigilance as long as you control a white creature";°Ïpublic ThornwatchScarecrow(UUID ownerId) {°Ïsuper(ownerId, 265, "Thornwatch Scarecrow", Rarity.COMMON, new CardType[]{CardType.ARTIFACT, CardType.CREATURE}, "{6}");°Ïthis.expansionSetCode = "SHM";°Ïthis.subtype.add("Scarecrow");°Ïthis.power = new MageInt(4);°Ïthis.toughness = new MageInt(4);°ÏContinuousEffect effect = new GainAbilitySourceEffect(WitherAbility.getInstance(), Duration.WhileOnBattlefield);°Ïthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new ConditionalContinuousEffect(effect, new PermanentsOnTheBattlefieldCondition(filter), rule)));°ÏContinuousEffect effect2 = new GainAbilitySourceEffect(VigilanceAbility.getInstance(), Duration.WhileOnBattlefield);°Ïthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new ConditionalContinuousEffect(effect2, new PermanentsOnTheBattlefieldCondition(filter2), rule2)));°Ï}°Ïpublic ThornwatchScarecrow(final ThornwatchScarecrow card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic ThornwatchScarecrow copy() {°Ïreturn new ThornwatchScarecrow(this);°Ï}°Ï}°Ï
