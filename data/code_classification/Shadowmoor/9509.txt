public class Hollowsage extends CardImpl {°Ïpublic Hollowsage(UUID ownerId) {°Ïsuper(ownerId, 69, "Hollowsage", Rarity.UNCOMMON, new CardType[]{CardType.CREATURE}, "{3}{B}");°Ïthis.expansionSetCode = "SHM";°Ïthis.subtype.add("Merfolk");°Ïthis.subtype.add("Wizard");°Ïthis.power = new MageInt(2);°Ïthis.toughness = new MageInt(2);°ÏTriggeredAbility ability = new BecomesUntappedTriggeredAbility(new DiscardTargetEffect(1), true);°Ïability.addTarget(new TargetPlayer());°Ïthis.addAbility(ability);°Ï}°Ïpublic Hollowsage(final Hollowsage card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic Hollowsage copy() {°Ïreturn new Hollowsage(this);°Ï}°Ï}°Ïclass BecomesUntappedTriggeredAbility extends TriggeredAbilityImpl {°Ïpublic BecomesUntappedTriggeredAbility(Effect effect, boolean isOptional) {°Ïsuper(Zone.BATTLEFIELD, effect, isOptional);°Ï}°Ïpublic BecomesUntappedTriggeredAbility(Effect effect) {°Ïsuper(Zone.BATTLEFIELD, effect);°Ï}°Ïpublic BecomesUntappedTriggeredAbility(final BecomesUntappedTriggeredAbility ability) {°Ïsuper(ability);°Ï}°Ï@Override°Ïpublic BecomesUntappedTriggeredAbility copy() {°Ïreturn new BecomesUntappedTriggeredAbility(this);°Ï}°Ï@Override°Ïpublic boolean checkEventType(GameEvent event, Game game) {°Ïreturn event.getType() == EventType.UNTAPPED;°Ï}°Ï@Override°Ïpublic boolean checkTrigger(GameEvent event, Game game) {°Ïreturn event.getTargetId().equals(sourceId);°Ï}°Ï@Override°Ïpublic String getRule() {°Ïreturn "When {this} becomes untapped, " + super.getRule();°Ï}°Ï}°Ï
