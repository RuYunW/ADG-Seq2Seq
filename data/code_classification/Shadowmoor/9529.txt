public class LeechBonder extends CardImpl {°Ïpublic LeechBonder(UUID ownerId) {°Ïsuper(ownerId, 43, "Leech Bonder", Rarity.UNCOMMON, new CardType[]{CardType.CREATURE}, "{2}{U}");°Ïthis.expansionSetCode = "SHM";°Ïthis.subtype.add("Merfolk");°Ïthis.subtype.add("Soldier");°Ïthis.power = new MageInt(3);°Ïthis.toughness = new MageInt(3);°Ïthis.addAbility(new EntersBattlefieldAbility(new AddCountersSourceEffect(CounterType.M1M1.createInstance(2))));°ÏAbility ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new LeechBonderEffect(), new ManaCostsImpl("{U}"));°Ïability.addCost(new UntapSourceCost());°Ïability.addTarget(new TargetCreaturePermanent(new FilterCreaturePermanent("creature to remove counter from")));°Ïability.addTarget(new TargetCreaturePermanent(new FilterCreaturePermanent("creature to put counter on")));°Ïthis.addAbility(ability);°Ï}°Ïpublic LeechBonder(final LeechBonder card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic LeechBonder copy() {°Ïreturn new LeechBonder(this);°Ï}°Ï}°Ïclass LeechBonderEffect extends OneShotEffect {°Ïpublic LeechBonderEffect() {°Ïsuper(Outcome.AIDontUseIt);°Ïthis.staticText = "Move a counter from target creature onto a second target creature";°Ï}°Ïpublic LeechBonderEffect(final LeechBonderEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic LeechBonderEffect copy() {°Ïreturn new LeechBonderEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPlayer controller = game.getPlayer(source.getControllerId());°ÏPermanent fromPermanent = game.getPermanent(source.getFirstTarget());°ÏPermanent toPermanent = game.getPermanent(source.getTargets().get(1).getFirstTarget());°Ïif (fromPermanent == null°Ï|| toPermanent == null°Ï|| controller == null) {°Ïreturn false;°Ï}°ÏChoice choice = new ChoiceImpl();°ÏSet<String> possibleChoices = new HashSet<>();°Ïfor (String counterName : fromPermanent.getCounters().keySet()) {°ÏpossibleChoices.add(counterName);°Ï}°Ïchoice.setChoices(possibleChoices);°Ïif (controller.choose(Outcome.AIDontUseIt, choice, game)) {°ÏString chosen = choice.getChoice();°Ïif (fromPermanent.getCounters().containsKey(chosen)) {°ÏCounter counter = new Counter(chosen, 1);°ÏfromPermanent.removeCounters(counter, game);°ÏtoPermanent.addCounters(counter, game);°Ïreturn true;°Ï}°Ï}°Ïreturn false;°Ï}°Ï}°Ï
