public class RakingCanopy extends CardImpl {°Ïpublic RakingCanopy(UUID ownerId) {°Ïsuper(ownerId, 127, "Raking Canopy", Rarity.UNCOMMON, new CardType[]{CardType.ENCHANTMENT}, "{1}{G}{G}");°Ïthis.expansionSetCode = "SHM";°Ïthis.addAbility(new RakingCanopyTriggeredAbility());°Ï}°Ïpublic RakingCanopy(final RakingCanopy card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic RakingCanopy copy() {°Ïreturn new RakingCanopy(this);°Ï}°Ï}°Ïclass RakingCanopyTriggeredAbility extends TriggeredAbilityImpl {°Ïpublic RakingCanopyTriggeredAbility() {°Ïsuper(Zone.BATTLEFIELD, new DamageTargetEffect(4));°Ï}°Ïpublic RakingCanopyTriggeredAbility(final RakingCanopyTriggeredAbility ability) {°Ïsuper(ability);°Ï}°Ï@Override°Ïpublic RakingCanopyTriggeredAbility copy() {°Ïreturn new RakingCanopyTriggeredAbility(this);°Ï}°Ï@Override°Ïpublic boolean checkEventType(GameEvent event, Game game) {°Ïreturn event.getType() == EventType.ATTACKER_DECLARED;°Ï}°Ï@Override°Ïpublic boolean checkTrigger(GameEvent event, Game game) {°ÏPermanent attacker = game.getPermanent(event.getSourceId());°Ïif (attacker == null || !attacker.getAbilities().contains(FlyingAbility.getInstance())) {°Ïreturn false;°Ï}°Ïif (event.getTargetId().equals(this.getControllerId())) {°Ïfor (Effect effect : this.getEffects()) {°Ïeffect.setTargetPointer(new FixedTarget(attacker.getId()));°Ï}°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic String getRule() {°Ïreturn "Whenever a creature with flying attacks you, {this} deals 4 damage to it.";°Ï}°Ï}°Ï
