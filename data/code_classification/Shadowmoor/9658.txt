public class Worldpurge extends CardImpl {°Ïpublic Worldpurge(UUID ownerId) {°Ïsuper(ownerId, 156, "Worldpurge", Rarity.RARE, new CardType[]{CardType.SORCERY}, "{4}{W/U}{W/U}{W/U}{W/U}");°Ïthis.expansionSetCode = "SHM";°Ïthis.getSpellAbility().addEffect(new WorldpurgeEffect());°Ï}°Ïpublic Worldpurge(final Worldpurge card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic Worldpurge copy() {°Ïreturn new Worldpurge(this);°Ï}°Ï}°Ïclass WorldpurgeEffect extends OneShotEffect {°Ïpublic WorldpurgeEffect() {°Ïsuper(Outcome.Discard);°Ïthis.staticText = "Return all permanents to their owners' hands. Each player chooses up to seven cards in his or her hand, then shuffles the rest into his or her library. Empty all mana pools.";°Ï}°Ïpublic WorldpurgeEffect(final WorldpurgeEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic WorldpurgeEffect copy() {°Ïreturn new WorldpurgeEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPlayer controller = game.getPlayer(source.getControllerId());°ÏMageObject sourceObject = game.getObject(source.getSourceId());°Ïif (controller != null && sourceObject != null) {°ÏSet<Card> allPermanents = new HashSet<>();°ÏallPermanents.addAll(game.getBattlefield().getActivePermanents(new FilterPermanent(), source.getControllerId(), source.getSourceId(), game));°Ïcontroller.moveCards(allPermanents, Zone.HAND, source, game, false, false, true, null);°Ïgame.informPlayers(sourceObject.getLogName() + " - All permanents returned to owners' hands");°Ïfor (UUID playerId : game.getState().getPlayerList(controller.getId())) {°ÏPlayer player = game.getPlayer(playerId);°Ïif (player != null) {°ÏCards hand = player.getHand();°Ïint numberInHand = Math.min(7, hand.size());°ÏTargetCardInHand target = new TargetCardInHand(0, numberInHand, new FilterCard("cards to keep in hand"));°ÏCards cardsToLibrary = new CardsImpl();°Ïif (player.choose(Outcome.Benefit, target, source.getSourceId(), game)) {°Ïfor (Card card : hand.getCards(game)) {°Ïif (!target.getTargets().contains(card.getId())) {°ÏcardsToLibrary.add(card);°Ïcard.moveToZone(Zone.LIBRARY, source.getSourceId(), game, false);°Ï}°Ï}°Ï}°Ïplayer.putCardsOnTopOfLibrary(cardsToLibrary, game, source, false);°Ïplayer.shuffleLibrary(game);°Ï}°Ï}°Ïgame.emptyManaPools();°Ïgame.informPlayers(sourceObject.getLogName() + " - All mana pools have been emptied");°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï}°Ï
