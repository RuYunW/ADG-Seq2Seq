public class KnacksawClique extends CardImpl {°Ïpublic KnacksawClique(UUID ownerId) {°Ïsuper(ownerId, 42, "Knacksaw Clique", Rarity.RARE, new CardType[]{CardType.CREATURE}, "{3}{U}");°Ïthis.expansionSetCode = "SHM";°Ïthis.subtype.add("Faerie");°Ïthis.subtype.add("Rogue");°Ïthis.power = new MageInt(1);°Ïthis.toughness = new MageInt(4);°Ïthis.addAbility(FlyingAbility.getInstance());°ÏAbility ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new KnacksawCliqueEffect(), new ManaCostsImpl("{1}{U}"));°Ïability.addCost(new UntapSourceCost());°Ïability.addTarget(new TargetOpponent());°Ïthis.addAbility(ability);°Ï}°Ïpublic KnacksawClique(final KnacksawClique card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic KnacksawClique copy() {°Ïreturn new KnacksawClique(this);°Ï}°Ï}°Ïclass KnacksawCliqueEffect extends OneShotEffect {°Ïpublic KnacksawCliqueEffect() {°Ïsuper(Outcome.Benefit);°Ïthis.staticText = "Target opponent exiles the top card of his or her library. Until end of turn, you may play that card";°Ï}°Ïpublic KnacksawCliqueEffect(final KnacksawCliqueEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic KnacksawCliqueEffect copy() {°Ïreturn new KnacksawCliqueEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPlayer opponent = game.getPlayer(targetPointer.getFirst(game, source));°ÏMageObject sourceObject = game.getObject(source.getSourceId());°Ïif (sourceObject != null && opponent != null) {°Ïif (opponent.getLibrary().size() > 0) {°ÏLibrary library = opponent.getLibrary();°ÏCard card = library.getFromTop(game);°Ïif (card != null) {°Ïopponent.moveCardToExileWithInfo(card, source.getSourceId(), sourceObject.getName(), source.getSourceId(), game, Zone.LIBRARY, true);°ÏContinuousEffect effect = new KnacksawCliqueCastFromExileEffect();°Ïeffect.setTargetPointer(new FixedTarget(card.getId()));°Ïgame.addEffect(effect, source);°Ï}°Ï}°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï}°Ïclass KnacksawCliqueCastFromExileEffect extends AsThoughEffectImpl {°Ïpublic KnacksawCliqueCastFromExileEffect() {°Ïsuper(AsThoughEffectType.PLAY_FROM_NOT_OWN_HAND_ZONE, Duration.EndOfTurn, Outcome.Benefit);°ÏstaticText = "Until end of turn, you may play that card";°Ï}°Ïpublic KnacksawCliqueCastFromExileEffect(final KnacksawCliqueCastFromExileEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°Ïreturn true;°Ï}°Ï@Override°Ïpublic KnacksawCliqueCastFromExileEffect copy() {°Ïreturn new KnacksawCliqueCastFromExileEffect(this);°Ï}°Ï@Override°Ïpublic boolean applies(UUID sourceId, Ability source, UUID affectedControllerId, Game game) {°Ïreturn source.getControllerId().equals(affectedControllerId)°Ï&& sourceId.equals(getTargetPointer().getFirst(game, source));°Ï}°Ï}°Ï
