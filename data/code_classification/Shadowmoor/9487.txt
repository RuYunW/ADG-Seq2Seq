public class FracturingGust extends CardImpl {°Ïpublic FracturingGust(UUID ownerId) {°Ïsuper(ownerId, 227, "Fracturing Gust", Rarity.RARE, new CardType[]{CardType.INSTANT}, "{2}{G/W}{G/W}{G/W}");°Ïthis.expansionSetCode = "SHM";°Ïthis.getSpellAbility().addEffect(new FracturingGustDestroyEffect());°Ï}°Ïpublic FracturingGust(final FracturingGust card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic FracturingGust copy() {°Ïreturn new FracturingGust(this);°Ï}°Ï}°Ïclass FracturingGustDestroyEffect extends OneShotEffect {°Ïprivate static final FilterPermanent filter = new FilterPermanent();°Ïstatic {°Ïfilter.add(Predicates.or(new CardTypePredicate(CardType.ARTIFACT),°Ïnew CardTypePredicate(CardType.ENCHANTMENT)));°Ï}°Ïpublic FracturingGustDestroyEffect() {°Ïsuper(Outcome.DestroyPermanent);°Ïthis.staticText = "Destroy all artifacts and enchantments. You gain 2 life for each permanent destroyed this way";°Ï}°Ïpublic FracturingGustDestroyEffect(final FracturingGustDestroyEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic FracturingGustDestroyEffect copy() {°Ïreturn new FracturingGustDestroyEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPlayer controller = game.getPlayer(source.getControllerId());°Ïif (controller != null) {°Ïint destroyedPermanents = 0;°Ïfor (Permanent permanent: game.getState().getBattlefield().getActivePermanents(filter, source.getControllerId(), source.getSourceId(), game)) {°Ïif (permanent.destroy(source.getSourceId(), game, false)) {°Ï++destroyedPermanents;°Ï}°Ï}°Ïgame.applyEffects(); °Ï
