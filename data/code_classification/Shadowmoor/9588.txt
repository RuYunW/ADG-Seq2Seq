public class RiteOfConsumption extends CardImpl {¡ìpublic RiteOfConsumption(UUID ownerId) {¡ìsuper(ownerId, 76, "Rite of Consumption", Rarity.COMMON, new CardType[]{CardType.SORCERY}, "{1}{B}");¡ìthis.expansionSetCode = "SHM";¡ìthis.getSpellAbility().addCost(new SacrificeTargetCost(new TargetControlledCreaturePermanent(1,1,new FilterControlledCreaturePermanent("a creature"), false)));¡ìthis.getSpellAbility().addEffect(new RiteOfConsumptionEffect());¡ìthis.getSpellAbility().addTarget(new TargetPlayer());¡ì}¡ìpublic RiteOfConsumption(final RiteOfConsumption card) {¡ìsuper(card);¡ì}¡ì@Override¡ìpublic RiteOfConsumption copy() {¡ìreturn new RiteOfConsumption(this);¡ì}¡ì}¡ìclass RiteOfConsumptionEffect extends OneShotEffect {¡ìpublic RiteOfConsumptionEffect() {¡ìsuper(Outcome.Benefit);¡ìthis.staticText = "{this} deals damage equal to the sacrificed creature's power to target player. You gain life equal to the damage dealt this way";¡ì}¡ìpublic RiteOfConsumptionEffect(final RiteOfConsumptionEffect effect) {¡ìsuper(effect);¡ì}¡ì@Override¡ìpublic RiteOfConsumptionEffect copy() {¡ìreturn new RiteOfConsumptionEffect(this);¡ì}¡ì@Override¡ìpublic boolean apply(Game game, Ability source) {¡ìPlayer targetPlayer = game.getPlayer(this.getTargetPointer().getFirst(game, source));¡ìPlayer controller = game.getPlayer(source.getControllerId());¡ìif (targetPlayer != null && controller != null) {¡ìPermanent sacrificedCreature = null;¡ìfor (Cost cost :source.getCosts()) {¡ìif (cost instanceof SacrificeTargetCost) {¡ìSacrificeTargetCost sacCost = (SacrificeTargetCost) cost;¡ìfor(Permanent permanent : sacCost.getPermanents()) {¡ìsacrificedCreature = permanent;¡ìbreak;¡ì}¡ì}¡ì}¡ìif (sacrificedCreature != null) {¡ìint damage = sacrificedCreature.getPower().getValue();¡ìif (damage > 0) {¡ìint damageDealt = targetPlayer.damage(damage, source.getSourceId(), game, false, true);¡ìif (damageDealt > 0) {¡ìcontroller.gainLife(damage, game);¡ì}¡ì}¡ìreturn true;¡ì}¡ì}¡ìreturn false;¡ì}¡ì}¡ì
