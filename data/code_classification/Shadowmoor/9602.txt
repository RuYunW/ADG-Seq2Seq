public class ScarscaleRitual extends CardImpl {°Ïpublic ScarscaleRitual(UUID ownerId) {°Ïsuper(ownerId, 175, "Scarscale Ritual", Rarity.COMMON, new CardType[]{CardType.SORCERY}, "{1}{U/B}");°Ïthis.expansionSetCode = "SHM";°Ïthis.getSpellAbility().addCost(new ScarscaleRitualCost());°Ïthis.getSpellAbility().addEffect(new DrawCardSourceControllerEffect(2));°Ï}°Ïpublic ScarscaleRitual(final ScarscaleRitual card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic ScarscaleRitual copy() {°Ïreturn new ScarscaleRitual(this);°Ï}°Ï}°Ïclass ScarscaleRitualCost extends CostImpl {°Ïpublic ScarscaleRitualCost() {°Ïthis.text = "put a -1/-1 counter on a creature you control";°Ï}°Ïpublic ScarscaleRitualCost(ScarscaleRitualCost cost) {°Ïsuper(cost);°Ï}°Ï@Override°Ïpublic boolean canPay(Ability ability, UUID sourceId, UUID controllerId, Game game) {°Ïfor (Permanent permanent : game.getBattlefield().getAllActivePermanents(new FilterCreaturePermanent(), controllerId, game)) {°Ïreturn permanent != null;°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic boolean pay(Ability ability, Game game, UUID sourceId, UUID controllerId, boolean noMana, Cost costToPay) {°ÏPlayer controller = game.getPlayer(ability.getControllerId());°Ïif (controller != null) {°ÏTarget target = new TargetControlledCreaturePermanent();°Ïtarget.setNotTarget(true);°Ïcontroller.chooseTarget(Outcome.UnboostCreature, target, ability, game);°ÏPermanent permanent = game.getPermanent(target.getFirstTarget());°Ïif (permanent != null) {°Ïpermanent.addCounters(CounterType.M1M1.createInstance(), game);°Ïgame.informPlayers(controller.getLogName() + " puts a -1/-1 counter on " + permanent.getLogName());°Ïthis.paid = true;°Ï}°Ï}°Ïreturn paid;°Ï}°Ï@Override°Ïpublic ScarscaleRitualCost copy() {°Ïreturn new ScarscaleRitualCost(this);°Ï}°Ï}°Ï
