public class SpitefulVisions extends CardImpl {°Ïpublic SpitefulVisions(UUID ownerId) {°Ïsuper(ownerId, 198, "Spiteful Visions", Rarity.RARE, new CardType[]{CardType.ENCHANTMENT}, "{2}{B/R}{B/R}");°Ïthis.expansionSetCode = "SHM";°Ïthis.addAbility(new BeginningOfDrawTriggeredAbility(new DrawCardTargetEffect(1), TargetController.ANY, false));°ÏTriggeredAbility triggeredAbility = new SpitefulVisionsTriggeredAbility(new DamageTargetEffect(1), false);°Ïthis.addAbility(triggeredAbility);°Ï}°Ïpublic SpitefulVisions(final SpitefulVisions card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic SpitefulVisions copy() {°Ïreturn new SpitefulVisions(this);°Ï}°Ï}°Ïclass SpitefulVisionsTriggeredAbility extends TriggeredAbilityImpl {°Ïpublic SpitefulVisionsTriggeredAbility(Effect effect, boolean optional) {°Ïsuper(Zone.BATTLEFIELD, effect, optional);°Ï}°Ïpublic SpitefulVisionsTriggeredAbility(final SpitefulVisionsTriggeredAbility ability) {°Ïsuper(ability);°Ï}°Ï@Override°Ïpublic boolean checkEventType(GameEvent event, Game game) {°Ïreturn event.getType() == EventType.DREW_CARD;°Ï}°Ï@Override°Ïpublic boolean checkTrigger(GameEvent event, Game game) {°Ïif (event.getPlayerId() != null) {°Ïfor (Effect effect : this.getEffects()) {°Ïeffect.setTargetPointer(new FixedTarget(event.getPlayerId()));°Ï}°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic String getRule() {°Ïreturn "Whenever a player draws a card, Spiteful Visions deals 1 damage to that player.";°Ï}°Ï@Override°Ïpublic SpitefulVisionsTriggeredAbility copy() {°Ïreturn new SpitefulVisionsTriggeredAbility(this);°Ï}°Ï}°Ï
