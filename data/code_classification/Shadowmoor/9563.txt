public class PaintersServant extends CardImpl {°Ïpublic PaintersServant(UUID ownerId) {°Ïsuper(ownerId, 257, "Painter's Servant", Rarity.RARE, new CardType[]{CardType.ARTIFACT, CardType.CREATURE}, "{2}");°Ïthis.expansionSetCode = "SHM";°Ïthis.subtype.add("Scarecrow");°Ïthis.power = new MageInt(1);°Ïthis.toughness = new MageInt(3);°Ïthis.addAbility(new AsEntersBattlefieldAbility(new ChooseColorEffect(Outcome.Detriment)));°Ïthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new PaintersServantEffect()));°Ï}°Ïpublic PaintersServant(final PaintersServant card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic PaintersServant copy() {°Ïreturn new PaintersServant(this);°Ï}°Ï}°Ïclass PaintersServantEffect extends ContinuousEffectImpl {°Ïpublic PaintersServantEffect() {°Ïsuper(Duration.WhileOnBattlefield, Layer.ColorChangingEffects_5, SubLayer.NA, Outcome.Benefit);°ÏstaticText = "All cards that aren't on the battlefield, spells, and permanents are the chosen color in addition to their other colors";°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPlayer controller = game.getPlayer(source.getControllerId());°Ïif (controller != null) {°ÏObjectColor color = (ObjectColor) game.getState().getValue(source.getSourceId() + "_color");°Ïif (color == null) {°Ïreturn false;°Ï}°ÏString colorString = color.toString();°Ïfor (Permanent perm : game.getBattlefield().getActivePermanents(source.getControllerId(), game)) {°ÏsetObjectColor(perm, colorString, game);°Ï}°Ïfor (MageObject object : game.getStack()) {°Ïif (object instanceof Spell) {°ÏsetObjectColor(object, colorString, game);°Ï}°Ï}°Ïfor (Card card : game.getExile().getAllCards(game)) {°ÏsetCardColor(card, colorString, game);°Ï}°Ïfor (CommandObject commandObject : game.getState().getCommand()) {°Ïif (commandObject instanceof Commander) {°ÏsetObjectColor(commandObject, colorString, game);°Ï}°Ï}°Ïfor (UUID playerId : game.getState().getPlayersInRange(controller.getId(), game)) {°ÏPlayer player = game.getPlayer(playerId);°Ïif (player != null) {°Ïfor (Card card : player.getHand().getCards(game)) {°ÏsetCardColor(card, colorString, game);°Ï}°Ïfor (Card card : player.getLibrary().getCards(game)) {°ÏsetCardColor(card, colorString, game);°Ï}°Ïfor (Card card : player.getGraveyard().getCards(game)) {°ÏsetCardColor(card, colorString, game);°Ï}°Ï}°Ï}°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ïprotected static void setCardColor(Card card, String colorString, Game game) {°ÏObjectColor color = game.getState().getCreateCardAttribute(card).getColor();°Ïswitch (colorString) {°Ïcase "W":°Ïcolor.setWhite(true);°Ïbreak;°Ïcase "B":°Ïcolor.setBlack(true);°Ïbreak;°Ïcase "U":°Ïcolor.setBlue(true);°Ïbreak;°Ïcase "G":°Ïcolor.setGreen(true);°Ïbreak;°Ïcase "R":°Ïcolor.setRed(true);°Ïbreak;°Ï}°Ï}°Ïprotected static void setObjectColor(MageObject obj, String colorString, Game game) {°Ïswitch (colorString) {°Ïcase "W":°Ïobj.getColor(game).setWhite(true);°Ïbreak;°Ïcase "B":°Ïobj.getColor(game).setBlack(true);°Ïbreak;°Ïcase "U":°Ïobj.getColor(game).setBlue(true);°Ïbreak;°Ïcase "G":°Ïobj.getColor(game).setGreen(true);°Ïbreak;°Ïcase "R":°Ïobj.getColor(game).setRed(true);°Ïbreak;°Ï}°Ï}°Ï@Override°Ïpublic PaintersServantEffect copy() {°Ïreturn new PaintersServantEffect(this);°Ï}°Ïprivate PaintersServantEffect(PaintersServantEffect effect) {°Ïsuper(effect);°Ï}°Ï}°Ï
