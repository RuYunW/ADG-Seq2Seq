public class BoonReflection extends CardImpl {¡ìpublic BoonReflection(UUID ownerId) {¡ìsuper(ownerId, 5, "Boon Reflection", Rarity.RARE, new CardType[]{CardType.ENCHANTMENT}, "{4}{W}");¡ìthis.expansionSetCode = "SHM";¡ìthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new BoonReflectionEffect()));¡ì}¡ìpublic BoonReflection(final BoonReflection card) {¡ìsuper(card);¡ì}¡ì@Override¡ìpublic BoonReflection copy() {¡ìreturn new BoonReflection(this);¡ì}¡ì}¡ìclass BoonReflectionEffect extends ReplacementEffectImpl {¡ìpublic BoonReflectionEffect() {¡ìsuper(Duration.WhileOnBattlefield, Outcome.Benefit);¡ìstaticText = "If you would gain life, you gain twice that much life instead";¡ì}¡ìpublic BoonReflectionEffect(final BoonReflectionEffect effect) {¡ìsuper(effect);¡ì}¡ì@Override¡ìpublic BoonReflectionEffect copy() {¡ìreturn new BoonReflectionEffect(this);¡ì}¡ì@Override¡ìpublic boolean apply(Game game, Ability source) {¡ìreturn true;¡ì}¡ì@Override¡ìpublic boolean replaceEvent(GameEvent event, Ability source, Game game) {¡ìevent.setAmount(event.getAmount() * 2);¡ìreturn false;¡ì}¡ì@Override¡ìpublic boolean checksEventType(GameEvent event, Game game) {¡ìreturn event.getType().equals(EventType.GAIN_LIFE);¡ì}¡ì@Override¡ìpublic boolean applies(GameEvent event, Ability source, Game game) {¡ìreturn event.getPlayerId().equals(source.getControllerId()) && (source.getControllerId() != null);¡ì}¡ì}¡ì
