public class LilianaOfTheVeil extends CardImpl {°Ïpublic LilianaOfTheVeil(UUID ownerId) {°Ïsuper(ownerId, 105, "Liliana of the Veil", Rarity.MYTHIC, new CardType[]{CardType.PLANESWALKER}, "{1}{B}{B}");°Ïthis.expansionSetCode = "ISD";°Ïthis.subtype.add("Liliana");°Ïthis.addAbility(new PlanswalkerEntersWithLoyalityCountersAbility(3));°Ïthis.addAbility(new LoyaltyAbility(new DiscardEachPlayerEffect(), 1));°ÏLoyaltyAbility ability = new LoyaltyAbility(new SacrificeEffect(new FilterCreaturePermanent(), 1, "Target player"), -2);°Ïability.addTarget(new TargetPlayer());°Ïthis.addAbility(ability);°Ïability = new LoyaltyAbility(new LilianaOfTheVeilEffect(), -6);°Ïability.addTarget(new TargetPlayer());°Ïthis.addAbility(ability);°Ï}°Ïpublic LilianaOfTheVeil(final LilianaOfTheVeil card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic LilianaOfTheVeil copy() {°Ïreturn new LilianaOfTheVeil(this);°Ï}°Ï}°Ïclass LilianaOfTheVeilEffect extends OneShotEffect {°Ïpublic LilianaOfTheVeilEffect() {°Ïsuper(Outcome.Sacrifice);°Ïthis.staticText = "Separate all permanents target player controls into two piles. That player sacrifices all permanents in the pile of his or her choice";°Ï}°Ïpublic LilianaOfTheVeilEffect(final LilianaOfTheVeilEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic LilianaOfTheVeilEffect copy() {°Ïreturn new LilianaOfTheVeilEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPlayer player = game.getPlayer(source.getControllerId());°ÏPlayer targetPlayer = game.getPlayer(source.getFirstTarget());°Ïif (player != null && targetPlayer != null) {°Ïint count = game.getBattlefield().countAll(new FilterPermanent(), targetPlayer.getId(), game);°ÏTargetPermanent target = new TargetPermanent(0, count, new FilterPermanent("permanents to put in the first pile"), true);°ÏList<Permanent> pile1 = new ArrayList<>();°Ïtarget.setRequired(false);°Ïif (player.choose(Outcome.Neutral, target, source.getSourceId(), game)) {°ÏList<UUID> targets = target.getTargets();°Ïfor (UUID targetId : targets) {°ÏPermanent p = game.getPermanent(targetId);°Ïif (p != null) {°Ïpile1.add(p);°Ï}°Ï}°Ï}°ÏList<Permanent> pile2 = new ArrayList<>();°Ïfor (Permanent p : game.getBattlefield().getAllActivePermanents(targetPlayer.getId())) {°Ïif (!pile1.contains(p)) {°Ïpile2.add(p);°Ï}°Ï}°Ïboolean choice = targetPlayer.choosePile(Outcome.DestroyPermanent, "Choose a pile to sacrifice.", pile1, pile2, game);°Ïif (choice) {°ÏsacrificePermanents(pile1, game, source);°Ï} else {°ÏsacrificePermanents(pile2, game, source);°Ï}°Ïreturn true;°Ï}°Ïreturn false;°Ï}°Ïprivate void sacrificePermanents(List<Permanent> pile, Game game, Ability source) {°Ïfor (Permanent permanent : pile) {°Ïif (permanent != null) {°Ïpermanent.sacrifice(source.getSourceId(), game);°Ï}°Ï}°Ï}°Ï}°Ï
