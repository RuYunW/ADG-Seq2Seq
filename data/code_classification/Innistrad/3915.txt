public class InquisitorsFlail extends CardImpl {°Ïpublic InquisitorsFlail(UUID ownerId) {°Ïsuper(ownerId, 227, "Inquisitor's Flail", Rarity.UNCOMMON, new CardType[]{CardType.ARTIFACT}, "{2}");°Ïthis.expansionSetCode = "ISD";°Ïthis.subtype.add("Equipment");°Ïthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new InquisitorsFlailEffect()));°Ïthis.addAbility(new EquipAbility(Outcome.AddAbility, new GenericManaCost(2)));°Ï}°Ïpublic InquisitorsFlail(final InquisitorsFlail card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic InquisitorsFlail copy() {°Ïreturn new InquisitorsFlail(this);°Ï}°Ï}°Ïclass InquisitorsFlailEffect extends ReplacementEffectImpl {°Ïpublic InquisitorsFlailEffect() {°Ïsuper(Duration.WhileOnBattlefield, Outcome.Damage);°ÏstaticText = "If equipped creature would deal combat damage, it deals double that damage instead. \n"°Ï+ "If another creature would deal combat damage to equipped creature, it deals double that damage to equipped creature instead";°Ï}°Ïpublic InquisitorsFlailEffect(final InquisitorsFlailEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic InquisitorsFlailEffect copy() {°Ïreturn new InquisitorsFlailEffect(this);°Ï}°Ï@Override°Ïpublic boolean checksEventType(GameEvent event, Game game) {°Ïreturn event.getType().equals(GameEvent.EventType.DAMAGE_CREATURE) ||°Ïevent.getType().equals(GameEvent.EventType.DAMAGE_PLANESWALKER) ||°Ïevent.getType().equals(GameEvent.EventType.DAMAGE_PLAYER);°Ï}°Ï@Override°Ïpublic boolean applies(GameEvent event, Ability source, Game game) {°Ïboolean isCombat = false;°Ïif (event instanceof DamageCreatureEvent) {°ÏisCombat = ((DamageCreatureEvent) event).isCombatDamage();°Ï} else if (event instanceof DamageEvent) {°ÏisCombat = ((DamageEvent) event).isCombatDamage();°Ï}°Ïif (isCombat) {°ÏPermanent equipment = game.getPermanent(source.getSourceId());°Ïif (equipment != null && equipment.getAttachedTo() != null) {°ÏUUID attachedTo = equipment.getAttachedTo();°Ïif (event.getSourceId().equals(attachedTo)) {°Ïreturn true;°Ï} else if (event.getTargetId().equals(attachedTo)) {°Ïreturn true;°Ï}°Ï}°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°Ïreturn true;°Ï}°Ï@Override°Ïpublic boolean replaceEvent(GameEvent event, Ability source, Game game) {°Ïevent.setAmount(event.getAmount() * 2);°Ïreturn false;°Ï}°Ï}°Ï
