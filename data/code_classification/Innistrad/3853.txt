public class DaybreakRanger extends CardImpl {°Ïprivate static final FilterCreaturePermanent filter = new FilterCreaturePermanent("creature with flying");°Ïstatic {°Ïfilter.add(new AbilityPredicate(FlyingAbility.class));°Ï}°Ïpublic DaybreakRanger(UUID ownerId) {°Ïsuper(ownerId, 176, "Daybreak Ranger", Rarity.RARE, new CardType[]{CardType.CREATURE}, "{2}{G}");°Ïthis.expansionSetCode = "ISD";°Ïthis.subtype.add("Human");°Ïthis.subtype.add("Archer");°Ïthis.subtype.add("Werewolf");°Ïthis.canTransform = true;°Ïthis.secondSideCard = new NightfallPredator(ownerId);°Ïthis.power = new MageInt(2);°Ïthis.toughness = new MageInt(2);°ÏAbility activatedAbility = new SimpleActivatedAbility(Zone.BATTLEFIELD, new DamageTargetEffect(2), new TapSourceCost());°ÏactivatedAbility.addTarget(new TargetCreaturePermanent(filter));°Ïthis.addAbility(activatedAbility);°Ïthis.addAbility(new TransformAbility());°ÏTriggeredAbility ability = new BeginningOfUpkeepTriggeredAbility(new TransformSourceEffect(true), TargetController.ANY, false);°Ïthis.addAbility(new ConditionalTriggeredAbility(ability, NoSpellsWereCastLastTurnCondition.getInstance(), TransformAbility.NO_SPELLS_TRANSFORM_RULE));°Ï}°Ïpublic DaybreakRanger(final DaybreakRanger card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic DaybreakRanger copy() {°Ïreturn new DaybreakRanger(this);°Ï}°Ï}°Ï
