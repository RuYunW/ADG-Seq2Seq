public class EvilTwin extends CardImpl {°Ïpublic EvilTwin(UUID ownerId) {°Ïsuper(ownerId, 212, "Evil Twin", Rarity.RARE, new CardType[]{CardType.CREATURE}, "{2}{U}{B}");°Ïthis.expansionSetCode = "ISD";°Ïthis.subtype.add("Shapeshifter");°Ïthis.power = new MageInt(0);°Ïthis.toughness = new MageInt(0);°ÏEffect effect = new CopyPermanentEffect(new FilterCreaturePermanent(), new EvilTwinApplyToPermanent());°Ïeffect.setText("a copy of any creature on the battlefield except it gains \"{U}{B}, {T}: Destroy target creature with the same name as this creature.\"");°Ïthis.addAbility(new EntersBattlefieldAbility(effect, true));°Ï}°Ïpublic EvilTwin(final EvilTwin card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic EvilTwin copy() {°Ïreturn new EvilTwin(this);°Ï}°Ï}°Ïclass EvilTwinApplyToPermanent extends ApplyToPermanent {°Ïprivate static final FilterCreaturePermanent filter = new FilterCreaturePermanent("creature with the same name as this creature");°Ïstatic {°Ïfilter.add(new EvilTwinPredicate());°Ï}°Ï@Override°Ïpublic Boolean apply(Game game, Permanent permanent) {°ÏAbility ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new DestroyTargetEffect(), new ManaCostsImpl("{U}{B}"));°Ïability.addCost(new TapSourceCost());°Ïability.addTarget(new TargetCreaturePermanent(filter));°Ïpermanent.addAbility(ability, game);°Ïreturn true;°Ï}°Ï@Override°Ïpublic Boolean apply(Game game, MageObject mageObject) {°ÏAbility ability = new SimpleActivatedAbility(Zone.BATTLEFIELD, new DestroyTargetEffect(), new ManaCostsImpl("{U}{B}"));°Ïability.addCost(new TapSourceCost());°Ïability.addTarget(new TargetCreaturePermanent(filter));°ÏmageObject.getAbilities().add(ability);°Ïreturn true;°Ï}°Ï}°Ïclass EvilTwinPredicate implements ObjectSourcePlayerPredicate<ObjectSourcePlayer<Permanent>> {°Ï@Override°Ïpublic boolean apply(ObjectSourcePlayer<Permanent> input, Game game) {°ÏPermanent permanent = input.getObject();°ÏPermanent twin = game.getPermanent(input.getSourceId());°Ïreturn permanent != null && twin != null && !twin.getName().isEmpty() && permanent.getName().equals(twin.getName());°Ï}°Ï@Override°Ïpublic String toString() {°Ïreturn "SameNameAsSource";°Ï}°Ï}°Ï
