public class RunechantersPike extends CardImpl {°Ïprotected static final FilterCard filterCard = new FilterCard();°Ïstatic {°ÏfilterCard.add(Predicates.or(°Ïnew CardTypePredicate(CardType.INSTANT),°Ïnew CardTypePredicate(CardType.SORCERY)));°Ï}°Ïpublic RunechantersPike(UUID ownerId) {°Ïsuper(ownerId, 231, "Runechanter's Pike", Rarity.RARE, new CardType[]{CardType.ARTIFACT}, "{2}");°Ïthis.expansionSetCode = "ISD";°Ïthis.subtype.add("Equipment");°Ïthis.addAbility(new EquipAbility(Outcome.AddAbility, new GenericManaCost(2)));°Ïthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new BoostEquippedEffect(new RunechantersPikeValue(), new StaticValue(0))));°Ïthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new GainAbilityAttachedEffect(FirstStrikeAbility.getInstance(), AttachmentType.EQUIPMENT)));°Ï}°Ïpublic RunechantersPike(final RunechantersPike card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic RunechantersPike copy() {°Ïreturn new RunechantersPike(this);°Ï}°Ï}°Ïclass RunechantersPikeValue implements DynamicValue {°Ï@Override°Ïpublic int calculate(Game game, Ability sourceAbility, Effect effect) {°ÏPlayer player = game.getPlayer(sourceAbility.getControllerId());°Ïif (player != null) {°Ïreturn player.getGraveyard().getCards(RunechantersPike.filterCard, game).size();°Ï}°Ïreturn 0;°Ï}°Ï@Override°Ïpublic DynamicValue copy() {°Ïreturn this;°Ï}°Ï@Override°Ïpublic String getMessage() {°Ïreturn "instant and sorcery card in your graveyard";°Ï}°Ï@Override°Ïpublic String toString() {°Ïreturn "X";°Ï}°Ï}°Ï
