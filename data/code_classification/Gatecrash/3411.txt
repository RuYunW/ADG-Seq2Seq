public class LazavDimirMastermind extends CardImpl {°Ïpublic LazavDimirMastermind(UUID ownerId) {°Ïsuper(ownerId, 174, "Lazav, Dimir Mastermind", Rarity.MYTHIC, new CardType[]{CardType.CREATURE}, "{U}{U}{B}{B}");°Ïthis.expansionSetCode = "GTC";°Ïthis.supertype.add("Legendary");°Ïthis.subtype.add("Shapeshifter");°Ïthis.power = new MageInt(3);°Ïthis.toughness = new MageInt(3);°Ïthis.addAbility(HexproofAbility.getInstance());°Ïthis.addAbility(new PutCardIntoGraveFromAnywhereAllTriggeredAbility(°Ïnew LazavDimirEffect(), true,°Ïnew FilterCreatureCard("a creature card"),°ÏTargetController.OPPONENT, SetTargetPointer.CARD));°Ï}°Ïpublic LazavDimirMastermind(final LazavDimirMastermind card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic LazavDimirMastermind copy() {°Ïreturn new LazavDimirMastermind(this);°Ï}°Ï}°Ïclass LazavDimirEffect extends ContinuousEffectImpl {°Ïprotected UUID IdOfCopiedCard;°Ïprotected Card cardToCopy;°Ïpublic LazavDimirEffect() {°Ïsuper(Duration.WhileOnBattlefield, Layer.CopyEffects_1, SubLayer.NA, Outcome.BecomeCreature);°ÏstaticText = "have {this} become a copy of that card except its name is still {this}, it's legendary in addition to its other types, and it gains hexproof and this ability";°Ï}°Ïpublic LazavDimirEffect(final LazavDimirEffect effect) {°Ïsuper(effect);°Ïthis.cardToCopy = effect.cardToCopy;°Ïthis.IdOfCopiedCard = effect.IdOfCopiedCard;°Ï}°Ï@Override°Ïpublic LazavDimirEffect copy() {°Ïreturn new LazavDimirEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏCard card = game.getCard(((FixedTarget)getTargetPointer()).getTarget());°ÏPermanent permanent = game.getPermanent(source.getSourceId());°Ïif (card == null || permanent == null) {°Ïdiscard();°Ïreturn false;°Ï}°Ïif (IdOfCopiedCard == null || !IdOfCopiedCard.equals(card.getId())) {°ÏIdOfCopiedCard = card.getId();°ÏcardToCopy = card.copy();°ÏcardToCopy.assignNewId();°Ï}°Ïpermanent.getPower().setValue(cardToCopy.getPower().getValue());°Ïpermanent.getToughness().setValue(cardToCopy.getToughness().getValue());°Ïpermanent.getColor(game).setColor(cardToCopy.getColor(game));°Ïpermanent.getManaCost().clear();°Ïpermanent.getManaCost().add(cardToCopy.getManaCost());°Ïpermanent.getCardType().clear();°Ïfor (CardType type : cardToCopy.getCardType()) {°Ïif (!permanent.getCardType().contains(type)) {°Ïpermanent.getCardType().add(type);°Ï}°Ï}°Ïpermanent.getSubtype().clear();°Ïfor (String type : cardToCopy.getSubtype()) {°Ïif (!permanent.getSubtype().contains(type)) {°Ïpermanent.getSubtype().add(type);°Ï}°Ï}°Ïpermanent.getSupertype().clear();°Ïpermanent.getSupertype().add("Legendary");°Ïfor (String type : cardToCopy.getSupertype()) {°Ïif (!permanent.getSupertype().contains(type)) {°Ïpermanent.getSupertype().add(type);°Ï}°Ï}°Ïpermanent.removeAllAbilities(source.getSourceId(), game);°Ïpermanent.addAbility(HexproofAbility.getInstance(), source.getSourceId(), game);°Ïpermanent.addAbility(new PutCardIntoGraveFromAnywhereAllTriggeredAbility(°Ïnew LazavDimirEffect(), true,°Ïnew FilterCreatureCard("a creature card"),°ÏTargetController.OPPONENT, SetTargetPointer.CARD), source.getSourceId(), game);°Ïfor (Ability ability : cardToCopy.getAbilities()) {°Ïif (!permanent.getAbilities().contains(ability)) {°Ïpermanent.addAbility(ability, source.getSourceId(), game);°Ï}°Ï}°Ïreturn true;°Ï}°Ï}°Ï
