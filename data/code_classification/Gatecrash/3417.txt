public class MarkForDeath extends CardImpl {°Ïprivate static final FilterCreaturePermanent filter = new FilterCreaturePermanent("creature an opponent controls");°Ïstatic {°Ïfilter.add(new ControllerPredicate(TargetController.OPPONENT));°Ï}°Ïpublic MarkForDeath(UUID ownerId) {°Ïsuper(ownerId, 99, "Mark for Death", Rarity.UNCOMMON, new CardType[]{CardType.SORCERY}, "{3}{R}");°Ïthis.expansionSetCode = "GTC";°Ïthis.getSpellAbility().addEffect(new MarkForDeathEffect());°Ïthis.getSpellAbility().addTarget(new TargetCreaturePermanent(filter));°Ï}°Ïpublic MarkForDeath(final MarkForDeath card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic MarkForDeath copy() {°Ïreturn new MarkForDeath(this);°Ï}°Ï}°Ïclass MarkForDeathEffect extends OneShotEffect {°Ïpublic MarkForDeathEffect() {°Ïsuper(Outcome.Damage);°ÏstaticText = "Target creature an opponent controls blocks this turn if able. Untap that creature. Other creatures that player controls can't block this turn";°Ï}°Ïpublic MarkForDeathEffect(final MarkForDeathEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPermanent target = game.getPermanent(source.getFirstTarget());°Ïif (target == null) {°Ïreturn false;°Ï}°ÏFilterCreaturePermanent filter = new FilterCreaturePermanent();°Ïfilter.add(new ControllerIdPredicate(target.getControllerId()));°Ïfilter.add(Predicates.not(new CardIdPredicate(target.getId())));°ÏContinuousEffect effect = new BlocksIfAbleTargetEffect(Duration.EndOfTurn);°Ïeffect.setTargetPointer(new FixedTarget(target.getId()));°Ïgame.addEffect(effect, source);°Ïtarget.untap(game);°ÏContinuousEffect effect2 = new CantBlockAllEffect(filter, Duration.EndOfTurn);°Ïgame.addEffect(effect2, source);°Ïreturn true;°Ï}°Ï@Override°Ïpublic MarkForDeathEffect copy() {°Ïreturn new MarkForDeathEffect(this);°Ï}°Ï}°Ï
