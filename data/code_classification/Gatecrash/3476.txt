public class Skullcrack extends CardImpl {¡ìpublic Skullcrack (UUID ownerId) {¡ìsuper(ownerId, 106, "Skullcrack", Rarity.UNCOMMON, new CardType[]{CardType.INSTANT}, "{1}{R}");¡ìthis.expansionSetCode = "GTC";¡ìthis.getSpellAbility().addEffect(new CantGainLifeAllEffect(Duration.EndOfTurn));¡ìthis.getSpellAbility().addEffect(new DamageCantBePreventedEffect());¡ìthis.getSpellAbility().addEffect(new DamageTargetEffect(3));¡ìthis.getSpellAbility().addTarget(new TargetPlayer());¡ì}¡ìpublic Skullcrack(final Skullcrack card) {¡ìsuper(card);¡ì}¡ì@Override¡ìpublic Skullcrack copy() {¡ìreturn new Skullcrack(this);¡ì}¡ì}¡ìclass DamageCantBePreventedEffect extends ContinuousRuleModifyingEffectImpl {¡ìpublic DamageCantBePreventedEffect() {¡ìsuper(Duration.EndOfTurn, Outcome.Benefit);¡ìstaticText = "Damage can't be prevented this turn";¡ì}¡ìpublic DamageCantBePreventedEffect(final DamageCantBePreventedEffect effect) {¡ìsuper(effect);¡ì}¡ì@Override¡ìpublic DamageCantBePreventedEffect copy() {¡ìreturn new DamageCantBePreventedEffect(this);¡ì}¡ì@Override¡ìpublic boolean apply(Game game, Ability source) {¡ìreturn true;¡ì}¡ì@Override¡ìpublic boolean checksEventType(GameEvent event, Game game) {¡ìreturn event.getType() == GameEvent.EventType.PREVENT_DAMAGE;¡ì}¡ì@Override¡ìpublic boolean applies(GameEvent event, Ability source, Game game) {¡ìreturn true;¡ì}¡ì}¡ì
