public class ObzedatGhostCouncil extends CardImpl {°Ïpublic ObzedatGhostCouncil(UUID ownerId) {°Ïsuper(ownerId, 182, "Obzedat, Ghost Council", Rarity.MYTHIC, new CardType[]{CardType.CREATURE}, "{1}{W}{W}{B}{B}");°Ïthis.expansionSetCode = "GTC";°Ïthis.subtype.add("Spirit");°Ïthis.subtype.add("Advisor");°Ïthis.supertype.add("Legendary");°Ïthis.power = new MageInt(5);°Ïthis.toughness = new MageInt(5);°ÏAbility ability = new EntersBattlefieldTriggeredAbility(new LoseLifeTargetEffect(2));°Ïability.addEffect(new GainLifeEffect(2));°Ïability.addTarget(new TargetOpponent());°Ïthis.addAbility(ability);°ÏAbility ability2 = new BeginningOfYourEndStepTriggeredAbility(new ObzedatGhostCouncilExileSourceEffect(), true);°Ïability2.addEffect(new CreateDelayedTriggeredAbilityEffect(new BeginningOfYourUpkeepdelayTriggeredAbility()));°Ïthis.addAbility(ability2);°Ï}°Ïpublic ObzedatGhostCouncil(final ObzedatGhostCouncil card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic ObzedatGhostCouncil copy() {°Ïreturn new ObzedatGhostCouncil(this);°Ï}°Ï}°Ïclass ObzedatGhostCouncilExileSourceEffect extends OneShotEffect {°Ïpublic ObzedatGhostCouncilExileSourceEffect() {°Ïsuper(Outcome.Exile);°ÏstaticText = "Exile {this}";°Ï}°Ïpublic ObzedatGhostCouncilExileSourceEffect(final ObzedatGhostCouncilExileSourceEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic ObzedatGhostCouncilExileSourceEffect copy() {°Ïreturn new ObzedatGhostCouncilExileSourceEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏPermanent permanent = game.getPermanent(source.getSourceId());°Ïif (permanent != null) {°Ïreturn permanent.moveToExile(source.getSourceId(), permanent.getName(), source.getSourceId(), game);°Ï}°Ïreturn false;°Ï}°Ï}°Ïclass BeginningOfYourUpkeepdelayTriggeredAbility extends DelayedTriggeredAbility {°Ïpublic BeginningOfYourUpkeepdelayTriggeredAbility() {°Ïthis(new ObzedatGhostCouncilReturnEffect(), TargetController.YOU);°Ïthis.addEffect(new GainAbilitySourceEffect(HasteAbility.getInstance(), Duration.Custom));°Ï}°Ïpublic BeginningOfYourUpkeepdelayTriggeredAbility(Effect effect, TargetController targetController) {°Ïsuper(effect);°Ï}°Ïpublic BeginningOfYourUpkeepdelayTriggeredAbility(BeginningOfYourUpkeepdelayTriggeredAbility ability) {°Ïsuper(ability);°Ï}°Ï@Override°Ïpublic boolean checkEventType(GameEvent event, Game game) {°Ïreturn event.getType() == EventType.UPKEEP_STEP_PRE;°Ï}°Ï@Override°Ïpublic boolean checkTrigger(GameEvent event, Game game) {°Ïreturn event.getPlayerId().equals(this.controllerId);°Ï}°Ï@Override°Ïpublic BeginningOfYourUpkeepdelayTriggeredAbility copy() {°Ïreturn new BeginningOfYourUpkeepdelayTriggeredAbility(this);°Ï}°Ï@Override°Ïpublic String getRule() {°Ïreturn "If you do, return it to the battlefield under it's owner's control at the beginning of your next upkeep. It gains haste";°Ï}°Ï}°Ïclass ObzedatGhostCouncilReturnEffect extends OneShotEffect {°Ïpublic ObzedatGhostCouncilReturnEffect() {°Ïsuper(Outcome.Benefit);°Ï}°Ïpublic ObzedatGhostCouncilReturnEffect(final ObzedatGhostCouncilReturnEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic ObzedatGhostCouncilReturnEffect copy() {°Ïreturn new ObzedatGhostCouncilReturnEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏCard card = game.getCard(source.getSourceId());°Ïif (card != null) {°ÏExileZone currentZone = game.getState().getExile().getExileZone(source.getSourceId());°Ïif (currentZone != null && currentZone.size() > 0) {°ÏPlayer owner = game.getPlayer(card.getOwnerId());°Ïif (owner != null && owner.moveCards(card, Zone.BATTLEFIELD, source, game)) {°Ïreturn true;°Ï}°Ï}°Ï}°Ïreturn false;°Ï}°Ï}°Ï
