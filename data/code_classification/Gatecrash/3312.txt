public class ArmoredTransport extends CardImpl {°Ïpublic ArmoredTransport(UUID ownerId) {°Ïsuper(ownerId, 226, "Armored Transport", Rarity.COMMON, new CardType[]{CardType.ARTIFACT, CardType.CREATURE}, "{3}");°Ïthis.expansionSetCode = "GTC";°Ïthis.subtype.add("Construct");°Ïthis.power = new MageInt(2);°Ïthis.toughness = new MageInt(1);°Ïthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new ArmoredTransportPreventCombatDamageSourceEffect(Duration.WhileOnBattlefield)));°Ï}°Ïpublic ArmoredTransport(final ArmoredTransport card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic ArmoredTransport copy() {°Ïreturn new ArmoredTransport(this);°Ï}°Ï}°Ïclass ArmoredTransportPreventCombatDamageSourceEffect extends PreventionEffectImpl {°Ïpublic ArmoredTransportPreventCombatDamageSourceEffect(Duration duration) {°Ïsuper(duration);°ÏstaticText = "Prevent all combat damage that would be dealt to {this} by creatures blocking it" + duration.toString();°Ï}°Ïpublic ArmoredTransportPreventCombatDamageSourceEffect(final ArmoredTransportPreventCombatDamageSourceEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic ArmoredTransportPreventCombatDamageSourceEffect copy() {°Ïreturn new ArmoredTransportPreventCombatDamageSourceEffect(this);°Ï}°Ï@Override°Ïpublic boolean applies(GameEvent event, Ability source, Game game) {°Ïif (super.applies(event, source, game)) {°ÏDamageEvent damageEvent = (DamageEvent) event;°Ïif (event.getTargetId().equals(source.getSourceId()) && damageEvent.isCombatDamage()) {°ÏPermanent sourcePermanent = game.getPermanent(source.getSourceId());°Ïif (sourcePermanent != null && sourcePermanent.isAttacking()) {°Ïreturn true;°Ï}°Ï}°Ï}°Ïreturn false;°Ï}°Ï}°Ï
