public class SpireTracer extends CardImpl {¡ìpublic SpireTracer(UUID ownerId) {¡ìsuper(ownerId, 135, "Spire Tracer", Rarity.COMMON, new CardType[]{CardType.CREATURE}, "{G}");¡ìthis.expansionSetCode = "GTC";¡ìthis.subtype.add("Elf");¡ìthis.subtype.add("Scout");¡ìthis.power = new MageInt(1);¡ìthis.toughness = new MageInt(1);¡ìthis.addAbility(new SimpleStaticAbility(Zone.BATTLEFIELD, new CantBeBlockedExceptByCreaturesWithFlyingOrReachEffect()));¡ì}¡ìpublic SpireTracer(final SpireTracer card) {¡ìsuper(card);¡ì}¡ì@Override¡ìpublic SpireTracer copy() {¡ìreturn new SpireTracer(this);¡ì}¡ì}¡ìclass CantBeBlockedExceptByCreaturesWithFlyingOrReachEffect extends RestrictionEffect {¡ìpublic CantBeBlockedExceptByCreaturesWithFlyingOrReachEffect() {¡ìsuper(Duration.WhileOnBattlefield);¡ìstaticText = "Can't be blocked except by creatures with flying or reach";¡ì}¡ìpublic CantBeBlockedExceptByCreaturesWithFlyingOrReachEffect(final CantBeBlockedExceptByCreaturesWithFlyingOrReachEffect effect) {¡ìsuper(effect);¡ì}¡ì@Override¡ìpublic boolean applies(Permanent permanent, Ability source, Game game) {¡ìif (permanent.getId().equals(source.getSourceId())) {¡ìreturn true;¡ì}¡ìreturn false;¡ì}¡ì@Override¡ìpublic boolean canBeBlocked(Permanent attacker, Permanent blocker, Ability source, Game game) {¡ìif (blocker.getAbilities().containsKey(FlyingAbility.getInstance().getId())¡ì|| blocker.getAbilities().containsKey(ReachAbility.getInstance().getId())) {¡ìreturn true;¡ì}¡ìreturn false;¡ì}¡ì@Override¡ìpublic CantBeBlockedExceptByCreaturesWithFlyingOrReachEffect copy() {¡ìreturn new CantBeBlockedExceptByCreaturesWithFlyingOrReachEffect(this);¡ì}¡ì}¡ì
