public class HellraiserGoblin extends CardImpl {°Ïpublic HellraiserGoblin(UUID ownerId) {°Ïsuper(ownerId, 95, "Hellraiser Goblin", Rarity.UNCOMMON, new CardType[]{CardType.CREATURE}, "{2}{R}");°Ïthis.expansionSetCode = "GTC";°Ïthis.subtype.add("Goblin");°Ïthis.subtype.add("Berserker");°Ïthis.power = new MageInt(2);°Ïthis.toughness = new MageInt(2);°ÏAbility ability = new SimpleStaticAbility(Zone.BATTLEFIELD, new GainAbilityControlledEffect(HasteAbility.getInstance(), Duration.WhileOnBattlefield, new FilterCreaturePermanent("Creatures")));°ÏEffect effect = new AttacksIfAbleAllEffect(Duration.WhileOnBattlefield);°Ïeffect.setText("and attack each combat if able");°Ïability.addEffect(effect);°Ïthis.addAbility(ability);°Ï}°Ïpublic HellraiserGoblin(final HellraiserGoblin card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic HellraiserGoblin copy() {°Ïreturn new HellraiserGoblin(this);°Ï}°Ï}°Ïclass AttacksIfAbleAllEffect extends RequirementEffect {°Ïprivate FilterControlledCreaturePermanent filter;°Ïpublic AttacksIfAbleAllEffect(Duration duration) {°Ïthis(duration, new FilterControlledCreaturePermanent());°Ï}°Ïpublic AttacksIfAbleAllEffect(Duration duration, FilterControlledCreaturePermanent filter) {°Ïsuper(duration);°Ïthis.filter = filter;°Ï}°Ïpublic AttacksIfAbleAllEffect(final AttacksIfAbleAllEffect effect) {°Ïsuper(effect);°Ïthis.filter = effect.filter;°Ï}°Ï@Override°Ïpublic AttacksIfAbleAllEffect copy() {°Ïreturn new AttacksIfAbleAllEffect(this);°Ï}°Ï@Override°Ïpublic boolean applies(Permanent permanent, Ability source, Game game) {°Ïreturn filter.match(permanent, source.getSourceId(), source.getControllerId(), game);°Ï}°Ï@Override°Ïpublic boolean mustAttack(Game game) {°Ïreturn true;°Ï}°Ï@Override°Ïpublic boolean mustBlock(Game game) {°Ïreturn false;°Ï}°Ï@Override°Ïpublic String getText(Mode mode) {°Ïif (!staticText.isEmpty()) {°Ïreturn staticText;°Ï}°Ïreturn filter.getMessage() + " attack each combat if able";°Ï}°Ï}°Ï
