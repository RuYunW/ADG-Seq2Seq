public class RustScarab extends CardImpl {°Ïpublic RustScarab(UUID ownerId) {°Ïsuper(ownerId, 130, "Rust Scarab", Rarity.UNCOMMON, new CardType[]{CardType.CREATURE}, "{4}{G}");°Ïthis.expansionSetCode = "GTC";°Ïthis.subtype.add("Insect");°Ïthis.power = new MageInt(4);°Ïthis.toughness = new MageInt(5);°ÏEffect effect = new DestroyTargetEffect();°Ïeffect.setText("destroy target artifact or enchantment defending player controls");°Ïthis.addAbility(new BecomesBlockedTriggeredAbility(effect, true));°Ï}°Ïpublic RustScarab(final RustScarab card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic RustScarab copy() {°Ïreturn new RustScarab(this);°Ï}°Ï}°Ïclass BecomesBlockedTriggeredAbility extends TriggeredAbilityImpl {°Ïpublic BecomesBlockedTriggeredAbility(Effect effect, boolean optional) {°Ïsuper(Zone.BATTLEFIELD, effect, optional);°Ï}°Ïpublic BecomesBlockedTriggeredAbility(final BecomesBlockedTriggeredAbility ability) {°Ïsuper(ability);°Ï}°Ï@Override°Ïpublic boolean checkEventType(GameEvent event, Game game) {°Ïreturn event.getType() == EventType.CREATURE_BLOCKED;°Ï}°Ï@Override°Ïpublic boolean checkTrigger(GameEvent event, Game game) {°Ïif (event.getTargetId().equals(this.getSourceId())) {°ÏUUID defenderId = game.getState().getCombat().findGroup(this.getSourceId()).getDefenderId();°Ïif (defenderId != null) {°Ïthis.getTargets().clear();°ÏFilterPermanent filter = new FilterPermanent("artifact or enchantment defending player controls");°Ïfilter.add(Predicates.or(new CardTypePredicate(CardType.ARTIFACT), new CardTypePredicate(CardType.ENCHANTMENT)));°Ïfilter.add(new ControllerIdPredicate(defenderId));°ÏTarget target = new TargetPermanent(filter);°Ïthis.addTarget(target);°Ïreturn true;°Ï}°Ï}°Ïreturn false;°Ï}°Ï@Override°Ïpublic String getRule() {°Ïreturn "Whenever {this} becomes blocked, " + super.getRule();°Ï}°Ï@Override°Ïpublic BecomesBlockedTriggeredAbility copy() {°Ïreturn new BecomesBlockedTriggeredAbility(this);°Ï}°Ï}°Ï
