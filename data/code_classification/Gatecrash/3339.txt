public class ConsumingAberration extends CardImpl {°Ïpublic ConsumingAberration(UUID ownerId) {°Ïsuper(ownerId, 152, "Consuming Aberration", Rarity.RARE, new CardType[]{CardType.CREATURE}, "{3}{U}{B}");°Ïthis.expansionSetCode = "GTC";°Ïthis.subtype.add("Horror");°Ïthis.power = new MageInt(0);°Ïthis.toughness = new MageInt(0);°Ïthis.addAbility(new SimpleStaticAbility(Zone.ALL, new SetPowerToughnessSourceEffect(new CardsInOpponentsGraveyardsCount(), Duration.EndOfGame)));°Ïthis.addAbility(new SpellCastControllerTriggeredAbility(new ConsumingAberrationEffect(), false));°Ï}°Ïpublic ConsumingAberration(final ConsumingAberration card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic ConsumingAberration copy() {°Ïreturn new ConsumingAberration(this);°Ï}°Ï}°Ïclass ConsumingAberrationEffect extends OneShotEffect {°Ïpublic ConsumingAberrationEffect() {°Ïsuper(Outcome.PutCardInPlay);°Ïthis.staticText = "each opponent reveals cards from the top of his or her library until he or she reveals a land card, then puts those cards into his or her graveyard";°Ï}°Ïpublic ConsumingAberrationEffect(final ConsumingAberrationEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic ConsumingAberrationEffect copy() {°Ïreturn new ConsumingAberrationEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°Ïfor (UUID opponentId : game.getOpponents(source.getControllerId())) {°ÏPlayer player = game.getPlayer(opponentId);°Ïif (player == null) {°Ïcontinue;°Ï}°ÏCards cards = new CardsImpl();°Ïwhile(player.getLibrary().size() > 0){°ÏCard card = player.getLibrary().removeFromTop(game);°Ïif (card != null) {°Ïcards.add(card);°Ïif(card.getCardType().contains(CardType.LAND)){°Ïbreak;°Ï}°Ï}°Ï}°Ïplayer.revealCards("Consuming Aberrtion", cards, game);°Ïplayer.moveCards(cards, Zone.LIBRARY, Zone.GRAVEYARD, source, game);°Ï}°Ïreturn true;°Ï}°Ï}°Ïclass CardsInOpponentsGraveyardsCount implements DynamicValue {°Ïpublic CardsInOpponentsGraveyardsCount(){°Ïsuper();°Ï}°Ïpublic CardsInOpponentsGraveyardsCount(DynamicValue count){°Ïsuper();°Ï}°Ï@Override°Ïpublic int calculate(Game game, Ability sourceAbility, Effect effect) {°Ïint amount = 0;°Ïfor (UUID playerUUID : game.getOpponents(sourceAbility.getControllerId())) {°ÏPlayer player = game.getPlayer(playerUUID);°Ïif (player != null) {°Ïamount += player.getGraveyard().size();°Ï}°Ï}°Ïreturn amount;°Ï}°Ï@Override°Ïpublic DynamicValue copy() {°Ïreturn new CardsInOpponentsGraveyardsCount(this);°Ï}°Ï@Override°Ïpublic String toString() {°Ïreturn "1";°Ï}°Ï@Override°Ïpublic String getMessage() {°Ïreturn "cards in your opponents' graveyards";°Ï}°Ï}°Ï
