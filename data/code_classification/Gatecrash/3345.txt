public class CryptGhast extends CardImpl {°Ïpublic CryptGhast(UUID ownerId) {°Ïsuper(ownerId, 61, "Crypt Ghast", Rarity.RARE, new CardType[]{CardType.CREATURE}, "{3}{B}");°Ïthis.expansionSetCode = "GTC";°Ïthis.subtype.add("Spirit");°Ïthis.power = new MageInt(2);°Ïthis.toughness = new MageInt(2);°Ïthis.addAbility(new ExtortAbility());°Ïthis.addAbility(new CryptGhastTriggeredAbility());°Ï}°Ïpublic CryptGhast(final CryptGhast card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic CryptGhast copy() {°Ïreturn new CryptGhast(this);°Ï}°Ï}°Ïclass CryptGhastTriggeredAbility extends TriggeredManaAbility {°Ïprivate static final FilterControlledLandPermanent filter = new FilterControlledLandPermanent("Swamp");°Ïstatic {°Ïfilter.add(new SubtypePredicate("Swamp"));°Ï}°Ïpublic CryptGhastTriggeredAbility() {°Ïsuper(Zone.BATTLEFIELD, new BasicManaEffect(Mana.BlackMana(1)), false);°Ïthis.usesStack = false;°Ï}°Ïpublic CryptGhastTriggeredAbility(CryptGhastTriggeredAbility ability) {°Ïsuper(ability);°Ï}°Ï@Override°Ïpublic boolean checkEventType(GameEvent event, Game game) {°Ïreturn event.getType() == EventType.TAPPED_FOR_MANA;°Ï}°Ï@Override°Ïpublic boolean checkTrigger(GameEvent event, Game game) {°ÏPermanent land = game.getPermanent(event.getTargetId());°Ïreturn land != null && filter.match(land, this.getSourceId(), this.getControllerId(), game);°Ï}°Ï@Override°Ïpublic CryptGhastTriggeredAbility copy() {°Ïreturn new CryptGhastTriggeredAbility(this);°Ï}°Ï@Override°Ïpublic String getRule() {°Ïreturn "Whenever you tap a Swamp for mana, add {B} to your mana pool <i>(in addition to the mana the land produces)</i>.";°Ï}°Ï}°Ï
