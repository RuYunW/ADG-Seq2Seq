public class AureliasFury extends CardImpl {°Ïpublic AureliasFury(UUID ownerId) {°Ïsuper(ownerId, 144, "Aurelia's Fury", Rarity.MYTHIC, new CardType[]{CardType.INSTANT}, "{X}{R}{W}");°Ïthis.expansionSetCode = "GTC";°ÏDynamicValue xValue = new ManacostVariableValue();°Ïthis.getSpellAbility().addEffect(new DamageMultiEffect(xValue));°Ïthis.getSpellAbility().addEffect(new AureliasFuryEffect());°Ïthis.getSpellAbility().addTarget(new TargetCreatureOrPlayerAmount(xValue));°Ïthis.getSpellAbility().addWatcher(new AureliasFuryDamagedByWatcher());°Ï}°Ïpublic AureliasFury(final AureliasFury card) {°Ïsuper(card);°Ï}°Ï@Override°Ïpublic AureliasFury copy() {°Ïreturn new AureliasFury(this);°Ï}°Ï}°Ïclass AureliasFuryEffect extends OneShotEffect {°Ïpublic AureliasFuryEffect() {°Ïsuper(Outcome.Benefit);°Ïthis.staticText = "Tap each creature dealt damage this way. Players dealt damage this way can't cast noncreature spells this turn";°Ï}°Ïpublic AureliasFuryEffect(final AureliasFuryEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic AureliasFuryEffect copy() {°Ïreturn new AureliasFuryEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°ÏAureliasFuryDamagedByWatcher watcher = (AureliasFuryDamagedByWatcher) game.getState().getWatchers().get("AureliasFuryDamagedByWatcher", source.getSourceId());°Ïif (watcher != null) {°Ïfor(UUID creatureId : watcher.damagedCreatures) {°ÏPermanent permanent = game.getPermanent(creatureId);°Ïif (permanent != null) {°Ïpermanent.tap(game);°Ï}°Ï}°Ïfor(UUID playerId : watcher.damagedPlayers) {°ÏContinuousEffect effect = new AureliasFuryCantCastEffect();°Ïeffect.setTargetPointer(new FixedTarget(playerId));°Ïgame.addEffect(effect, source);°Ï}°Ïwatcher.reset();°Ï}°Ïreturn false;°Ï}°Ï}°Ïclass AureliasFuryCantCastEffect extends ContinuousRuleModifyingEffectImpl {°Ïpublic AureliasFuryCantCastEffect() {°Ïsuper(Duration.EndOfTurn, Outcome.Benefit);°ÏstaticText = "Players dealt damage this way can't cast noncreature spells this turn";°Ï}°Ïpublic AureliasFuryCantCastEffect(final AureliasFuryCantCastEffect effect) {°Ïsuper(effect);°Ï}°Ï@Override°Ïpublic AureliasFuryCantCastEffect copy() {°Ïreturn new AureliasFuryCantCastEffect(this);°Ï}°Ï@Override°Ïpublic boolean apply(Game game, Ability source) {°Ïreturn true;°Ï}°Ï@Override°Ïpublic String getInfoMessage(Ability source, GameEvent event, Game game) {°ÏMageObject mageObject = game.getObject(source.getSourceId());°Ïif (mageObject != null) {°Ïreturn "You can't cast noncreature spells this turn (you were dealt damage by " + mageObject.getLogName() + ")";°Ï}°Ïreturn null;°Ï}°Ï@Override°Ïpublic boolean checksEventType(GameEvent event, Game game) {°Ïreturn event.getType() == GameEvent.EventType.CAST_SPELL;°Ï}°Ï@Override°Ïpublic boolean applies(GameEvent event, Ability source, Game game) {°ÏPlayer player = game.getPlayer(getTargetPointer().getFirst(game, source));°Ïif (player != null && player.getId().equals(event.getPlayerId())) {°ÏCard card = game.getCard(event.getSourceId());°Ïif (card != null && !card.getCardType().contains(CardType.CREATURE)) {°Ïreturn true;°Ï}°Ï}°Ïreturn false;°Ï}°Ï}°Ïclass AureliasFuryDamagedByWatcher extends Watcher {°Ïpublic List<UUID> damagedCreatures = new ArrayList<>();°Ïpublic List<UUID> damagedPlayers = new ArrayList<>();°Ïpublic AureliasFuryDamagedByWatcher() {°Ïsuper("AureliasFuryDamagedByWatcher", WatcherScope.CARD);°Ï}°Ïpublic AureliasFuryDamagedByWatcher(final AureliasFuryDamagedByWatcher watcher) {°Ïsuper(watcher);°Ïthis.damagedCreatures.addAll(watcher.damagedCreatures);°Ïthis.damagedPlayers.addAll(watcher.damagedPlayers);°Ï}°Ï@Override°Ïpublic AureliasFuryDamagedByWatcher copy() {°Ïreturn new AureliasFuryDamagedByWatcher(this);°Ï}°Ï@Override°Ïpublic void watch(GameEvent event, Game game) {°Ïif (event.getType() == EventType.DAMAGED_CREATURE) {°ÏMageObject obj = game.getObject(event.getSourceId());°Ïif (obj instanceof Spell) {°Ïif (sourceId.equals(((Spell) obj).getSourceId()) && !damagedCreatures.contains(event.getTargetId())) {°ÏdamagedCreatures.add(event.getTargetId());°Ï}°Ï}°Ï}°Ïif (event.getType() == EventType.DAMAGED_PLAYER) {°ÏMageObject obj = game.getObject(event.getSourceId());°Ïif (obj instanceof Spell) {°Ïif (sourceId.equals(((Spell) obj).getSourceId()) && !damagedPlayers.contains(event.getTargetId())) {°ÏdamagedPlayers.add(event.getTargetId());°Ï}°Ï}°Ï}°Ï}°Ï@Override°Ïpublic void reset() {°Ïsuper.reset();°ÏdamagedCreatures.clear();°ÏdamagedPlayers.clear();°Ï}°Ï}°Ï
