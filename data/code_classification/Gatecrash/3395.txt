public class HighPriestOfPenance extends CardImpl {¡ìpublic HighPriestOfPenance(UUID ownerId) {¡ìsuper(ownerId, 171, "High Priest of Penance", Rarity.RARE, new CardType[]{CardType.CREATURE}, "{W}{B}");¡ìthis.expansionSetCode = "GTC";¡ìthis.subtype.add("Human");¡ìthis.subtype.add("Cleric");¡ìthis.power = new MageInt(1);¡ìthis.toughness = new MageInt(1);¡ìthis.addAbility(new HighPriestOfPenanceTriggeredAbility());¡ì}¡ìpublic HighPriestOfPenance(final HighPriestOfPenance card) {¡ìsuper(card);¡ì}¡ì@Override¡ìpublic HighPriestOfPenance copy() {¡ìreturn new HighPriestOfPenance(this);¡ì}¡ì}¡ìclass HighPriestOfPenanceTriggeredAbility extends TriggeredAbilityImpl {¡ìpublic HighPriestOfPenanceTriggeredAbility() {¡ìsuper(Zone.BATTLEFIELD, new DestroyTargetEffect(), true);¡ìthis.addTarget(new TargetNonlandPermanent());¡ì}¡ìpublic HighPriestOfPenanceTriggeredAbility(final HighPriestOfPenanceTriggeredAbility ability) {¡ìsuper(ability);¡ì}¡ì@Override¡ìpublic HighPriestOfPenanceTriggeredAbility copy() {¡ìreturn new HighPriestOfPenanceTriggeredAbility(this);¡ì}¡ì@Override¡ìpublic boolean checkEventType(GameEvent event, Game game) {¡ìreturn event.getType() == EventType.DAMAGED_CREATURE;¡ì}¡ì@Override¡ìpublic boolean checkTrigger(GameEvent event, Game game) {¡ìreturn event.getTargetId().equals(this.sourceId);¡ì}¡ì@Override¡ìpublic String getRule() {¡ìreturn "Whenever {this} is dealt damage, " + super.getRule();¡ì}¡ì}¡ì
