protected void tearDown(){$}$
@KnownFailure("Fixed on DonutBurger, Wrong Exception thrown") public void test_unwrap_ByteBuffer_ByteBuffer_02(){$  String host="new host";$  int port=8080;$  ByteBuffer bbs=ByteBuffer.allocate(10);$  ByteBuffer bbR=ByteBuffer.allocate(100).asReadOnlyBuffer();$  ByteBuffer[] bbA={bbR,ByteBuffer.allocate(10),ByteBuffer.allocate(100)};$  SSLEngine sse=getEngine(host,port);$  sse.setUseClientMode(true);$  try {$    sse.unwrap(bbs,bbA);$    fail("ReadOnlyBufferException wasn't thrown");$  }$ catch (  ReadOnlyBufferException iobe) {$  }$catch (  Exception e) {$    fail(e + " was thrown instead of ReadOnlyBufferException");$  }$}$
public static CstFloat make(int bits){$  return new CstFloat(bits);$}$
public long size(){$  long size=0;$  if (parsedGeneExpressions == null)   parseGenes();$  for (int i=0; i < parsedGeneExpressions.length; i++)   size+=parsedGeneExpressions[i].numberOfNodes();$  return size;$}$
public void increment(View view){$  if (quantity == 100) {$    return;$  }$  quantity=quantity + 1;$  displayQuantity(quantity);$}$
public void trimToSize(){$  ++modCount;$  if (size < elementData.length) {$    elementData=Arrays.copyOf(elementData,size);$  }$}$
public SyncValueResponseMessage(SyncValueResponseMessage other){$  __isset_bitfield=other.__isset_bitfield;$  if (other.isSetHeader()) {$    this.header=new AsyncMessageHeader(other.header);$  }$  this.count=other.count;$}$
public void clearParsers(){$  if (parserManager != null) {$    parserManager.clearParsers();$  }$}$
private byte[] calculateUValue(byte[] generalKey,byte[] firstDocIdValue,int revision) throws GeneralSecurityException, EncryptionUnsupportedByProductException {$  if (revision == 2) {$    Cipher rc4=createRC4Cipher();$    SecretKey key=createRC4Key(generalKey);$    initEncryption(rc4,key);$    return crypt(rc4,PW_PADDING);$  }$ else   if (revision >= 3) {$    MessageDigest md5=createMD5Digest();$    md5.update(PW_PADDING);$    if (firstDocIdValue != null) {$      md5.update(firstDocIdValue);$    }$    final byte[] hash=md5.digest();$    Cipher rc4=createRC4Cipher();$    SecretKey key=createRC4Key(generalKey);$    initEncryption(rc4,key);$    final byte[] v=crypt(rc4,hash);$    rc4shuffle(v,generalKey,rc4);$    assert v.length == 16;$    final byte[] entryValue=new byte[32];$    System.arraycopy(v,0,entryValue,0,v.length);$    System.arraycopy(v,0,entryValue,16,v.length);$    return entryValue;$  }$ else {$    throw new EncryptionUnsupportedByProductException("Unsupported standard security handler revision " + revision);$  }$}$
private void assign(HashMap<String,DBIDs> labelMap,String label,DBIDRef id){$  if (labelMap.containsKey(label)) {$    DBIDs exist=labelMap.get(label);$    if (exist instanceof DBID) {$      ModifiableDBIDs n=DBIDUtil.newHashSet();$      n.add((DBID)exist);$      n.add(id);$      labelMap.put(label,n);$    }$ else {$      assert (exist instanceof HashSetModifiableDBIDs);$      assert (exist.size() > 1);$      ((ModifiableDBIDs)exist).add(id);$    }$  }$ else {$    labelMap.put(label,DBIDUtil.deref(id));$  }$}$
private void showFeedback(String message){$  if (myHost != null) {$    myHost.showFeedback(message);$  }$ else {$    System.out.println(message);$  }$}$
public CDeleteAction(final BackEndDebuggerProvider debuggerProvider,final int[] rows){$  super(rows.length == 1 ? "Remove Breakpoint" : "Remove Breakpoints");$  m_debuggerProvider=Preconditions.checkNotNull(debuggerProvider,"IE01344: Debugger provider argument can not be null");$  m_rows=rows.clone();$}$
public Yaml(BaseConstructor constructor,Representer representer,DumperOptions dumperOptions,Resolver resolver){$  if (!constructor.isExplicitPropertyUtils()) {$    constructor.setPropertyUtils(representer.getPropertyUtils());$  }$ else   if (!representer.isExplicitPropertyUtils()) {$    representer.setPropertyUtils(constructor.getPropertyUtils());$  }$  this.constructor=constructor;$  representer.setDefaultFlowStyle(dumperOptions.getDefaultFlowStyle());$  representer.setDefaultScalarStyle(dumperOptions.getDefaultScalarStyle());$  representer.getPropertyUtils().setAllowReadOnlyProperties(dumperOptions.isAllowReadOnlyProperties());$  representer.setTimeZone(dumperOptions.getTimeZone());$  this.representer=representer;$  this.dumperOptions=dumperOptions;$  this.resolver=resolver;$  this.name="Yaml:" + System.identityHashCode(this);$}$
public void testHitEndAfterFind(){$  hitEndTest(true,"#01.0","r((ege)|(geg))x","regexx",false);$  hitEndTest(true,"#01.1","r((ege)|(geg))x","regex",false);$  hitEndTest(true,"#01.2","r((ege)|(geg))x","rege",true);$  hitEndTest(true,"#01.2","r((ege)|(geg))x","xregexx",false);$  hitEndTest(true,"#02.0","regex","rexreger",true);$  hitEndTest(true,"#02.1","regex","raxregexr",false);$  String floatRegex=getHexFloatRegex();$  hitEndTest(true,"#03.0",floatRegex,Double.toHexString(-1.234d),true);$  hitEndTest(true,"#03.1",floatRegex,"1 ABC" + Double.toHexString(Double.NaN) + "buhuhu",false);$  hitEndTest(true,"#03.2",floatRegex,Double.toHexString(-0.0) + "--",false);$  hitEndTest(true,"#03.3",floatRegex,"--" + Double.toHexString(Double.MIN_VALUE) + "--",false);$  hitEndTest(true,"#04.0","(\\d+) fish (\\d+) fish (\\w+) fish (\\d+)","1 fish 2 fish red fish 5",true);$  hitEndTest(true,"#04.1","(\\d+) fish (\\d+) fish (\\w+) fish (\\d+)","----1 fish 2 fish red fish 5----",false);$}$
public void add(Individual individual){$  individuals.add(individual);$}$
public boolean removeSession(IgniteUuid sesId){$  GridTaskSessionImpl ses=sesMap.get(sesId);$  assert ses == null || ses.isFullSupport();$  if (ses != null && ses.release()) {$    sesMap.remove(sesId,ses);$    return true;$  }$  return false;$}$
public static Bitmap loadBitmapOptimized(Uri uri,Context context,int limit) throws ImageLoadException {$  return loadBitmapOptimized(new UriSource(uri,context){$  }$,limit);$}$
protected BasePeriod(long duration){$  super();$  iType=PeriodType.standard();$  int[] values=ISOChronology.getInstanceUTC().get(DUMMY_PERIOD,duration);$  iValues=new int[8];$  System.arraycopy(values,0,iValues,4,4);$}$
public FlatBufferBuilder(){$  this(1024);$}$
public PbrpcConnectionException(String arg0,Throwable arg1){$  super(arg0,arg1);$}$
public void uninstallUI(JComponent a){$  for (int i=0; i < uis.size(); i++) {$    ((ComponentUI)(uis.elementAt(i))).uninstallUI(a);$  }$}$
public static void shutdown(){$  if (instance != null) {$    instance.save();$  }$}$
public boolean GE(Word w2){$  return value.GE(w2.value);$}$
public static UnionCoder of(List<Coder<?>> elementCoders){$  return new UnionCoder(elementCoders);$}$
public void testFileDeletion() throws Exception {$  File testDir=createTestDir("testFileDeletion");$  String prefix1="testFileDeletion1";$  File[] files1=createFiles(testDir,prefix1,5);$  String prefix2="testFileDeletion2";$  File[] files2=createFiles(testDir,prefix2,5);$  FileCommands.deleteFiles(files1,true);$  assertNotExists(files1);$  FileCommands.deleteFiles(files2,false);$  Thread.sleep(1000);$  assertNotExists(files2);$}$
public boolean isOnClasspath(String classpath){$  return this.classpath.equals(classpath);$}$
protected void source(String ceylon){$  String providerPreSrc="provider/" + ceylon + "_pre.ceylon";$  String providerPostSrc="provider/" + ceylon + "_post.ceylon";$  String clientSrc="client/" + ceylon + "_client.ceylon";$  compile(providerPreSrc,providerModuleSrc,providerPackageSrc);$  compile(clientSrc,clientModuleSrc);$  compile(providerPostSrc,providerModuleSrc,providerPackageSrc);$  compile(clientSrc,clientModuleSrc);$}$
public PerformanceMonitor(){$  initComponents();$  if (Display.getInstance().getCurrent() != null) {$    refreshFrameActionPerformed(null);$  }$  resultData.setModel(new Model());$  performanceLog.setLineWrap(true);$  resultData.setRowSorter(new TableRowSorter<Model>((Model)resultData.getModel()));$}$
@DSGenerator(tool_name="Doppelganger",tool_version="2.0",generated_on="2014-09-03 15:01:15.190 -0400",hash_original_method="F262A3A18BABECF7EC492736953EAF6E",hash_generated_method="94A4545C167C029CC38AACEACF2087E9") private void unparkSuccessor(Node node){$  int ws=node.waitStatus;$  if (ws < 0)   compareAndSetWaitStatus(node,ws,0);$  Node s=node.next;$  if (s == null || s.waitStatus > 0) {$    s=null;$    for (Node t=tail; t != null && t != node; t=t.prev)     if (t.waitStatus <= 0)     s=t;$  }$  if (s != null)   LockSupport.unpark(s.thread);$}$
@DSComment("From safe class list") @DSSafe(DSCat.SAFE_LIST) @DSGenerator(tool_name="Doppelganger",tool_version="2.0",generated_on="2013-12-30 13:02:44.364 -0500",hash_original_method="EA3734ADDEB20313C9CAB09B48812C54",hash_generated_method="4858AFE909DDE63867ACB561D5449C13") static public void assertFalse(String message,boolean condition){$  assertTrue(message,!condition);$}$
@Override protected void initData(){$  Intent intent=new Intent(this,PushMessageService.class);$  this.startService(intent);$  this.bindService(intent,this.connection,Context.BIND_AUTO_CREATE);$}$
public static Date parseDateDay(String dateString) throws ParseException {$  return getSimplDateFormat(DF_DEF).parse(dateString);$}$
private boolean doesStoragePortExistsInVArray(StoragePort umfsStoragePort,VirtualArray virtualArray){$  List<URI> virtualArrayPorts=returnAllPortsInVArray(virtualArray.getId());$  if (virtualArrayPorts.contains(umfsStoragePort.getId())) {$    return true;$  }$  return false;$}$
public SpringVaadinServletService(VaadinServlet servlet,DeploymentConfiguration deploymentConfiguration,String serviceUrl) throws ServiceException {$  super(servlet,deploymentConfiguration);$  this.serviceUrl=serviceUrl;$}$
private static List<TranslationResult> translateChildrenOfNode(final ITranslationEnvironment environment,final IOperandTreeNode expression,OperandSize size,final boolean loadOperand,Long baseOffset) throws InternalTranslationException {$  final List<TranslationResult> partialResults=new ArrayList<>();$  final List<? extends IOperandTreeNode> children=expression.getChildren();$  Collections.sort(children,comparator);$  for (  final IOperandTreeNode child : children) {$    final TranslationResult nextResult=loadOperand(environment,baseOffset,child,isSegmentExpression(expression.getValue()) ? expression : null,size,loadOperand);$    partialResults.add(nextResult);$    baseOffset+=nextResult.getInstructions().size();$  }$  return partialResults;$}$
public void removeShutdownLatch(final CountDownLatch latch){$  removeShutdownLatch(latch,false);$}$
public Version(){$  this(CommonReflection.getVersionTag());$}$
public static void startActivity(Context context,String chatId){$  Intent intent=new Intent(context,SendGroupFile.class);$  intent.putExtra(EXTRA_CHAT_ID,chatId);$  context.startActivity(intent);$}$
public Index excludedDataCenters(String excludedDataCenters){$  this.excludedDataCenters=excludedDataCenters;$  return this;$}$
public final int read() throws IOException {$  int result=src.read();$  if (result != -1) {$    ++pointer;$  }$  return result;$}$
public static boolean compareAndSwapInt(Object obj,long off,int exp,int upd){$  return UNSAFE.compareAndSwapInt(obj,off,exp,upd);$}$
public static String dec2Bin(int value){$  String result="";$  return dec2Bin(value,result);$}$
public void apply(RecyclerView recyclerView,Iterable<Item> items){$  if (items != null) {$    HashMap<Integer,Stack<RecyclerView.ViewHolder>> cache=new HashMap<>();$    for (    Item d : items) {$      if (!cache.containsKey(d.getType())) {$        cache.put(d.getType(),new Stack<RecyclerView.ViewHolder>());$      }$      if (mCacheSize == -1 || cache.get(d.getType()).size() <= mCacheSize) {$        cache.get(d.getType()).push(d.getViewHolder(recyclerView));$      }$      RecyclerView.RecycledViewPool recyclerViewPool=new RecyclerView.RecycledViewPool();$      for (      Map.Entry<Integer,Stack<RecyclerView.ViewHolder>> entry : cache.entrySet()) {$        recyclerViewPool.setMaxRecycledViews(entry.getKey(),mCacheSize);$        for (        RecyclerView.ViewHolder holder : entry.getValue()) {$          recyclerViewPool.putRecycledView(holder);$        }$        entry.getValue().clear();$      }$      cache.clear();$      recyclerView.setRecycledViewPool(recyclerViewPool);$    }$  }$}$
public void incNumOverflowOnDisk(long delta){$  this.stats.incLong(numOverflowOnDiskId,delta);$}$
public void paint(Graphics a,JComponent b){$  for (int i=0; i < uis.size(); i++) {$    ((ComponentUI)(uis.elementAt(i))).paint(a,b);$  }$}$
public void updateUI(){$  setUI((TableHeaderUI)UIManager.getUI(this));$  TableCellRenderer renderer=getDefaultRenderer();$  if (renderer instanceof Component) {$    SwingUtilities.updateComponentTreeUI((Component)renderer);$  }$}$
public static RefactoringStatus create(IStatus status){$  if (status.isOK())   return new RefactoringStatus();$  if (!status.isMultiStatus()) {$switch (status.getSeverity()) {$case IStatus.OK:$      return new RefactoringStatus();$case IStatus.INFO:$    return RefactoringStatus.createWarningStatus(status.getMessage());$case IStatus.WARNING:$  return RefactoringStatus.createErrorStatus(status.getMessage());$case IStatus.ERROR:$return RefactoringStatus.createFatalErrorStatus(status.getMessage());$case IStatus.CANCEL:$return RefactoringStatus.createFatalErrorStatus(status.getMessage());$default :$return RefactoringStatus.createFatalErrorStatus(status.getMessage());$}$}$ else {$IStatus[] children=status.getChildren();$RefactoringStatus result=new RefactoringStatus();$for (int i=0; i < children.length; i++) {$result.merge(RefactoringStatus.create(children[i]));$}$return result;$}$}$
public void debug(String msg){$  debugLogger.debug(msg);$}$
public int size(){$  return codon.length;$}$
public Diff decode() throws UnsupportedEncodingException, DecodingException {$  int header=r.read(3);$  if (DiffAction.parse(header) != DiffAction.DECODER_DATA) {$    throw new DecodingException("Invalid codecData code: " + header);$  }$  int blockSize_C=3;$  int blockSize_S=r.read(5);$  int blockSize_E=r.read(5);$  int blockSize_B=r.read(5);$  int blockSize_L=r.read(5);$  r.read(1);$  if (blockSize_S < 0 || blockSize_S > 31) {$    throw new DecodingException("blockSize_S out of range: " + blockSize_S);$  }$  if (blockSize_E < 0 || blockSize_E > 31) {$    throw new DecodingException("blockSize_E out of range: " + blockSize_E);$  }$  if (blockSize_B < 0 || blockSize_B > 31) {$    throw new DecodingException("blockSize_B out of range: " + blockSize_B);$  }$  if (blockSize_L < 0 || blockSize_L > 31) {$    throw new DecodingException("blockSize_L out of range: " + blockSize_L);$  }$  return decode(blockSize_C,blockSize_S,blockSize_E,blockSize_B,blockSize_L);$}$
public FontSizeLocator(){$}$
@SuppressWarnings({"unchecked","rawtypes"}) static <E extends Comparable<E>>AutoSortedCollection<E> createAutoSortedCollection(Collection<? extends E> values){$  return createAutoSortedCollection(null,values);$}$
@Override public String toString(){$  return super.toString();$}$
public boolean useLayoutEditor(SignalMast destination){$  if (!destList.containsKey(destination)) {$    return false;$  }$  return destList.get(destination).useLayoutEditor();$}$
private static String unescapePathComponent(String name){$  return name.replaceAll("\\\\(.)"," 1");$}$
public AbstractExampleTable(List<Attribute> attributes){$  addAttributes(attributes);$}$
public void zoomOut(){$  Matrix save=mViewPortHandler.zoomOut(getWidth() / 2f,-(getHeight() / 2f));$  mViewPortHandler.refresh(save,this,true);$}$
public Media createBackgroundMedia(String uri) throws IOException {$  return impl.createBackgroundMedia(uri);$}$
private boolean hasNextTlsMode(){$  return nextTlsMode != TLS_MODE_NULL;$}$
protected void copyToOpsw(){$  opsw[1]=fullmode.isSelected();$  opsw[2]=twoaspects.isSelected();$  opsw[11]=semaphore.isSelected();$  opsw[12]=pulsed.isSelected();$  opsw[13]=disableDS.isSelected();$  opsw[14]=fromloconet.isSelected();$  opsw[15]=disablelocal.isSelected();$  opsw[17]=sigaddress.isSelected();$  opsw[18]=bcastaddress.isSelected();$  opsw[19]=semaddress.isSelected();$  opsw[20]=setdefault.isSelected();$  opsw[21]=exercise.isSelected();$  int value=section1to4mode.getSelectedIndex();$  if ((value & 0x01) != 0) {$    opsw[5]=true;$  }$ else {$    opsw[5]=false;$  }$  if ((value & 0x02) != 0) {$    opsw[4]=true;$  }$ else {$    opsw[4]=false;$  }$  if ((value & 0x04) != 0) {$    opsw[3]=true;$  }$ else {$    opsw[3]=false;$  }$  value=section5to8mode.getSelectedIndex();$  if ((value & 0x01) != 0) {$    opsw[8]=true;$  }$ else {$    opsw[8]=false;$  }$  if ((value & 0x02) != 0) {$    opsw[7]=true;$  }$ else {$    opsw[7]=false;$  }$  if ((value & 0x04) != 0) {$    opsw[6]=true;$  }$ else {$    opsw[6]=false;$  }$  value=fourthAspect.getSelectedIndex();$  if ((value & 0x01) != 0) {$    opsw[10]=true;$  }$ else {$    opsw[10]=false;$  }$  if ((value & 0x02) != 0) {$    opsw[9]=true;$  }$ else {$    opsw[9]=false;$  }$}$
@Override public void onRequestPermissionsResult(int requestCode,@NonNull String[] permissions,@NonNull int[] grantResults){$  if (requestCode == ALLOW_PERMISSIONS && grantResults.length > 0) {$    List<String> permissionsNotAllowed=new ArrayList<>();$    for (int i=0; i < permissions.length; i++) {$      if (grantResults[i] == PackageManager.PERMISSION_DENIED) {$        permissionsNotAllowed.add(permissions[i]);$      }$    }$    if (permissionsNotAllowed.isEmpty()) {$      initEvent();$    }$ else {$      permissionNotEnabled();$    }$  }$ else {$    permissionNotEnabled();$  }$}$
public String rowGet(String key){$  String resolvedKey=resolveRowKey(key);$  String cachedValue=rowMapCache.get(resolvedKey);$  if (cachedValue != null) {$    return cachedValue;$  }$  String value=rowMap.get(resolvedKey);$  if (value == null && parent != null) {$    value=parent.rowGet(resolvedKey);$  }$  if (value == null) {$    return null;$  }$  String expandedString=expand(value,false);$  rowMapCache.put(resolvedKey,expandedString);$  return expandedString;$}$
public void postEvaluationStatistics(final EvolutionState state){$  super.postEvaluationStatistics(state);$  state.output.println("\nGeneration: " + state.generation,Output.V_NO_GENERAL,statisticslog);$  for (int x=0; x < state.population.subpops.length; x++)   for (int y=1; y < state.population.subpops[x].individuals.length; y++)   state.population.subpops[x].individuals[y].printIndividualForHumans(state,statisticslog,Output.V_NO_GENERAL);$}$
private void checkUserExists(String entidad) throws Exception {$  int count;$  UsersTable table=new UsersTable();$  DbConnection dbConn=new DbConnection();$  try {$    dbConn.open(DBSessionManager.getSession());$    if (_id == ISicresAdminDefsKeys.NULL_ID)     count=DbSelectFns.selectCount(dbConn,table.getBaseTableName(),table.getCountNameQual(_name));$ else     count=DbSelectFns.selectCount(dbConn,table.getBaseTableName(),table.getCountNameIdQual(_id,_name));$    if (count > 0)     ISicresAdminBasicException.throwException(ISicresAdminUserKeys.EC_USER_EXISTS_NAME);$  }$ catch (  Exception e) {$    _logger.error(e);$    throw e;$  }$ finally {$    dbConn.close();$  }$}$
@Transactional public Role createRoleWithPermissions(Role role,Set<Long> permissionIds){$  Role current=findRoleByRoleName(role.getRoleName());$  Preconditions.checkState(current == null,"Role %s already exists!",role.getRoleName());$  Role createdRole=roleRepository.save(role);$  if (!CollectionUtils.isEmpty(permissionIds)) {$    Iterable<RolePermission> rolePermissions=FluentIterable.from(permissionIds).transform(null);$    rolePermissionRepository.save(rolePermissions);$  }$  return createdRole;$}$
protected void generateNewCursorBox(){$  if ((old_m_x2 != -1) || (old_m_y2 != -1) || (Math.abs(commonValues.m_x2 - old_m_x2) > 5)|| (Math.abs(commonValues.m_y2 - old_m_y2) > 5)) {$    int top_x=commonValues.m_x1;$    if (commonValues.m_x1 > commonValues.m_x2) {$      top_x=commonValues.m_x2;$    }$    int top_y=commonValues.m_y1;$    if (commonValues.m_y1 > commonValues.m_y2) {$      top_y=commonValues.m_y2;$    }$    final int w=Math.abs(commonValues.m_x2 - commonValues.m_x1);$    final int h=Math.abs(commonValues.m_y2 - commonValues.m_y1);$    final int[] currentRectangle={top_x,top_y,w,h};$    decode_pdf.updateCursorBoxOnScreen(currentRectangle,DecoderOptions.highlightColor.getRGB());$    if (!currentCommands.extractingAsImage) {$      final int[] r={commonValues.m_x1,commonValues.m_y1,commonValues.m_x2 - commonValues.m_x1,commonValues.m_y2 - commonValues.m_y1};$      decode_pdf.getTextLines().addHighlights(new int[][]{r},false,commonValues.getCurrentPage());$    }$    old_m_x2=commonValues.m_x2;$    old_m_y2=commonValues.m_y2;$  }$  decode_pdf.repaintPane(commonValues.getCurrentPage());$}$
public OMGraphicList(int initialCapacity){$  graphics=Collections.synchronizedList(new ArrayList<OMGraphic>(initialCapacity));$}$
private void saveToSettings(){$  List<String> dataToSave=new LinkedList<>();$  for (  UsercolorItem item : data) {$    dataToSave.add(item.getId() + "," + HtmlColors.getColorString(item.getColor()));$  }$  settings.putList("usercolors",dataToSave);$}$
public static boolean isArrayForName(String value){$  return ARRAY_FOR_NAME_PATTERN.matcher(value).matches();$}$
public double length(){$  return Math.sqrt(this.x * this.x + this.y * this.y);$}$
public String toString(){$  return schema;$}$
public void restoreStarting(int numPackages){$}$
private boolean resourceIsGwtXmlAndInGwt(IResource resource) throws CoreException {$  return GWTNature.isGWTProject(resource.getProject()) && resource.getName().endsWith(".gwt.xml");$}$
public GlowCreature(Location location,EntityType type,double maxHealth){$  super(location,maxHealth);$  this.type=type;$}$
public CacheLayer(){$}$
protected Address buildAndroidAddress(JSONObject jResult) throws JSONException {$  Address gAddress=new Address(mLocale);$  gAddress.setLatitude(jResult.getDouble("lat"));$  gAddress.setLongitude(jResult.getDouble("lng"));$  int addressIndex=0;$  if (jResult.has("streetName")) {$    gAddress.setAddressLine(addressIndex++,jResult.getString("streetName"));$    gAddress.setThoroughfare(jResult.getString("streetName"));$  }$  if (jResult.has("zipCode")) {$    gAddress.setAddressLine(addressIndex++,jResult.getString("zipCode"));$    gAddress.setPostalCode(jResult.getString("zipCode"));$  }$  if (jResult.has("city")) {$    gAddress.setAddressLine(addressIndex++,jResult.getString("city"));$    gAddress.setLocality(jResult.getString("city"));$  }$  if (jResult.has("state")) {$    gAddress.setAdminArea(jResult.getString("state"));$  }$  if (jResult.has("country")) {$    gAddress.setAddressLine(addressIndex++,jResult.getString("country"));$    gAddress.setCountryName(jResult.getString("country"));$  }$  if (jResult.has("countrycode"))   gAddress.setCountryCode(jResult.getString("countrycode"));$  return gAddress;$}$
public JDBCCategoryDataset(Connection connection,String query) throws SQLException {$  this(connection);$  executeQuery(query);$}$
private void readObject(ObjectInputStream s) throws IOException, ClassNotFoundException {$  s.defaultReadObject();$  if (bayesIm == null) {$    throw new NullPointerException();$  }$  if (variables == null) {$    throw new NullPointerException();$  }$}$
boolean contains(ProtocolVersion protocolVersion){$  if (protocolVersion == ProtocolVersion.SSL20Hello) {$    return false;$  }$  return protocols.contains(protocolVersion);$}$
@Override protected EClass eStaticClass(){$  return DatatypePackage.Literals.OBJECT_PROPERTY_TYPE;$}$
@DSGenerator(tool_name="Doppelganger",tool_version="2.0",generated_on="2013-12-30 12:34:35.806 -0500",hash_original_method="E14DF72F5869874CC38AD67447F5264E",hash_generated_method="127365361841BB38033FE96228DFD635") public final Iterator<String> typesIterator(){$  return mDataTypes != null ? mDataTypes.iterator() : null;$}$
public void registerGUI(final ConfigGUI gui){$  this.gui=gui;$}$
public IntersectionMatrix(IntersectionMatrix other){$  this();$  matrix[Location.INTERIOR][Location.INTERIOR]=other.matrix[Location.INTERIOR][Location.INTERIOR];$  matrix[Location.INTERIOR][Location.BOUNDARY]=other.matrix[Location.INTERIOR][Location.BOUNDARY];$  matrix[Location.INTERIOR][Location.EXTERIOR]=other.matrix[Location.INTERIOR][Location.EXTERIOR];$  matrix[Location.BOUNDARY][Location.INTERIOR]=other.matrix[Location.BOUNDARY][Location.INTERIOR];$  matrix[Location.BOUNDARY][Location.BOUNDARY]=other.matrix[Location.BOUNDARY][Location.BOUNDARY];$  matrix[Location.BOUNDARY][Location.EXTERIOR]=other.matrix[Location.BOUNDARY][Location.EXTERIOR];$  matrix[Location.EXTERIOR][Location.INTERIOR]=other.matrix[Location.EXTERIOR][Location.INTERIOR];$  matrix[Location.EXTERIOR][Location.BOUNDARY]=other.matrix[Location.EXTERIOR][Location.BOUNDARY];$  matrix[Location.EXTERIOR][Location.EXTERIOR]=other.matrix[Location.EXTERIOR][Location.EXTERIOR];$}$
public long readUnsignedInt(){$  long result=shiftIntoLong(data,position,4);$  position+=4;$  return result;$}$
public void emit(final SpannableStringBuilder out,final Block root){$  root.removeSurroundingEmptyLines();$switch (root.type) {$case NONE:$    break;$case PARAGRAPH:$  this.config.decorator.openParagraph(out);$break;$case BLOCKQUOTE:$this.config.decorator.openBlockquote(out);$break;$case UNORDERED_LIST:$this.config.decorator.openUnorderedList(out);$break;$case ORDERED_LIST:$this.config.decorator.openOrderedList(out);$break;$case UNORDERED_LIST_ITEM:$this.config.decorator.openUnOrderedListItem(out);$break;$case ORDERED_LIST_ITEM:$this.config.decorator.openOrderedListItem(out);$break;$}$if (root.hasLines()) {$this.emitLines(out,root);$}$ else {$Block block=root.blocks;$while (block != null) {$this.emit(out,block);$block=block.next;$}$}$switch (root.type) {$case NONE:$break;$case PARAGRAPH:$this.config.decorator.closeParagraph(out);$break;$case BLOCKQUOTE:$this.config.decorator.closeBlockquote(out);$break;$case UNORDERED_LIST:$this.config.decorator.closeUnorderedList(out);$break;$case ORDERED_LIST:$this.config.decorator.closeOrderedList(out);$break;$case UNORDERED_LIST_ITEM:$this.config.decorator.closeUnOrderedListItem(out);$break;$case ORDERED_LIST_ITEM:$this.config.decorator.closeOrderedListItem(out);$break;$}$}$
public boolean isInternable(){$  return (classAnnotations != null) && (fieldAnnotations == null) && (methodAnnotations == null)&& (parameterAnnotations == null);$}$
public URI(final String scheme,final String userinfo,final String host,final int port,final String path,final String query,final String fragment) throws URIException {$  this(scheme,(host == null) ? null : ((userinfo != null) ? userinfo + '@' : "") + host + ((port != -1) ? ":" + port : ""),path,query,fragment);$}$
public void addUser(User user){$  users.addElement(user);$}$
protected void engineUpdate(byte b) throws SignatureException {$  msgDigest.update(b);$}$
public RqMtFake(final Request req,final Request... dispositions) throws IOException {$  this.fake=new RqMtBase(new RqMtFake.FakeMultipartRequest(req,dispositions));$}$
public static Video randomVideo(){$  String id=UUID.randomUUID().toString();$  String title="Video-" + id;$  String url="http://coursera.org/some/video-" + id;$  long duration=60 * (int)Math.rint(Math.random() * 60) * 1000;$  return new Video(title,url,duration);$}$
public void addHeader(String header,String value){$  clientHeaderMap.put(header,value);$}$
public void addPostalAddress(PostalAddress postalAddress){$  getPostalAddresses().add(postalAddress);$}$
public CaughtExceptionRef newCaughtExceptionRef(){$  return new JCaughtExceptionRef();$}$
public void actionPerformed(ActionEvent e){$  if (e.getSource() instanceof PerformanceIndicator) {$    PerformanceIndicator pi=(PerformanceIndicator)e.getSource();$    log.info(pi.getName());$    MGoal goal=pi.getGoal();$    if (goal.getMeasure() != null)     new PerformanceDetail(goal);$  }$}$
public Iterator<AbstractNode> childIterator(final boolean dirtyNodesOnly){$  if (dirtyNodesOnly) {$    return new DirtyChildIterator(this);$  }$ else {$    return new ChildIterator(this);$  }$}$
public static int maxIndex(double[] doubles){$  double maximum=0;$  int maxIndex=0;$  for (int i=0; i < doubles.length; i++) {$    if ((i == 0) || (doubles[i] > maximum)) {$      maxIndex=i;$      maximum=doubles[i];$    }$  }$  return maxIndex;$}$
private List<PreferenceIndex> crawlSingleIndexableResource(IndexableFragment indexableFragment){$  List<PreferenceIndex> indexablePreferences=new ArrayList<>();$  XmlPullParser parser=mContext.getResources().getXml(indexableFragment.xmlRes);$  int type;$  try {$    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && type != XmlPullParser.START_TAG) {$    }$    String nodeName=parser.getName();$    if (!NODE_NAME_PREFERENCE_SCREEN.equals(nodeName)) {$      throw new RuntimeException("XML document must start with <PreferenceScreen> tag; found" + nodeName + " at "+ parser.getPositionDescription());$    }$    final int outerDepth=parser.getDepth();$    final AttributeSet attrs=Xml.asAttributeSet(parser);$    while ((type=parser.next()) != XmlPullParser.END_DOCUMENT && (type != XmlPullParser.END_TAG || parser.getDepth() > outerDepth)) {$      if (type == XmlPullParser.END_TAG || type == XmlPullParser.TEXT) {$        continue;$      }$      nodeName=parser.getName();$      String key=PreferenceXmlUtil.getDataKey(mContext,attrs);$      String title=PreferenceXmlUtil.getDataTitle(mContext,attrs);$      if (NODE_NAME_PREFERENCE_CATEGORY.equals(nodeName) || TextUtils.isEmpty(key) || TextUtils.isEmpty(title)) {$        continue;$      }$      PreferenceIndex indexablePreference=new PreferenceIndex(key,title,indexableFragment.fragmentName);$      indexablePreferences.add(indexablePreference);$    }$  }$ catch (  XmlPullParserException|IOException|ReflectiveOperationException ex) {$    Log.e(TAG,"Error in parsing a preference xml file, skip it",ex);$  }$  return indexablePreferences;$}$
@Inline private static void genNullCheck(Assembler asm,GPR objRefReg){$  asm.emitTEST_Reg_Reg(objRefReg,objRefReg);$  asm.emitBranchLikelyNextInstruction();$  ForwardReference fr=asm.forwardJcc(NE);$  asm.emitINT_Imm(RuntimeEntrypoints.TRAP_NULL_POINTER + RVM_TRAP_BASE);$  fr.resolve(asm);$}$
public Location(String provider){$  mProvider=provider;$}$
public NodesInfoRequest(String... nodesIds){$  super(nodesIds);$}$
public static double norm(double[] a){$  double squaredSum=0;$  for (int i=0; i < a.length; i++) {$    squaredSum+=a[i] * a[i];$  }$  return Math.sqrt(squaredSum);$}$
private static double[] toDoubleAray(Integer[] intArray,HashSet<Integer> skipIndex){$  double[] res=new double[intArray.length - skipIndex.size()];$  int skip=0;$  for (int i=0; i < intArray.length; i++) {$    if (skipIndex.contains(i)) {$      skip++;$      continue;$    }$    res[i - skip]=intArray[i].doubleValue();$  }$  return res;$}$
private void updateProgress(String progressLabel,int progress){$  if (myHost != null && ((progress != previousProgress) || (!progressLabel.equals(previousProgressLabel)))) {$    myHost.updateProgress(progressLabel,progress);$  }$  previousProgress=progress;$  previousProgressLabel=progressLabel;$}$
public CompositeValidationIssueProcessor(final IValidationIssueProcessor first,final IValidationIssueProcessor... others){$  processors=Lists.asList(first,others);$}$
public OptionSet removeMaxAge(){$  max_age=null;$  return this;$}$
public Request(){$  locality="";$  state="";$  organization="";$  orgunit="";$  dnsname="";$  uri="";$  email="";$  ipaddress="";$  keyusage=0;$}$
@Override protected Position determineMainLabelPosition(DrawContext dc){$  return this.getReferencePosition();$}$
@Override Map<String,Object> extractFields(String line){$  if (!initialized) {$    init();$    initialized=true;$  }$  String[] values=fixedWidthParser.parseLine(line);$  if (hasHeader && Arrays.deepEquals(values,header)) {$    return null;$  }$  Map<String,Object> map=Maps.newHashMap();$  int i=0;$  for (  FixedWidthField field : fields) {$    map.put(field.getName(),getValue(field,values[i++]));$  }$  return map;$}$
@Override public boolean contains(Value subvalue){$  return toString().contains(subvalue.toString());$}$
private void applyTo(ClassVisitor v,Field f){$  if (Log.isLoggingOn()) {$    Log.logLine(String.format("Visiting field %s",f.toGenericString()));$  }$  v.visit(f);$}$
@Override protected EClass eStaticClass(){$  return ExpressionsPackage.Literals.BITWISE_AND_EXPRESSION;$}$
@Override public final void closePath(){$  shape_primitives.addElement(H);$  shape_primitive_x.addElement(0);$  shape_primitive_y.addElement(0);$  shape_primitive_x2.addElement(0);$  shape_primitive_y2.addElement(0);$  shape_primitive_x3.addElement(0);$  shape_primitive_y3.addElement(0);$}$
public DefaultBoundValueOperations(K key,RedisOperations<K,V> operations){$  super(key,operations);$  this.ops=operations.opsForValue();$}$
@Override public void writeBatch() throws IOException {$  if (getInstances() == null) {$    throw new IOException("No instances to save");$  }$  if (getRetrieval() == INCREMENTAL) {$    throw new IOException("Batch and incremental saving cannot be mixed.");$  }$  setRetrieval(BATCH);$  setWriteMode(WRITE);$  if ((retrieveFile() == null) && (getWriter() == null)) {$    for (int i=0; i < getInstances().numInstances(); i++) {$      System.out.println(instanceToLibsvm(getInstances().instance(i)));$    }$    setWriteMode(WAIT);$  }$ else {$    PrintWriter outW=new PrintWriter(getWriter());$    for (int i=0; i < getInstances().numInstances(); i++) {$      outW.println(instanceToLibsvm(getInstances().instance(i)));$    }$    outW.flush();$    outW.close();$    setWriteMode(WAIT);$    outW=null;$    resetWriter();$    setWriteMode(CANCEL);$  }$}$
public FloatMatrix truthi(){$  for (int i=0; i < length; i++) {$    put(i,get(i) == 0.0f ? 0.0f : 1.0f);$  }$  return this;$}$
public void testCallProcEscapeSequenceWithWhitespaces() throws Exception {$  check("CALL func1()","{ call func1()}");$  check("CALL func1()","{    call  func1()}");$  check("CALL func1()","{ \n call\nfunc1()}");$  checkFail("{ \n func1()}");$}$
public EnumRowStatus(Long valueIndex) throws IllegalArgumentException {$  this(valueIndex.longValue());$}$
public static void putbytes2Uint8s(char[] destUint8s,byte[] srcBytes,int destOffset,int srcOffset,int count){$  for (int i=0; i < count; i++) {$    destUint8s[destOffset + i]=convertByte2Uint8(srcBytes[srcOffset + i]);$  }$}$
public static void superposeWithAngle(ComplexVector vec1,ComplexVector vec2,float weight,int[] permutation){$  int positionToAdd;$  int dim=vec1.getDimension();$  short c[]=vec2.getPhaseAngles();$  float[] coordinates=vec1.getCoordinates();$  if (permutation != null) {$    for (int i=0; i < dim; i++) {$      positionToAdd=permutation[i] << 1;$      coordinates[positionToAdd]+=CircleLookupTable.getRealEntry(c[i]) * weight;$      coordinates[positionToAdd + 1]+=CircleLookupTable.getImagEntry(c[i]) * weight;$    }$  }$ else {$    for (int i=0; i < dim; i++) {$      positionToAdd=i << 1;$      coordinates[positionToAdd]+=CircleLookupTable.getRealEntry(c[i]) * weight;$      coordinates[positionToAdd + 1]+=CircleLookupTable.getImagEntry(c[i]) * weight;$    }$  }$}$
protected void _addFieldMixIns(Class<?> targetClass,Class<?> mixInCls,Map<String,AnnotatedField> fields){$  List<Class<?>> parents=new ArrayList<Class<?>>();$  parents.add(mixInCls);$  ClassUtil.findSuperTypes(mixInCls,targetClass,parents);$  for (  Class<?> mixin : parents) {$    for (    Field mixinField : mixin.getDeclaredFields()) {$      if (!_isIncludableField(mixinField)) {$        continue;$      }$      String name=mixinField.getName();$      AnnotatedField maskedField=fields.get(name);$      if (maskedField != null) {$        for (        Annotation a : mixinField.getDeclaredAnnotations()) {$          if (_annotationIntrospector.isHandled(a)) {$            maskedField.addOrOverride(a);$          }$        }$      }$    }$  }$}$
@Override public boolean input(Instance instance) throws Exception {$  if (getInputFormat() == null) {$    throw new IllegalStateException("No input instance format defined");$  }$  if (m_NewBatch) {$    resetQueue();$    m_NewBatch=false;$  }$  double[] vals=new double[instance.numAttributes() + 1];$  for (int i=0; i < instance.numAttributes(); i++) {$    if (instance.isMissing(i)) {$      vals[i]=Utils.missingValue();$    }$ else {$      vals[i]=instance.value(i);$    }$  }$  m_attributeExpression.evaluateExpression(vals);$  Instance inst=null;$  if (instance instanceof SparseInstance) {$    inst=new SparseInstance(instance.weight(),vals);$  }$ else {$    inst=new DenseInstance(instance.weight(),vals);$  }$  inst.setDataset(getOutputFormat());$  copyValues(inst,false,instance.dataset(),getOutputFormat());$  inst.setDataset(getOutputFormat());$  push(inst);$  return true;$}$
public String lookup(String data){$  Iterator<String> it=map.getPrefixedBy(data);$  if (!it.hasNext())   return null;$  return it.next();$}$
public boolean attempt(LiveAnalysis live,Register r1,Register r2){$  if (isLiveAtDef(r2,r1,live))   return false;$  if (isLiveAtDef(r1,r2,live))   return false;$  if (split(r1,r2))   return false;$  if (r1 == r2)   return false;$  live.merge(r1,r2);$  for (Enumeration<RegisterOperand> e=DefUse.defs(r2); e.hasMoreElements(); ) {$    RegisterOperand def=e.nextElement();$    DefUse.removeDef(def);$    def.setRegister(r1);$    DefUse.recordDef(def);$  }$  for (Enumeration<RegisterOperand> e=DefUse.uses(r2); e.hasMoreElements(); ) {$    RegisterOperand use=e.nextElement();$    DefUse.removeUse(use);$    use.setRegister(r1);$    DefUse.recordUse(use);$  }$  return true;$}$
private void registerTarget(final Message message,final String virtualHost){$  final String thingId=getStringHeaderKey(message,MessageHeaderKey.THING_ID,"ThingId is null");$  final String replyTo=message.getMessageProperties().getReplyTo();$  if (StringUtils.isEmpty(replyTo)) {$    logAndThrowMessageError(message,"No ReplyTo was set for the createThing Event.");$  }$  final URI amqpUri=IpUtil.createAmqpUri(virtualHost,replyTo);$  final Target target=controllerManagement.findOrRegisterTargetIfItDoesNotexist(thingId,amqpUri);$  LOG.debug("Target {} reported online state.",thingId);$  lookIfUpdateAvailable(target);$}$
private void returnData(Object ret){$  if (myHost != null) {$    myHost.returnData(ret);$  }$}$
public long term(){$  return term;$}$
public void purgePlayer(Player player){$  zombies.remove(player.getUniqueId());$  humans.remove(player.getUniqueId());$}$
public RestClient(String target,String username,String password,CloseableHttpAsyncClient asyncClient){$  checkNotNull(target,"target cannot be null");$  checkNotNull(username,"username cannot be null");$  checkNotNull(password,"password cannot be null");$  this.target=target;$  this.clientContext=getHttpClientContext(target,username,password);$  this.asyncClient=asyncClient == null ? getHttpClient() : asyncClient;$}$
private String createPatternHash(int baseColorIndex){$  String hashSource="" + baseColorIndex + "";$  int count=0;$synchronized (PatternList) {$    for (    BannerPattern bp : PatternList) {$      if (count++ != 0) {$        hashSource+="-";$      }$      hashSource+=bp.toString();$    }$  }$  return hashSource;$}$
public void close() throws IOException {$  super.close();$  disposerRecord.dispose();$  stream=null;$  cache=null;$  cacheFile=null;$  StreamCloser.removeFromQueue(closeAction);$}$
public static Uri importContent(String sessionId,String sourcePath) throws IOException {$  File sourceFile=new File(sourcePath);$  String targetPath="/" + sessionId + "/upload/"+ sourceFile.getName();$  targetPath=createUniqueFilename(targetPath);$  copyToVfs(sourcePath,targetPath);$  return vfsUri(targetPath);$}$
public static ProjectActionEvent createProjectClosedEvent(ProjectDescriptor project,boolean closingBeforeOpening){$  return new ProjectActionEvent(project,ProjectAction.CLOSED,closingBeforeOpening);$}$
public static void initiateItemEvent(EntityPlayer player,ItemStack itemStack,int event,boolean limitRange){$  try {$    if (NetworkManager_initiateItemEvent == null)     NetworkManager_initiateItemEvent=Class.forName(getPackage() + ".core.network.NetworkManager").getMethod("initiateItemEvent",EntityPlayer.class,ItemStack.class,Integer.TYPE,Boolean.TYPE);$    if (instance == null)     instance=getInstance();$    NetworkManager_initiateItemEvent.invoke(instance,player,itemStack,event,limitRange);$  }$ catch (  Exception e) {$    throw new RuntimeException(e);$  }$}$
public Enumeration<V> elements(){$  return new ValueIterator();$}$
private boolean trackerAt(StendhalRPZone zone,int x,int y){$  final List<Entity> list=zone.getEntitiesAt(x,y);$  for (  Entity entity : list) {$    if (entity instanceof ExpirationTracker) {$      return true;$    }$  }$  return false;$}$
public Segment segment(long index){$  assertOpen();$  if (currentSegment != null && currentSegment.validIndex(index))   return currentSegment;$  Map.Entry<Long,Segment> segment=segments.floorEntry(index);$  return segment != null ? segment.getValue() : null;$}$
@DSSafe(DSCat.SAFE_LIST) @DSGenerator(tool_name="Doppelganger",tool_version="2.0",generated_on="2014-09-03 15:01:20.138 -0400",hash_original_method="5CC57CD7C5B9408E54C315A9BE16050C",hash_generated_method="E0C143C4A578FB33A41B66D46278449D") public int nextInt(int least,int bound){$  if (least >= bound)   throw new IllegalArgumentException();$  return nextInt(bound - least) + least;$}$
protected ECPoint multiplyPositive(ECPoint p,BigInteger k){$  ECPoint[] R=new ECPoint[]{p.getCurve().getInfinity(),p};$  int n=k.bitLength();$  for (int i=0; i < n; ++i) {$    int b=k.testBit(i) ? 1 : 0;$    int bp=1 - b;$    R[bp]=R[bp].twicePlus(R[b]);$  }$  return R[0];$}$
void listItemsSortedSecure() throws Exception {$  System.out.println("Secure Systems Inc. - list items");$  String order=input("order (id, name)?");$  if (!order.matches("[a-zA-Z0-9_]*")) {$    order="id";$  }$  try {$    ResultSet rs=stat.executeQuery("SELECT ID, NAME FROM ITEMS ORDER BY " + order);$    while (rs.next()) {$      System.out.println(rs.getString(1) + ": " + rs.getString(2));$    }$  }$ catch (  SQLException e) {$    System.out.println(e);$  }$}$
private int readInt(InputStream is) throws IOException {$  return ((is.read() << 24) | (is.read() << 16) | (is.read() << 8)| (is.read()));$}$
void enableConfirmButtons(){$  confirmChangesButton.setToolTipText(SymbolicProgBundle.getMessage("TipConfirmChangesSheet"));$  confirmAllButton.setToolTipText(SymbolicProgBundle.getMessage("TipConfirmAllSheet"));$  if (_cvModel.getProgrammer() != null && !_cvModel.getProgrammer().getCanRead()) {$    confirmChangesButton.setEnabled(false);$    confirmAllButton.setEnabled(false);$    confirmChangesButton.setToolTipText(SymbolicProgBundle.getMessage("TipNoRead"));$    confirmAllButton.setToolTipText(SymbolicProgBundle.getMessage("TipNoRead"));$  }$ else {$    confirmChangesButton.setEnabled(true);$    confirmAllButton.setEnabled(true);$  }$}$
private String eventName(String taskType,int taskNum,String evtType){$  assert nodeId != null;$  return taskType + " " + taskNum+ " "+ evtType+ " "+ nodeId;$}$
@Override public NotificationChain eInverseRemove(InternalEObject otherEnd,int featureID,NotificationChain msgs){$switch (featureID) {$case UmplePackage.ACTION___ANONYMOUS_ACTION_11:$    return ((InternalEList<?>)getAnonymous_action_1_1()).basicRemove(otherEnd,msgs);$case UmplePackage.ACTION___ANONYMOUS_ACTION_21:$  return ((InternalEList<?>)getAnonymous_action_2_1()).basicRemove(otherEnd,msgs);$}$return super.eInverseRemove(otherEnd,featureID,msgs);$}$
public static void showPathInFileBrowser(final Path path){$  try {$    final boolean isFolder=Files.isDirectory(path);$    final boolean isFile=!isFolder;$    if (isFile && LEnv.OS == OpSys.WINDOWS) {$      new ProcessBuilder("explorer.exe","/select,",path.toAbsolutePath().toString()).start();$    }$ else     Desktop.getDesktop().open(isFolder ? path.toFile() : path.getParent().toFile());$  }$ catch (  final IOException ie) {$    LEnv.LOGGER.warning("Failed to open file browser!",ie);$  }$}$
private <T>T processExtremes(Stamp forX,Stamp forY,BiFunction<Long,Long,T> op){$  IntegerStamp xStamp=(IntegerStamp)forX;$  IntegerStamp yStamp=(IntegerStamp)forY;$  JavaKind kind=getStackKind();$  assert kind == JavaKind.Int || kind == JavaKind.Long;$  long[] xExtremes=getUnsignedExtremes(xStamp);$  long[] yExtremes=getUnsignedExtremes(yStamp);$  long min=Long.MAX_VALUE;$  long max=Long.MIN_VALUE;$  for (  long a : xExtremes) {$    for (    long b : yExtremes) {$      long result=kind == JavaKind.Int ? multiplyHighUnsigned((int)a,(int)b) : multiplyHighUnsigned(a,b);$      min=Math.min(min,result);$      max=Math.max(max,result);$    }$  }$  return op.apply(min,max);$}$
public String toSignatureString(){$  StringBuilder sb=new StringBuilder();$  String accessLevel=convertModifiersToAccessLevel(mModifier);$  if (!"".equals(accessLevel)) {$    sb.append(accessLevel).append(" ");$  }$  if (!JDiffType.INTERFACE.equals(mClassType)) {$    String modifierString=convertModifersToModifierString(mModifier);$    if (!"".equals(modifierString)) {$      sb.append(modifierString).append(" ");$    }$    sb.append("class ");$  }$ else {$    sb.append("interface ");$  }$  sb.append(mShortClassName);$  if (mExtendedClass != null) {$    sb.append(" extends ").append(mExtendedClass).append(" ");$  }$  if (implInterfaces.size() > 0) {$    sb.append(" implements ");$    for (int x=0; x < implInterfaces.size(); x++) {$      String interf=implInterfaces.get(x);$      sb.append(interf);$      if (x + 1 != implInterfaces.size()) {$        sb.append(", ");$      }$    }$  }$  return sb.toString();$}$
public void showPopup(){$  if (getPopup() != null) {$    getPopup().setVisible(true);$  }$}$
public boolean isGame(){$  return true;$}$
private FigureLayerComparator(){$}$
public TDoubleDoubleHashMap normalizedDistribution(){$  return normalizedDistribution(absoluteDistribution());$}$
private void waitForUsers(URI hostUri,String authToken) throws Throwable {$  URI usersLink=UriUtils.buildUri(hostUri,UserService.FACTORY_LINK);$  Integer[] numberUsers=new Integer[1];$  for (int i=0; i < 20; i++) {$    Operation get=Operation.createGet(usersLink).forceRemote().addRequestHeader(Operation.REQUEST_AUTH_TOKEN_HEADER,authToken).setCompletion(null);$    this.host.testStart(1);$    this.host.send(get);$    this.host.testWait();$    if (numberUsers[0] == 2) {$      break;$    }$    Thread.sleep(250);$  }$  assertTrue(numberUsers[0] == 2);$}$
public synchronized int send(byte[] buffer,int offset,int len) throws IOException {$  if (m_state != PseudoTcpState.TCP_ESTABLISHED) {$    throw new IOException("Socket not connected");$  }$  long available_space;$  available_space=m_sbuf.getWriteRemaining();$  if (available_space == 0) {$    m_bWriteEnable=true;$    return 0;$  }$  int written=queue(buffer,offset,len,false);$  attemptSend(SendFlags.sfNone);$  return written;$}$
public SampleAxioms(){$  super();$}$
public void validateTagTypeKey(TagTypeKey tagTypeKey) throws IllegalArgumentException {$  Assert.notNull(tagTypeKey,"A tag type key must be specified.");$  tagTypeKey.setTagTypeCode(alternateKeyHelper.validateStringParameter("tag type code",tagTypeKey.getTagTypeCode()));$}$
public static BigInteger nextPrime(long n){$  long i;$  boolean found=false;$  long result=0;$  if (n <= 1) {$    return BigInteger.valueOf(2);$  }$  if (n == 2) {$    return BigInteger.valueOf(3);$  }$  for (i=n + 1 + (n & 1); (i <= n << 1) && !found; i+=2) {$    for (long j=3; (j <= i >> 1) && !found; j+=2) {$      if (i % j == 0) {$        found=true;$      }$    }$    if (found) {$      found=false;$    }$ else {$      result=i;$      found=true;$    }$  }$  return BigInteger.valueOf(result);$}$
@Override public void addCharacterToOutput(final Entry<Character,GrayscaleMatrix> characterEntry,final int[] sourceImagePixels,final int tileX,final int tileY,final int imageWidth){$  this.output.append(characterEntry.getKey());$  if ((tileX + 1) * this.characterCache.getCharacterImageSize().getWidth() == imageWidth) {$    this.output.append(System.lineSeparator());$  }$}$
@VisibleForTesting static int chooseTableSize(int setSize){$  if (setSize == 1) {$    return 2;$  }$  int tableSize=Integer.highestOneBit(setSize - 1) << 1;$  while (tableSize * DESIRED_LOAD_FACTOR < setSize) {$    tableSize<<=1;$  }$  return tableSize;$}$
public void validateMinimum(){$  double newMin;$  try {$    newMin=Double.parseDouble(this.minimumRangeValue.getText());$    if (newMin >= this.maximumValue) {$      newMin=this.minimumValue;$    }$  }$ catch (  NumberFormatException e) {$    newMin=this.minimumValue;$  }$  this.minimumValue=newMin;$  this.minimumRangeValue.setText(Double.toString(this.minimumValue));$}$
public static void init(ActorSystem actorSystem){$  if (instance == null) {$    instance=actorSystem.actorOf(Props.create(BatchSigner.class));$  }$}$
private static void dump(PrintData pd){$  dumpHeader(pd);$  for (int i=0; i < pd.getRowCount(); i++)   dumpRow(pd,i);$}$
public boolean isHIGHER(){$  return value == HIGHER;$}$
public Matrix4x3d rotateZ(double ang){$  return rotateZ(ang,this);$}$
@Override protected URLConnection openConnection(URL url,Proxy proxy) throws IOException {$  if (url == null || proxy == null) {$    throw new IllegalArgumentException("url == null || proxy == null");$  }$  return new FtpURLConnection(url,proxy);$}$
private boolean matchesMobile4g(NetworkIdentity ident){$  ensureSubtypeAvailable();$  if (ident.mType == TYPE_WIMAX) {$    return true;$  }$ else   if (matchesMobile(ident)) {$switch (getNetworkClass(ident.mSubType)) {$case NETWORK_CLASS_4_G:$      return true;$  }$}$return false;$}$
public void writeToBuffer(ByteBuf buffer) throws Exception {$  if (id != -1) {$    Type.VAR_INT.write(buffer,id);$  }$  if (readableObjects.size() > 0) {$    packetValues.addAll(readableObjects);$    readableObjects.clear();$  }$  int index=0;$  for (  Pair<Type,Object> packetValue : packetValues) {$    try {$      Object value=packetValue.getValue();$      if (value != null) {$        if (!packetValue.getKey().getOutputClass().isAssignableFrom(value.getClass())) {$          if (packetValue.getKey() instanceof TypeConverter) {$            value=((TypeConverter)packetValue.getKey()).from(value);$          }$ else {$            System.out.println("Possible type mismatch: " + value.getClass().getName() + " -> "+ packetValue.getKey().getOutputClass());$          }$        }$      }$      packetValue.getKey().write(buffer,value);$    }$ catch (    Exception e) {$      throw new InformativeException(e).set("Index",index).set("Type",packetValue.getKey().getTypeName()).set("Packet ID",getId()).set("Data",packetValues);$    }$    index++;$  }$  writeRemaining(buffer);$}$
public RandomDecisionTree(int numFeatures,int maxDepth,int minSamples,TreePruner.PruningMethod pruningMethod,double testProportion){$  super(maxDepth,minSamples,pruningMethod,testProportion);$  setRandomFeatureCount(numFeatures);$}$
protected void fireCommentEvent(char[] chars,int start,int length) throws org.xml.sax.SAXException {$  if (m_tracer != null) {$    flushMyWriter();$    m_tracer.fireGenerateEvent(SerializerTrace.EVENTTYPE_COMMENT,new String(chars,start,length));$  }$}$
private void init(Context context,AttributeSet attrs,RuqusTheme theme){$  inflate(context,R.layout.rqv_card,this);$  outlineView=(FrameLayout)findViewById(R.id.outline);$  outlineTextView=(TextView)findViewById(R.id.outline_text);$  cardView=(CardView)findViewById(R.id.card);$  cardTextView=(TextView)findViewById(R.id.card_text);$  setTheme(theme);$  TypedArray typedArray=context.obtainStyledAttributes(attrs,R.styleable.RQVCard);$  mode=typedArray.getInt(R.styleable.RQVCard_rqv_card_mode,0) == 0 ? Mode.OUTLINE : Mode.CARD;$  outlineTextView.setText(typedArray.getString(R.styleable.RQVCard_rqv_outline_text));$  cardTextView.setText(typedArray.getString(R.styleable.RQVCard_rqv_card_text));$  typedArray.recycle();$}$
public void onUndeploy(ClassLoader ldr){$  for (  Class<?> cls : descByCls.keySet()) {$    if (ldr.equals(cls.getClassLoader()))     descByCls.remove(cls);$  }$  U.clearClassCache(ldr);$}$
@Override public int compare(final Long o1,final Long o2){$  if (o1.longValue() < o2.longValue())   return 1;$  if (o1.longValue() > o2.longValue())   return -1;$  return 0;$}$
public void testResourceParameterOfListType(){$  doTest();$}$
public TeXFormula add(String s) throws ParseException {$  if (s != null && s.length() != 0) {$    textStyle=null;$    add(new TeXFormula(s));$  }$  return this;$}$
public ResponseEntity<List<Recommendation>> defaultRecommendations(int productId){$  LOG.warn("Using fallback method for recommendation-service");$  return util.createResponse(Arrays.asList(new Recommendation(productId,1,"Fallback Author 1",1,"Fallback Content 1")),HttpStatus.OK);$}$
private void cmd_annotateDifference(){$  BigDecimal previousValue, actualValue, difference;$  previousValue=(BigDecimal)v_previousBalance.getValue();$  actualValue=(BigDecimal)v_ActualBalance.getValue();$  difference=actualValue.subtract(previousValue);$  MCashBook cashBook=new MCashBook(p_ctx,p_pos.getC_CashBook_ID(),null);$  Timestamp today=TimeUtil.getDay(System.currentTimeMillis());$  MCash cash=MCash.get(p_ctx,cashBook.getC_CashBook_ID(),today,null);$  if (cash != null && cash.get_ID() != 0 && difference.compareTo(cash.getStatementDifference()) != 0) {$    MCashLine cl=new MCashLine(cash);$    cl.setCashType(MCashLine.CASHTYPE_Difference);$    cl.setAmount(difference);$    cl.setDescription(Msg.translate(p_pos.getCtx(),"Cash Scrutiny -> Before: ") + previousValue + " Now: "+ actualValue);$    cl.saveEx();$  }$  cash=MCash.get(p_pos.getCtx(),p_pos.getC_CashBook_ID(),today,null);$  v_previousBalance.setValue(cash.getEndingBalance());$  v_ActualBalance.setValue(Env.ZERO);$  v_difference.setValue(Env.ZERO);$}$
public boolean hasJpgThumbnail(){$  if (getThumbnailType() != ExifDirectory.COMPRESSION_JPEG)   return false;$  byte[] thumbData;$  try {$    ExifDirectory exif=(ExifDirectory)metadata.getDirectory(ExifDirectory.class);$    thumbData=exif.getThumbnailData();$  }$ catch (  MetadataException e) {$    return false;$  }$  if (thumbData.length > 2) {$    int magicNumber;$    magicNumber=(thumbData[0] & 0xFF) << 8;$    magicNumber|=(thumbData[1] & 0xFF);$    if (magicNumber == ImageMetadataReader.JPEG_FILE_MAGIC_NUMBER)     return true;$  }$  return false;$}$
private void waitForRScriptInitialized() throws InterpreterException {$synchronized (rScriptInitializeNotifier) {$    long startTime=System.nanoTime();$    while (rScriptInitialized == false && rScriptRunning && System.nanoTime() - startTime < 10L * 1000 * 1000000) {$      try {$        rScriptInitializeNotifier.wait(1000);$      }$ catch (      InterruptedException e) {$        logger.error(e.getMessage(),e);$      }$    }$  }$  String errorMessage="";$  try {$    initialOutput.flush();$    errorMessage=new String(initialOutput.toByteArray());$  }$ catch (  IOException e) {$    e.printStackTrace();$  }$  if (rScriptInitialized == false) {$    throw new InterpreterException("sparkr is not responding " + errorMessage);$  }$}$
private DefaultUnitConverter(){$}$
public static String morpha(String text,boolean tags){$  if (text.isEmpty()) {$    return "";$  }$  String[] textParts=whitespace.split(text);$  StringBuilder result=new StringBuilder();$  try {$    for (    String textPart : textParts) {$      Morpha morpha=new Morpha(new StringReader(textPart),tags);$      if (result.length() != 0) {$        result.append(" ");$      }$      result.append(morpha.next());$    }$  }$ catch (  Error e) {$    return text;$  }$catch (  java.io.IOException e) {$    return text;$  }$  return result.toString();$}$
protected void readUnzipedResponse(InputStream input) throws IOException {$  super.readResponse(input);$}$
public EventStream<S> events() throws Exception {$  return EventStream.empty();$}$
public String lookupCacheSizeTipText(){$  return "Set the maximum size of the lookup cache of evaluated subsets. This is " + "expressed as a multiplier of the number of attributes in the data set. " + "(default = 1).";$}$
private SimpleObject providerToJson(Provider provider){$  SimpleObject jsonForm=new SimpleObject();$  if (provider != null) {$    jsonForm.add(USER_ID,provider.getUuid());$    jsonForm.add(FULL_NAME,provider.getName());$    Person person=provider.getPerson();$    if (person != null) {$      jsonForm.add(GIVEN_NAME,person.getGivenName());$      jsonForm.add(FAMILY_NAME,person.getFamilyName());$    }$  }$  return jsonForm;$}$
@SuppressWarnings("unchecked") public synchronized List<Relationship> findAllRelationshipsTo(Vertex vertex){$  Query query=this.entityManager.createQuery("Select r from Relationship r where r.target = :vertex or r.type = :vertex");$  setHints(query);$  query.setParameter("vertex",vertex);$  return query.getResultList();$}$
public static String convertMethodSignature(InvokeInstruction inv,ConstantPoolGen cpg){$  return convertMethodSignature(inv.getClassName(cpg),inv.getName(cpg),inv.getSignature(cpg));$}$
@Override public int count(Selector obj){$  if ((obj.getMask() & Selector.MASK_INSTANCE) > 0) {$    if (device.findObject(obj.toUiSelector()).exists())     return 1;$ else     return 0;$  }$ else {$    UiSelector sel=obj.toUiSelector();$    if (!device.findObject(sel).exists())     return 0;$    int low=1;$    int high=2;$    sel=sel.instance(high - 1);$    while (device.findObject(sel).exists()) {$      low=high;$      high=high * 2;$      sel=sel.instance(high - 1);$    }$    while (high > low + 1) {$      int mid=(low + high) / 2;$      sel=sel.instance(mid - 1);$      if (device.findObject(sel).exists())       low=mid;$ else       high=mid;$    }$    return low;$  }$}$
private boolean isComputeHost(ComputeDescription computeDescription){$  List<String> supportedChildren=computeDescription.supportedChildren;$  return supportedChildren != null && supportedChildren.contains(ComputeType.VM_GUEST.name());$}$
public File prepareTestDir(String logDirName) throws Exception {$  File logDir=new File(logDirName);$  FilePath path=new FilePath(logDir.getAbsolutePath());$  fileIO.delete(path,true);$  fileIO.mkdir(path);$  return logDir;$}$
public void receiveErrorqueryAssociatedPortsForProcessor(java.lang.Exception e){$}$
@Override public Object clone() throws CloneNotSupportedException {$  return super.clone();$}$
private void dump(File from,OutputStream out) throws IOException {$  writeHeader(from,out);$  FileInputStream in=null;$  try {$    in=new FileInputStream(from);$    int count;$    while ((count=in.read(buffer)) != -1) {$      out.write(buffer,0,count);$    }$  }$  finally {$    closeQuietly(in);$  }$}$
public static long lastLocalId(){$  return cntGen.get();$}$
RoleEventImpl(Region region,Operation op,Object callbackArgument,boolean originRemote,DistributedMember distributedMember,Set requiredRoles){$  super(region,op,callbackArgument,originRemote,distributedMember);$  this.requiredRoles=Collections.unmodifiableSet(requiredRoles);$}$
public QLFFilesCollection(File directory,String extension,Class<F> featureClass,String pathRegexFind,String pathRegexRep){$  this(featureClass,pathRegexFind,pathRegexRep);$  processDirs(directory,extension);$}$
public static void main(String[] args) throws IOException {$  boolean enableOutput=true;$  boolean outputToFile=false;$  String inputFolder=LrMc.class.getClassLoader().getResource("workload/planetlab").getPath();$  String outputFolder="output";$  String workload="20110303";$  String vmAllocationPolicy="lr";$  String vmSelectionPolicy="mc";$  String parameter="1.2";$  new PlanetLabRunner(enableOutput,outputToFile,inputFolder,outputFolder,workload,vmAllocationPolicy,vmSelectionPolicy,parameter);$}$
void make(BulkTest bulk){$  Class c=bulk.getClass();$  Method[] all=c.getMethods();$  for (int i=0; i < all.length; i++) {$    if (isTest(all[i]))     addTest(bulk,all[i]);$    if (isBulk(all[i]))     addBulk(bulk,all[i]);$  }$}$
private void readObject(java.io.ObjectInputStream in) throws IOException, ClassNotFoundException {$  String inName=(String)in.readObject();$  String inDescription=(String)in.readObject();$  Object inValue=in.readObject();$  Class inClass=(Class)in.readObject();$  boolean inUserModifiable=in.readBoolean();$  Assert.assertTrue(inName != null);$  Assert.assertTrue(inDescription != null);$  Assert.assertTrue(inValue != null);$  Assert.assertTrue(inClass != null);$  this.deserialized=true;$  this.name=inName;$  setInternalState(inDescription,inValue,inClass,inUserModifiable);$}$
private void returnData(Object ret){$  if (myHost != null) {$    myHost.returnData(ret);$  }$}$
public static String escape(String s){$  if (s == null)   return null;$  StringBuffer sb=new StringBuffer();$  escape(s,sb);$  return sb.toString();$}$
public ArrayDeque<E> clone(){$  try {$    @SuppressWarnings("unchecked") ArrayDeque<E> result=(ArrayDeque<E>)super.clone();$    result.elements=Arrays.copyOf(elements,elements.length);$    return result;$  }$ catch (  CloneNotSupportedException e) {$    throw new AssertionError();$  }$}$
